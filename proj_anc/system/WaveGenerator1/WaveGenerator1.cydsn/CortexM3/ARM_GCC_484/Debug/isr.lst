ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"isr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.isr_Start,"ax",%progbits
  19              		.align	2
  20              		.global	isr_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	isr_Start, %function
  24              	isr_Start:
  25              	.LFB56:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\isr.c"
   1:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/isr.c **** * File Name: isr.c  
   3:.\Generated_Source\PSoC5/isr.c **** * Version 1.70
   4:.\Generated_Source\PSoC5/isr.c **** *
   5:.\Generated_Source\PSoC5/isr.c **** *  Description:
   6:.\Generated_Source\PSoC5/isr.c **** *   API for controlling the state of an interrupt.
   7:.\Generated_Source\PSoC5/isr.c **** *
   8:.\Generated_Source\PSoC5/isr.c **** *
   9:.\Generated_Source\PSoC5/isr.c **** *  Note:
  10:.\Generated_Source\PSoC5/isr.c **** *
  11:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/isr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/isr.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:.\Generated_Source\PSoC5/isr.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:.\Generated_Source\PSoC5/isr.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/isr.c **** 
  18:.\Generated_Source\PSoC5/isr.c **** 
  19:.\Generated_Source\PSoC5/isr.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC5/isr.c **** #include <CyLib.h>
  21:.\Generated_Source\PSoC5/isr.c **** #include <isr.h>
  22:.\Generated_Source\PSoC5/isr.c **** 
  23:.\Generated_Source\PSoC5/isr.c **** #if !defined(isr__REMOVED) /* Check for removal by optimization */
  24:.\Generated_Source\PSoC5/isr.c **** 
  25:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC5/isr.c **** *  Place your includes, defines and code here 
  27:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************/
  28:.\Generated_Source\PSoC5/isr.c **** /* `#START isr_intc` */
  29:.\Generated_Source\PSoC5/isr.c **** #include <project.h>
  30:.\Generated_Source\PSoC5/isr.c **** #include "canceller.h"
  31:.\Generated_Source\PSoC5/isr.c **** #include "ANC.h"
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 2


  32:.\Generated_Source\PSoC5/isr.c **** #include <stdlib.h>
  33:.\Generated_Source\PSoC5/isr.c **** #include <stdio.h>
  34:.\Generated_Source\PSoC5/isr.c **** #include <string.h>
  35:.\Generated_Source\PSoC5/isr.c **** 
  36:.\Generated_Source\PSoC5/isr.c **** // Uncomment one of the following 3 modes:
  37:.\Generated_Source\PSoC5/isr.c **** //
  38:.\Generated_Source\PSoC5/isr.c **** // This mode puts full-scale sine waves out on both DACSs, to HS and LS outputs
  39:.\Generated_Source\PSoC5/isr.c **** //#define MODE_CALIBRATE
  40:.\Generated_Source\PSoC5/isr.c **** //
  41:.\Generated_Source\PSoC5/isr.c **** // Normal operation of the active noise canceller (with sine-wave undesired signal)
  42:.\Generated_Source\PSoC5/isr.c **** #define MODE_CANCELLER
  43:.\Generated_Source\PSoC5/isr.c **** //
  44:.\Generated_Source\PSoC5/isr.c **** // This mode puts out random data onto LS output, captures MIC input, and sends to host via serial 
  45:.\Generated_Source\PSoC5/isr.c **** //#define MODE_CHARACTERIZE
  46:.\Generated_Source\PSoC5/isr.c **** 
  47:.\Generated_Source\PSoC5/isr.c **** #ifdef MODE_CHARACTERIZE
  48:.\Generated_Source\PSoC5/isr.c **** uint8 cap_array[NUM_SAMPS_TO_CAPTURE];
  49:.\Generated_Source\PSoC5/isr.c **** extern int n;
  50:.\Generated_Source\PSoC5/isr.c **** #endif
  51:.\Generated_Source\PSoC5/isr.c **** 
  52:.\Generated_Source\PSoC5/isr.c **** #ifndef MODE_CHARACTERIZE
  53:.\Generated_Source\PSoC5/isr.c **** extern int wave_table[WAVESIZE];
  54:.\Generated_Source\PSoC5/isr.c **** #endif
  55:.\Generated_Source\PSoC5/isr.c **** 
  56:.\Generated_Source\PSoC5/isr.c **** /* `#END` */
  57:.\Generated_Source\PSoC5/isr.c **** 
  58:.\Generated_Source\PSoC5/isr.c **** #ifndef CYINT_IRQ_BASE
  59:.\Generated_Source\PSoC5/isr.c **** #define CYINT_IRQ_BASE      16
  60:.\Generated_Source\PSoC5/isr.c **** #endif /* CYINT_IRQ_BASE */
  61:.\Generated_Source\PSoC5/isr.c **** #ifndef CYINT_VECT_TABLE
  62:.\Generated_Source\PSoC5/isr.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  63:.\Generated_Source\PSoC5/isr.c **** #endif /* CYINT_VECT_TABLE */
  64:.\Generated_Source\PSoC5/isr.c **** 
  65:.\Generated_Source\PSoC5/isr.c **** /* Declared in startup, used to set unused interrupts to. */
  66:.\Generated_Source\PSoC5/isr.c **** CY_ISR_PROTO(IntDefaultHandler);
  67:.\Generated_Source\PSoC5/isr.c **** 
  68:.\Generated_Source\PSoC5/isr.c **** 
  69:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
  70:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Start
  71:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
  72:.\Generated_Source\PSoC5/isr.c **** *
  73:.\Generated_Source\PSoC5/isr.c **** * Summary:
  74:.\Generated_Source\PSoC5/isr.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  75:.\Generated_Source\PSoC5/isr.c **** *  sets the default interrupt vector, sets the priority from the value in the
  76:.\Generated_Source\PSoC5/isr.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  77:.\Generated_Source\PSoC5/isr.c **** *  interrupt controller.
  78:.\Generated_Source\PSoC5/isr.c **** *
  79:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
  80:.\Generated_Source\PSoC5/isr.c **** *   None
  81:.\Generated_Source\PSoC5/isr.c **** *
  82:.\Generated_Source\PSoC5/isr.c **** * Return:
  83:.\Generated_Source\PSoC5/isr.c **** *   None
  84:.\Generated_Source\PSoC5/isr.c **** *
  85:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
  86:.\Generated_Source\PSoC5/isr.c **** void isr_Start(void)
  87:.\Generated_Source\PSoC5/isr.c **** {
  27              		.loc 1 87 0
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 3


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  88:.\Generated_Source\PSoC5/isr.c ****     /* For all we know the interrupt is active. */
  89:.\Generated_Source\PSoC5/isr.c ****     isr_Disable();
  37              		.loc 1 89 0
  38 0004 FFF7FEFF 		bl	isr_Disable
  90:.\Generated_Source\PSoC5/isr.c **** 
  91:.\Generated_Source\PSoC5/isr.c ****     /* Set the ISR to point to the isr Interrupt. */
  92:.\Generated_Source\PSoC5/isr.c ****     isr_SetVector(&isr_Interrupt);
  39              		.loc 1 92 0
  40 0008 0448     		ldr	r0, .L2
  41 000a FFF7FEFF 		bl	isr_SetVector
  93:.\Generated_Source\PSoC5/isr.c **** 
  94:.\Generated_Source\PSoC5/isr.c ****     /* Set the priority. */
  95:.\Generated_Source\PSoC5/isr.c ****     isr_SetPriority((uint8)isr_INTC_PRIOR_NUMBER);
  42              		.loc 1 95 0
  43 000e 0720     		movs	r0, #7
  44 0010 FFF7FEFF 		bl	isr_SetPriority
  96:.\Generated_Source\PSoC5/isr.c **** 
  97:.\Generated_Source\PSoC5/isr.c ****     /* Enable it. */
  98:.\Generated_Source\PSoC5/isr.c ****     isr_Enable();
  45              		.loc 1 98 0
  46 0014 FFF7FEFF 		bl	isr_Enable
  99:.\Generated_Source\PSoC5/isr.c **** }
  47              		.loc 1 99 0
  48 0018 80BD     		pop	{r7, pc}
  49              	.L3:
  50 001a 00BF     		.align	2
  51              	.L2:
  52 001c 00000000 		.word	isr_Interrupt
  53              		.cfi_endproc
  54              	.LFE56:
  55              		.size	isr_Start, .-isr_Start
  56              		.section	.text.isr_StartEx,"ax",%progbits
  57              		.align	2
  58              		.global	isr_StartEx
  59              		.thumb
  60              		.thumb_func
  61              		.type	isr_StartEx, %function
  62              	isr_StartEx:
  63              	.LFB57:
 100:.\Generated_Source\PSoC5/isr.c **** 
 101:.\Generated_Source\PSoC5/isr.c **** 
 102:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_StartEx
 104:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 105:.\Generated_Source\PSoC5/isr.c **** *
 106:.\Generated_Source\PSoC5/isr.c **** * Summary:
 107:.\Generated_Source\PSoC5/isr.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
 108:.\Generated_Source\PSoC5/isr.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 4


 109:.\Generated_Source\PSoC5/isr.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
 110:.\Generated_Source\PSoC5/isr.c **** *  the interrupt to the interrupt controller.
 111:.\Generated_Source\PSoC5/isr.c **** *  
 112:.\Generated_Source\PSoC5/isr.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 113:.\Generated_Source\PSoC5/isr.c **** *  used to provide consistent definition across compilers:
 114:.\Generated_Source\PSoC5/isr.c **** *  
 115:.\Generated_Source\PSoC5/isr.c **** *  Function definition example:
 116:.\Generated_Source\PSoC5/isr.c **** *   CY_ISR(MyISR)
 117:.\Generated_Source\PSoC5/isr.c **** *   {
 118:.\Generated_Source\PSoC5/isr.c **** *   }
 119:.\Generated_Source\PSoC5/isr.c **** *   Function prototype example:
 120:.\Generated_Source\PSoC5/isr.c **** *   CY_ISR_PROTO(MyISR);
 121:.\Generated_Source\PSoC5/isr.c **** *
 122:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
 123:.\Generated_Source\PSoC5/isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
 124:.\Generated_Source\PSoC5/isr.c **** *
 125:.\Generated_Source\PSoC5/isr.c **** * Return:
 126:.\Generated_Source\PSoC5/isr.c **** *   None
 127:.\Generated_Source\PSoC5/isr.c **** *
 128:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 129:.\Generated_Source\PSoC5/isr.c **** void isr_StartEx(cyisraddress address)
 130:.\Generated_Source\PSoC5/isr.c **** {
  64              		.loc 1 130 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 8
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              		.cfi_def_cfa_offset 16
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
 131:.\Generated_Source\PSoC5/isr.c ****     /* For all we know the interrupt is active. */
 132:.\Generated_Source\PSoC5/isr.c ****     isr_Disable();
  77              		.loc 1 132 0
  78 0008 FFF7FEFF 		bl	isr_Disable
 133:.\Generated_Source\PSoC5/isr.c **** 
 134:.\Generated_Source\PSoC5/isr.c ****     /* Set the ISR to point to the isr Interrupt. */
 135:.\Generated_Source\PSoC5/isr.c ****     isr_SetVector(address);
  79              		.loc 1 135 0
  80 000c 7868     		ldr	r0, [r7, #4]
  81 000e FFF7FEFF 		bl	isr_SetVector
 136:.\Generated_Source\PSoC5/isr.c **** 
 137:.\Generated_Source\PSoC5/isr.c ****     /* Set the priority. */
 138:.\Generated_Source\PSoC5/isr.c ****     isr_SetPriority((uint8)isr_INTC_PRIOR_NUMBER);
  82              		.loc 1 138 0
  83 0012 0720     		movs	r0, #7
  84 0014 FFF7FEFF 		bl	isr_SetPriority
 139:.\Generated_Source\PSoC5/isr.c **** 
 140:.\Generated_Source\PSoC5/isr.c ****     /* Enable it. */
 141:.\Generated_Source\PSoC5/isr.c ****     isr_Enable();
  85              		.loc 1 141 0
  86 0018 FFF7FEFF 		bl	isr_Enable
 142:.\Generated_Source\PSoC5/isr.c **** }
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 5


  87              		.loc 1 142 0
  88 001c 0837     		adds	r7, r7, #8
  89 001e BD46     		mov	sp, r7
  90              		@ sp needed
  91 0020 80BD     		pop	{r7, pc}
  92              		.cfi_endproc
  93              	.LFE57:
  94              		.size	isr_StartEx, .-isr_StartEx
  95 0022 00BF     		.section	.text.isr_Stop,"ax",%progbits
  96              		.align	2
  97              		.global	isr_Stop
  98              		.thumb
  99              		.thumb_func
 100              		.type	isr_Stop, %function
 101              	isr_Stop:
 102              	.LFB58:
 143:.\Generated_Source\PSoC5/isr.c **** 
 144:.\Generated_Source\PSoC5/isr.c **** 
 145:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 146:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Stop
 147:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 148:.\Generated_Source\PSoC5/isr.c **** *
 149:.\Generated_Source\PSoC5/isr.c **** * Summary:
 150:.\Generated_Source\PSoC5/isr.c **** *   Disables and removes the interrupt.
 151:.\Generated_Source\PSoC5/isr.c **** *
 152:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
 153:.\Generated_Source\PSoC5/isr.c **** *   None
 154:.\Generated_Source\PSoC5/isr.c **** *
 155:.\Generated_Source\PSoC5/isr.c **** * Return:
 156:.\Generated_Source\PSoC5/isr.c **** *   None
 157:.\Generated_Source\PSoC5/isr.c **** *
 158:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 159:.\Generated_Source\PSoC5/isr.c **** void isr_Stop(void)
 160:.\Generated_Source\PSoC5/isr.c **** {
 103              		.loc 1 160 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107 0000 80B5     		push	{r7, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 161:.\Generated_Source\PSoC5/isr.c ****     /* Disable this interrupt. */
 162:.\Generated_Source\PSoC5/isr.c ****     isr_Disable();
 113              		.loc 1 162 0
 114 0004 FFF7FEFF 		bl	isr_Disable
 163:.\Generated_Source\PSoC5/isr.c **** 
 164:.\Generated_Source\PSoC5/isr.c ****     /* Set the ISR to point to the passive one. */
 165:.\Generated_Source\PSoC5/isr.c ****     isr_SetVector(&IntDefaultHandler);
 115              		.loc 1 165 0
 116 0008 0148     		ldr	r0, .L6
 117 000a FFF7FEFF 		bl	isr_SetVector
 166:.\Generated_Source\PSoC5/isr.c **** }
 118              		.loc 1 166 0
 119 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 6


 120              	.L7:
 121              		.align	2
 122              	.L6:
 123 0010 00000000 		.word	IntDefaultHandler
 124              		.cfi_endproc
 125              	.LFE58:
 126              		.size	isr_Stop, .-isr_Stop
 127              		.section	.text.isr_Interrupt,"ax",%progbits
 128              		.align	2
 129              		.global	isr_Interrupt
 130              		.thumb
 131              		.thumb_func
 132              		.type	isr_Interrupt, %function
 133              	isr_Interrupt:
 134              	.LFB59:
 167:.\Generated_Source\PSoC5/isr.c **** 
 168:.\Generated_Source\PSoC5/isr.c **** 
 169:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 170:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Interrupt
 171:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 172:.\Generated_Source\PSoC5/isr.c **** *
 173:.\Generated_Source\PSoC5/isr.c **** * Summary:
 174:.\Generated_Source\PSoC5/isr.c **** *   The default Interrupt Service Routine for isr.
 175:.\Generated_Source\PSoC5/isr.c **** *
 176:.\Generated_Source\PSoC5/isr.c **** *   Add custom code between the coments to keep the next version of this file
 177:.\Generated_Source\PSoC5/isr.c **** *   from over writting your code.
 178:.\Generated_Source\PSoC5/isr.c **** *
 179:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
 180:.\Generated_Source\PSoC5/isr.c **** *
 181:.\Generated_Source\PSoC5/isr.c **** * Return:
 182:.\Generated_Source\PSoC5/isr.c **** *   None
 183:.\Generated_Source\PSoC5/isr.c **** *
 184:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 185:.\Generated_Source\PSoC5/isr.c **** CY_ISR(isr_Interrupt)
 186:.\Generated_Source\PSoC5/isr.c **** {
 135              		.loc 1 186 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 84B0     		sub	sp, sp, #16
 144              		.cfi_def_cfa_offset 24
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 187:.\Generated_Source\PSoC5/isr.c ****     /*  Place your Interrupt code here. */
 188:.\Generated_Source\PSoC5/isr.c ****     /* `#START isr_Interrupt` */
 189:.\Generated_Source\PSoC5/isr.c ****     
 190:.\Generated_Source\PSoC5/isr.c **** #define DC_EST_NUM_SAMPS_LOG2   (12)
 191:.\Generated_Source\PSoC5/isr.c **** #define DC_EST_NUM_SAMPS        (1 << DC_EST_NUM_SAMPS_LOG2)
 192:.\Generated_Source\PSoC5/isr.c ****     
 193:.\Generated_Source\PSoC5/isr.c ****                            // Discrete time index
 194:.\Generated_Source\PSoC5/isr.c **** 
 195:.\Generated_Source\PSoC5/isr.c ****     int x=0;
 147              		.loc 1 195 0
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 7


 148 0006 0023     		movs	r3, #0
 149 0008 BB60     		str	r3, [r7, #8]
 196:.\Generated_Source\PSoC5/isr.c ****     static int dc_count = 0;
 197:.\Generated_Source\PSoC5/isr.c ****     static int dc_sum = 0;
 198:.\Generated_Source\PSoC5/isr.c ****     
 199:.\Generated_Source\PSoC5/isr.c **** #ifndef MODE_CHARACTERIZE    
 200:.\Generated_Source\PSoC5/isr.c ****     static int wave_idx=0;
 201:.\Generated_Source\PSoC5/isr.c **** #endif
 202:.\Generated_Source\PSoC5/isr.c **** 
 203:.\Generated_Source\PSoC5/isr.c **** #ifdef MODE_CANCELLER
 204:.\Generated_Source\PSoC5/isr.c ****     int e_;
 205:.\Generated_Source\PSoC5/isr.c ****     int y;
 206:.\Generated_Source\PSoC5/isr.c **** #endif
 207:.\Generated_Source\PSoC5/isr.c **** 
 208:.\Generated_Source\PSoC5/isr.c **** //    Start_isr_Write(1);
 209:.\Generated_Source\PSoC5/isr.c **** //    Start_isr_Write(0);
 210:.\Generated_Source\PSoC5/isr.c **** 
 211:.\Generated_Source\PSoC5/isr.c **** #ifndef MODE_CHARACTERIZE
 212:.\Generated_Source\PSoC5/isr.c ****      x = wave_table[wave_idx];
 150              		.loc 1 212 0
 151 000a 324B     		ldr	r3, .L15
 152 000c 1A68     		ldr	r2, [r3]
 153 000e 324B     		ldr	r3, .L15+4
 154 0010 53F82230 		ldr	r3, [r3, r2, lsl #2]
 155 0014 BB60     		str	r3, [r7, #8]
 213:.\Generated_Source\PSoC5/isr.c **** 
 214:.\Generated_Source\PSoC5/isr.c ****     if (dc_count == DC_EST_NUM_SAMPS)
 156              		.loc 1 214 0
 157 0016 314B     		ldr	r3, .L15+8
 158 0018 1B68     		ldr	r3, [r3]
 159 001a B3F5805F 		cmp	r3, #4096
 160 001e 07D1     		bne	.L9
 215:.\Generated_Source\PSoC5/isr.c ****     {
 216:.\Generated_Source\PSoC5/isr.c ****         // Convert sine wave from Q20.12 to 8-bit offset binary
 217:.\Generated_Source\PSoC5/isr.c ****         VDAC8_2_ls_SetValue((x>>5)+128);
 161              		.loc 1 217 0
 162 0020 BB68     		ldr	r3, [r7, #8]
 163 0022 5B11     		asrs	r3, r3, #5
 164 0024 DBB2     		uxtb	r3, r3
 165 0026 803B     		subs	r3, r3, #128
 166 0028 DBB2     		uxtb	r3, r3
 167 002a 1846     		mov	r0, r3
 168 002c FFF7FEFF 		bl	VDAC8_2_ls_SetValue
 169              	.L9:
 218:.\Generated_Source\PSoC5/isr.c ****     }
 219:.\Generated_Source\PSoC5/isr.c **** 
 220:.\Generated_Source\PSoC5/isr.c ****     // Advance to next sample in wave  table
 221:.\Generated_Source\PSoC5/isr.c ****     ++wave_idx;
 170              		.loc 1 221 0
 171 0030 284B     		ldr	r3, .L15
 172 0032 1B68     		ldr	r3, [r3]
 173 0034 5A1C     		adds	r2, r3, #1
 174 0036 274B     		ldr	r3, .L15
 175 0038 1A60     		str	r2, [r3]
 222:.\Generated_Source\PSoC5/isr.c ****     if (wave_idx == WAVESIZE) wave_idx=0;
 176              		.loc 1 222 0
 177 003a 264B     		ldr	r3, .L15
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 8


 178 003c 1B68     		ldr	r3, [r3]
 179 003e 142B     		cmp	r3, #20
 180 0040 02D1     		bne	.L10
 181              		.loc 1 222 0 is_stmt 0 discriminator 1
 182 0042 244B     		ldr	r3, .L15
 183 0044 0022     		movs	r2, #0
 184 0046 1A60     		str	r2, [r3]
 185              	.L10:
 223:.\Generated_Source\PSoC5/isr.c **** #else
 224:.\Generated_Source\PSoC5/isr.c ****     x = rand();   
 225:.\Generated_Source\PSoC5/isr.c **** 
 226:.\Generated_Source\PSoC5/isr.c ****     VDAC8_2_ls_SetValue(x & 0xFF);
 227:.\Generated_Source\PSoC5/isr.c **** #endif
 228:.\Generated_Source\PSoC5/isr.c **** 
 229:.\Generated_Source\PSoC5/isr.c **** #ifdef MODE_CANCELLER       
 230:.\Generated_Source\PSoC5/isr.c ****     //canceller code goes here
 231:.\Generated_Source\PSoC5/isr.c ****     // e_ is 12-bit offset binary, range 0 to 4095
 232:.\Generated_Source\PSoC5/isr.c ****     e_ =  ADC_SAR_GetResult16();          //Set's value to the ADC output (16bit 2's comp value)
 186              		.loc 1 232 0 is_stmt 1
 187 0048 FFF7FEFF 		bl	ADC_SAR_GetResult16
 188 004c 0346     		mov	r3, r0
 189 004e 7B60     		str	r3, [r7, #4]
 233:.\Generated_Source\PSoC5/isr.c ****         
 234:.\Generated_Source\PSoC5/isr.c ****     y = (canceller_new_sample(x) + (1<<4)) >> 5;   // Get signed value, 7 fractional bits (8 bits t
 190              		.loc 1 234 0
 191 0050 B868     		ldr	r0, [r7, #8]
 192 0052 FFF7FEFF 		bl	canceller_new_sample
 193 0056 0346     		mov	r3, r0
 194 0058 1033     		adds	r3, r3, #16
 195 005a 5B11     		asrs	r3, r3, #5
 196 005c FB60     		str	r3, [r7, #12]
 235:.\Generated_Source\PSoC5/isr.c ****     if (y > 127)  y =  127;
 197              		.loc 1 235 0
 198 005e FB68     		ldr	r3, [r7, #12]
 199 0060 7F2B     		cmp	r3, #127
 200 0062 01DD     		ble	.L11
 201              		.loc 1 235 0 is_stmt 0 discriminator 1
 202 0064 7F23     		movs	r3, #127
 203 0066 FB60     		str	r3, [r7, #12]
 204              	.L11:
 236:.\Generated_Source\PSoC5/isr.c ****     if (y < -128) y = -128;
 205              		.loc 1 236 0 is_stmt 1
 206 0068 FB68     		ldr	r3, [r7, #12]
 207 006a 13F1800F 		cmn	r3, #128
 208 006e 02DA     		bge	.L12
 209              		.loc 1 236 0 is_stmt 0 discriminator 1
 210 0070 6FF07F03 		mvn	r3, #127
 211 0074 FB60     		str	r3, [r7, #12]
 212              	.L12:
 237:.\Generated_Source\PSoC5/isr.c ****     
 238:.\Generated_Source\PSoC5/isr.c ****     // Convert value to offset binary
 239:.\Generated_Source\PSoC5/isr.c ****     if (dc_count == DC_EST_NUM_SAMPS)
 213              		.loc 1 239 0 is_stmt 1
 214 0076 194B     		ldr	r3, .L15+8
 215 0078 1B68     		ldr	r3, [r3]
 216 007a B3F5805F 		cmp	r3, #4096
 217 007e 07D1     		bne	.L13
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 9


 240:.\Generated_Source\PSoC5/isr.c ****     {
 241:.\Generated_Source\PSoC5/isr.c ****         VDAC8_1_hs_SetValue(y + 128);              
 218              		.loc 1 241 0
 219 0080 FB68     		ldr	r3, [r7, #12]
 220 0082 DBB2     		uxtb	r3, r3
 221 0084 803B     		subs	r3, r3, #128
 222 0086 DBB2     		uxtb	r3, r3
 223 0088 1846     		mov	r0, r3
 224 008a FFF7FEFF 		bl	VDAC8_1_hs_SetValue
 225 008e 16E0     		b	.L14
 226              	.L13:
 242:.\Generated_Source\PSoC5/isr.c ****     }
 243:.\Generated_Source\PSoC5/isr.c ****     else
 244:.\Generated_Source\PSoC5/isr.c ****     {
 245:.\Generated_Source\PSoC5/isr.c ****         dc_sum += e_;
 227              		.loc 1 245 0
 228 0090 134B     		ldr	r3, .L15+12
 229 0092 1A68     		ldr	r2, [r3]
 230 0094 7B68     		ldr	r3, [r7, #4]
 231 0096 1A44     		add	r2, r2, r3
 232 0098 114B     		ldr	r3, .L15+12
 233 009a 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC5/isr.c ****         
 247:.\Generated_Source\PSoC5/isr.c ****         ++dc_count;
 234              		.loc 1 247 0
 235 009c 0F4B     		ldr	r3, .L15+8
 236 009e 1B68     		ldr	r3, [r3]
 237 00a0 5A1C     		adds	r2, r3, #1
 238 00a2 0E4B     		ldr	r3, .L15+8
 239 00a4 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC5/isr.c ****         
 249:.\Generated_Source\PSoC5/isr.c ****         if (dc_count == DC_EST_NUM_SAMPS)
 240              		.loc 1 249 0
 241 00a6 0D4B     		ldr	r3, .L15+8
 242 00a8 1B68     		ldr	r3, [r3]
 243 00aa B3F5805F 		cmp	r3, #4096
 244 00ae 06D1     		bne	.L14
 250:.\Generated_Source\PSoC5/isr.c ****         {
 251:.\Generated_Source\PSoC5/isr.c ****             // Normalize to use as DC estimate
 252:.\Generated_Source\PSoC5/isr.c ****             dc_sum = (dc_sum + (1 << (DC_EST_NUM_SAMPS_LOG2-1)))>>DC_EST_NUM_SAMPS_LOG2;
 245              		.loc 1 252 0
 246 00b0 0B4B     		ldr	r3, .L15+12
 247 00b2 1B68     		ldr	r3, [r3]
 248 00b4 03F50063 		add	r3, r3, #2048
 249 00b8 1A13     		asrs	r2, r3, #12
 250 00ba 094B     		ldr	r3, .L15+12
 251 00bc 1A60     		str	r2, [r3]
 252              	.L14:
 253:.\Generated_Source\PSoC5/isr.c ****         }
 254:.\Generated_Source\PSoC5/isr.c ****     }
 255:.\Generated_Source\PSoC5/isr.c **** 
 256:.\Generated_Source\PSoC5/isr.c ****     canceller_coeff_update(e_ - dc_sum);
 253              		.loc 1 256 0
 254 00be 084B     		ldr	r3, .L15+12
 255 00c0 1B68     		ldr	r3, [r3]
 256 00c2 7A68     		ldr	r2, [r7, #4]
 257 00c4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 10


 258 00c6 1846     		mov	r0, r3
 259 00c8 FFF7FEFF 		bl	canceller_coeff_update
 257:.\Generated_Source\PSoC5/isr.c ****     //end canceller code  
 258:.\Generated_Source\PSoC5/isr.c **** #else
 259:.\Generated_Source\PSoC5/isr.c **** #ifdef MODE_CALIBRATE
 260:.\Generated_Source\PSoC5/isr.c ****     VDAC8_1_hs_SetValue((x>>5)+128);
 261:.\Generated_Source\PSoC5/isr.c **** #endif
 262:.\Generated_Source\PSoC5/isr.c **** #endif
 263:.\Generated_Source\PSoC5/isr.c **** 
 264:.\Generated_Source\PSoC5/isr.c **** #ifdef MODE_CHARACTERIZE
 265:.\Generated_Source\PSoC5/isr.c ****     if (n < NUM_SAMPS_TO_CAPTURE)
 266:.\Generated_Source\PSoC5/isr.c ****     {
 267:.\Generated_Source\PSoC5/isr.c ****         cap_array[n] = e_>>4;
 268:.\Generated_Source\PSoC5/isr.c ****         ++n;
 269:.\Generated_Source\PSoC5/isr.c ****     }
 270:.\Generated_Source\PSoC5/isr.c ****     else if (n == NUM_SAMPS_TO_CAPTURE)
 271:.\Generated_Source\PSoC5/isr.c ****     {
 272:.\Generated_Source\PSoC5/isr.c ****         int the_val;
 273:.\Generated_Source\PSoC5/isr.c ****         char my_string[32];
 274:.\Generated_Source\PSoC5/isr.c ****         int length;
 275:.\Generated_Source\PSoC5/isr.c ****         int i;
 276:.\Generated_Source\PSoC5/isr.c ****         
 277:.\Generated_Source\PSoC5/isr.c ****         for(i=0;i<NUM_SAMPS_TO_CAPTURE;++i)
 278:.\Generated_Source\PSoC5/isr.c ****         {
 279:.\Generated_Source\PSoC5/isr.c ****             the_val = cap_array[i];
 280:.\Generated_Source\PSoC5/isr.c ****             sprintf(my_string ,"%d\n", the_val & 0xFFFF);
 281:.\Generated_Source\PSoC5/isr.c ****             length = strlen(my_string);
 282:.\Generated_Source\PSoC5/isr.c ****             UART_1_PutArray( (uint8 *) my_string, length); 
 283:.\Generated_Source\PSoC5/isr.c ****         }
 284:.\Generated_Source\PSoC5/isr.c ****         ++n;
 285:.\Generated_Source\PSoC5/isr.c ****     }
 286:.\Generated_Source\PSoC5/isr.c **** #endif
 287:.\Generated_Source\PSoC5/isr.c **** //    End_isr_Write(1);
 288:.\Generated_Source\PSoC5/isr.c **** //    End_isr_Write(0);
 289:.\Generated_Source\PSoC5/isr.c **** }        
 260              		.loc 1 289 0
 261 00cc 1037     		adds	r7, r7, #16
 262 00ce BD46     		mov	sp, r7
 263              		@ sp needed
 264 00d0 80BD     		pop	{r7, pc}
 265              	.L16:
 266 00d2 00BF     		.align	2
 267              	.L15:
 268 00d4 00000000 		.word	wave_idx.6744
 269 00d8 00000000 		.word	wave_table
 270 00dc 04000000 		.word	dc_count.6742
 271 00e0 08000000 		.word	dc_sum.6743
 272              		.cfi_endproc
 273              	.LFE59:
 274              		.size	isr_Interrupt, .-isr_Interrupt
 275              		.section	.text.isr_SetVector,"ax",%progbits
 276              		.align	2
 277              		.global	isr_SetVector
 278              		.thumb
 279              		.thumb_func
 280              		.type	isr_SetVector, %function
 281              	isr_SetVector:
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 11


 282              	.LFB60:
 290:.\Generated_Source\PSoC5/isr.c **** 
 291:.\Generated_Source\PSoC5/isr.c ****     /* `#END` */
 292:.\Generated_Source\PSoC5/isr.c **** 
 293:.\Generated_Source\PSoC5/isr.c **** 
 294:.\Generated_Source\PSoC5/isr.c **** 
 295:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 296:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_SetVector
 297:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 298:.\Generated_Source\PSoC5/isr.c **** *
 299:.\Generated_Source\PSoC5/isr.c **** * Summary:
 300:.\Generated_Source\PSoC5/isr.c **** *   Change the ISR vector for the Interrupt. Note calling isr_Start
 301:.\Generated_Source\PSoC5/isr.c **** *   will override any effect this method would have had. To set the vector 
 302:.\Generated_Source\PSoC5/isr.c **** *   before the component has been started use isr_StartEx instead.
 303:.\Generated_Source\PSoC5/isr.c **** * 
 304:.\Generated_Source\PSoC5/isr.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 305:.\Generated_Source\PSoC5/isr.c **** *   used to provide consistent definition across compilers:
 306:.\Generated_Source\PSoC5/isr.c **** *
 307:.\Generated_Source\PSoC5/isr.c **** *   Function definition example:
 308:.\Generated_Source\PSoC5/isr.c **** *   CY_ISR(MyISR)
 309:.\Generated_Source\PSoC5/isr.c **** *   {
 310:.\Generated_Source\PSoC5/isr.c **** *   }
 311:.\Generated_Source\PSoC5/isr.c **** *
 312:.\Generated_Source\PSoC5/isr.c **** *   Function prototype example:
 313:.\Generated_Source\PSoC5/isr.c **** *     CY_ISR_PROTO(MyISR);
 314:.\Generated_Source\PSoC5/isr.c **** *
 315:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 316:.\Generated_Source\PSoC5/isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
 317:.\Generated_Source\PSoC5/isr.c **** *
 318:.\Generated_Source\PSoC5/isr.c **** * Return:
 319:.\Generated_Source\PSoC5/isr.c **** *   None
 320:.\Generated_Source\PSoC5/isr.c **** *
 321:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 322:.\Generated_Source\PSoC5/isr.c **** void isr_SetVector(cyisraddress address)
 323:.\Generated_Source\PSoC5/isr.c **** {
 283              		.loc 1 323 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 16
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 7, -4
 291 0002 85B0     		sub	sp, sp, #20
 292              		.cfi_def_cfa_offset 24
 293 0004 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 324:.\Generated_Source\PSoC5/isr.c ****     cyisraddress * ramVectorTable;
 325:.\Generated_Source\PSoC5/isr.c **** 
 326:.\Generated_Source\PSoC5/isr.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 296              		.loc 1 326 0
 297 0008 054B     		ldr	r3, .L18
 298 000a 1B68     		ldr	r3, [r3]
 299 000c FB60     		str	r3, [r7, #12]
 327:.\Generated_Source\PSoC5/isr.c **** 
 328:.\Generated_Source\PSoC5/isr.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)isr__INTC_NUMBER] = address;
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 12


 300              		.loc 1 328 0
 301 000e FB68     		ldr	r3, [r7, #12]
 302 0010 4433     		adds	r3, r3, #68
 303 0012 7A68     		ldr	r2, [r7, #4]
 304 0014 1A60     		str	r2, [r3]
 329:.\Generated_Source\PSoC5/isr.c **** }
 305              		.loc 1 329 0
 306 0016 1437     		adds	r7, r7, #20
 307 0018 BD46     		mov	sp, r7
 308              		@ sp needed
 309 001a 5DF8047B 		ldr	r7, [sp], #4
 310 001e 7047     		bx	lr
 311              	.L19:
 312              		.align	2
 313              	.L18:
 314 0020 08ED00E0 		.word	-536810232
 315              		.cfi_endproc
 316              	.LFE60:
 317              		.size	isr_SetVector, .-isr_SetVector
 318              		.section	.text.isr_GetVector,"ax",%progbits
 319              		.align	2
 320              		.global	isr_GetVector
 321              		.thumb
 322              		.thumb_func
 323              		.type	isr_GetVector, %function
 324              	isr_GetVector:
 325              	.LFB61:
 330:.\Generated_Source\PSoC5/isr.c **** 
 331:.\Generated_Source\PSoC5/isr.c **** 
 332:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 333:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_GetVector
 334:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 335:.\Generated_Source\PSoC5/isr.c **** *
 336:.\Generated_Source\PSoC5/isr.c **** * Summary:
 337:.\Generated_Source\PSoC5/isr.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 338:.\Generated_Source\PSoC5/isr.c **** *
 339:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 340:.\Generated_Source\PSoC5/isr.c **** *   None
 341:.\Generated_Source\PSoC5/isr.c **** *
 342:.\Generated_Source\PSoC5/isr.c **** * Return:
 343:.\Generated_Source\PSoC5/isr.c **** *   Address of the ISR in the interrupt vector table.
 344:.\Generated_Source\PSoC5/isr.c **** *
 345:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC5/isr.c **** cyisraddress isr_GetVector(void)
 347:.\Generated_Source\PSoC5/isr.c **** {
 326              		.loc 1 347 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331 0000 80B4     		push	{r7}
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 83B0     		sub	sp, sp, #12
 335              		.cfi_def_cfa_offset 16
 336 0004 00AF     		add	r7, sp, #0
 337              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 13


 348:.\Generated_Source\PSoC5/isr.c ****     cyisraddress * ramVectorTable;
 349:.\Generated_Source\PSoC5/isr.c **** 
 350:.\Generated_Source\PSoC5/isr.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 338              		.loc 1 350 0
 339 0006 054B     		ldr	r3, .L22
 340 0008 1B68     		ldr	r3, [r3]
 341 000a 7B60     		str	r3, [r7, #4]
 351:.\Generated_Source\PSoC5/isr.c **** 
 352:.\Generated_Source\PSoC5/isr.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)isr__INTC_NUMBER];
 342              		.loc 1 352 0
 343 000c 7B68     		ldr	r3, [r7, #4]
 344 000e 5B6C     		ldr	r3, [r3, #68]
 353:.\Generated_Source\PSoC5/isr.c **** }
 345              		.loc 1 353 0
 346 0010 1846     		mov	r0, r3
 347 0012 0C37     		adds	r7, r7, #12
 348 0014 BD46     		mov	sp, r7
 349              		@ sp needed
 350 0016 5DF8047B 		ldr	r7, [sp], #4
 351 001a 7047     		bx	lr
 352              	.L23:
 353              		.align	2
 354              	.L22:
 355 001c 08ED00E0 		.word	-536810232
 356              		.cfi_endproc
 357              	.LFE61:
 358              		.size	isr_GetVector, .-isr_GetVector
 359              		.section	.text.isr_SetPriority,"ax",%progbits
 360              		.align	2
 361              		.global	isr_SetPriority
 362              		.thumb
 363              		.thumb_func
 364              		.type	isr_SetPriority, %function
 365              	isr_SetPriority:
 366              	.LFB62:
 354:.\Generated_Source\PSoC5/isr.c **** 
 355:.\Generated_Source\PSoC5/isr.c **** 
 356:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_SetPriority
 358:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 359:.\Generated_Source\PSoC5/isr.c **** *
 360:.\Generated_Source\PSoC5/isr.c **** * Summary:
 361:.\Generated_Source\PSoC5/isr.c **** *   Sets the Priority of the Interrupt. 
 362:.\Generated_Source\PSoC5/isr.c **** *
 363:.\Generated_Source\PSoC5/isr.c **** *   Note calling isr_Start or isr_StartEx will 
 364:.\Generated_Source\PSoC5/isr.c **** *   override any effect this API would have had. This API should only be called
 365:.\Generated_Source\PSoC5/isr.c **** *   after isr_Start or isr_StartEx has been called. 
 366:.\Generated_Source\PSoC5/isr.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 367:.\Generated_Source\PSoC5/isr.c **** *   Interrupt Editor.
 368:.\Generated_Source\PSoC5/isr.c **** *
 369:.\Generated_Source\PSoC5/isr.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 370:.\Generated_Source\PSoC5/isr.c **** *
 371:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 372:.\Generated_Source\PSoC5/isr.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 373:.\Generated_Source\PSoC5/isr.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 374:.\Generated_Source\PSoC5/isr.c **** *             PSoC 4: Priority is from 0 to 3.
 375:.\Generated_Source\PSoC5/isr.c **** *
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 14


 376:.\Generated_Source\PSoC5/isr.c **** * Return:
 377:.\Generated_Source\PSoC5/isr.c **** *   None
 378:.\Generated_Source\PSoC5/isr.c **** *
 379:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC5/isr.c **** void isr_SetPriority(uint8 priority)
 381:.\Generated_Source\PSoC5/isr.c **** {
 367              		.loc 1 381 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372 0000 80B4     		push	{r7}
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 83B0     		sub	sp, sp, #12
 376              		.cfi_def_cfa_offset 16
 377 0004 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 379 0006 0346     		mov	r3, r0
 380 0008 FB71     		strb	r3, [r7, #7]
 382:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_PRIOR = priority << 5;
 381              		.loc 1 382 0
 382 000a 054B     		ldr	r3, .L25
 383 000c FA79     		ldrb	r2, [r7, #7]
 384 000e 5201     		lsls	r2, r2, #5
 385 0010 D2B2     		uxtb	r2, r2
 386 0012 1A70     		strb	r2, [r3]
 383:.\Generated_Source\PSoC5/isr.c **** }
 387              		.loc 1 383 0
 388 0014 0C37     		adds	r7, r7, #12
 389 0016 BD46     		mov	sp, r7
 390              		@ sp needed
 391 0018 5DF8047B 		ldr	r7, [sp], #4
 392 001c 7047     		bx	lr
 393              	.L26:
 394 001e 00BF     		.align	2
 395              	.L25:
 396 0020 01E400E0 		.word	-536812543
 397              		.cfi_endproc
 398              	.LFE62:
 399              		.size	isr_SetPriority, .-isr_SetPriority
 400              		.section	.text.isr_GetPriority,"ax",%progbits
 401              		.align	2
 402              		.global	isr_GetPriority
 403              		.thumb
 404              		.thumb_func
 405              		.type	isr_GetPriority, %function
 406              	isr_GetPriority:
 407              	.LFB63:
 384:.\Generated_Source\PSoC5/isr.c **** 
 385:.\Generated_Source\PSoC5/isr.c **** 
 386:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 387:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_GetPriority
 388:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 389:.\Generated_Source\PSoC5/isr.c **** *
 390:.\Generated_Source\PSoC5/isr.c **** * Summary:
 391:.\Generated_Source\PSoC5/isr.c **** *   Gets the Priority of the Interrupt.
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 15


 392:.\Generated_Source\PSoC5/isr.c **** *
 393:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 394:.\Generated_Source\PSoC5/isr.c **** *   None
 395:.\Generated_Source\PSoC5/isr.c **** *
 396:.\Generated_Source\PSoC5/isr.c **** * Return:
 397:.\Generated_Source\PSoC5/isr.c **** *   Priority of the interrupt, 0 being the highest priority
 398:.\Generated_Source\PSoC5/isr.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 399:.\Generated_Source\PSoC5/isr.c **** *    PSoC 4: Priority is from 0 to 3.
 400:.\Generated_Source\PSoC5/isr.c **** *
 401:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 402:.\Generated_Source\PSoC5/isr.c **** uint8 isr_GetPriority(void)
 403:.\Generated_Source\PSoC5/isr.c **** {
 408              		.loc 1 403 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 83B0     		sub	sp, sp, #12
 417              		.cfi_def_cfa_offset 16
 418 0004 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 404:.\Generated_Source\PSoC5/isr.c ****     uint8 priority;
 405:.\Generated_Source\PSoC5/isr.c **** 
 406:.\Generated_Source\PSoC5/isr.c **** 
 407:.\Generated_Source\PSoC5/isr.c ****     priority = *isr_INTC_PRIOR >> 5;
 420              		.loc 1 407 0
 421 0006 064B     		ldr	r3, .L29
 422 0008 1B78     		ldrb	r3, [r3]
 423 000a DBB2     		uxtb	r3, r3
 424 000c 5B09     		lsrs	r3, r3, #5
 425 000e FB71     		strb	r3, [r7, #7]
 408:.\Generated_Source\PSoC5/isr.c **** 
 409:.\Generated_Source\PSoC5/isr.c ****     return priority;
 426              		.loc 1 409 0
 427 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 410:.\Generated_Source\PSoC5/isr.c **** }
 428              		.loc 1 410 0
 429 0012 1846     		mov	r0, r3
 430 0014 0C37     		adds	r7, r7, #12
 431 0016 BD46     		mov	sp, r7
 432              		@ sp needed
 433 0018 5DF8047B 		ldr	r7, [sp], #4
 434 001c 7047     		bx	lr
 435              	.L30:
 436 001e 00BF     		.align	2
 437              	.L29:
 438 0020 01E400E0 		.word	-536812543
 439              		.cfi_endproc
 440              	.LFE63:
 441              		.size	isr_GetPriority, .-isr_GetPriority
 442              		.section	.text.isr_Enable,"ax",%progbits
 443              		.align	2
 444              		.global	isr_Enable
 445              		.thumb
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 16


 446              		.thumb_func
 447              		.type	isr_Enable, %function
 448              	isr_Enable:
 449              	.LFB64:
 411:.\Generated_Source\PSoC5/isr.c **** 
 412:.\Generated_Source\PSoC5/isr.c **** 
 413:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 414:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Enable
 415:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 416:.\Generated_Source\PSoC5/isr.c **** *
 417:.\Generated_Source\PSoC5/isr.c **** * Summary:
 418:.\Generated_Source\PSoC5/isr.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 419:.\Generated_Source\PSoC5/isr.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 420:.\Generated_Source\PSoC5/isr.c **** *   function, which sets the vector and the priority, has been called.
 421:.\Generated_Source\PSoC5/isr.c **** *
 422:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 423:.\Generated_Source\PSoC5/isr.c **** *   None
 424:.\Generated_Source\PSoC5/isr.c **** *
 425:.\Generated_Source\PSoC5/isr.c **** * Return:
 426:.\Generated_Source\PSoC5/isr.c **** *   None
 427:.\Generated_Source\PSoC5/isr.c **** *
 428:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 429:.\Generated_Source\PSoC5/isr.c **** void isr_Enable(void)
 430:.\Generated_Source\PSoC5/isr.c **** {
 450              		.loc 1 430 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 431:.\Generated_Source\PSoC5/isr.c ****     /* Enable the general interrupt. */
 432:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_SET_EN = isr__INTC_MASK;
 460              		.loc 1 432 0
 461 0004 034B     		ldr	r3, .L32
 462 0006 0222     		movs	r2, #2
 463 0008 1A60     		str	r2, [r3]
 433:.\Generated_Source\PSoC5/isr.c **** }
 464              		.loc 1 433 0
 465 000a BD46     		mov	sp, r7
 466              		@ sp needed
 467 000c 5DF8047B 		ldr	r7, [sp], #4
 468 0010 7047     		bx	lr
 469              	.L33:
 470 0012 00BF     		.align	2
 471              	.L32:
 472 0014 00E100E0 		.word	-536813312
 473              		.cfi_endproc
 474              	.LFE64:
 475              		.size	isr_Enable, .-isr_Enable
 476              		.section	.text.isr_GetState,"ax",%progbits
 477              		.align	2
 478              		.global	isr_GetState
 479              		.thumb
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 17


 480              		.thumb_func
 481              		.type	isr_GetState, %function
 482              	isr_GetState:
 483              	.LFB65:
 434:.\Generated_Source\PSoC5/isr.c **** 
 435:.\Generated_Source\PSoC5/isr.c **** 
 436:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 437:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_GetState
 438:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 439:.\Generated_Source\PSoC5/isr.c **** *
 440:.\Generated_Source\PSoC5/isr.c **** * Summary:
 441:.\Generated_Source\PSoC5/isr.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 442:.\Generated_Source\PSoC5/isr.c **** *
 443:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 444:.\Generated_Source\PSoC5/isr.c **** *   None
 445:.\Generated_Source\PSoC5/isr.c **** *
 446:.\Generated_Source\PSoC5/isr.c **** * Return:
 447:.\Generated_Source\PSoC5/isr.c **** *   1 if enabled, 0 if disabled.
 448:.\Generated_Source\PSoC5/isr.c **** *
 449:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC5/isr.c **** uint8 isr_GetState(void)
 451:.\Generated_Source\PSoC5/isr.c **** {
 484              		.loc 1 451 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 452:.\Generated_Source\PSoC5/isr.c ****     /* Get the state of the general interrupt. */
 453:.\Generated_Source\PSoC5/isr.c ****     return ((*isr_INTC_SET_EN & (uint32)isr__INTC_MASK) != 0u) ? 1u:0u;
 494              		.loc 1 453 0
 495 0004 064B     		ldr	r3, .L38
 496 0006 1B68     		ldr	r3, [r3]
 497 0008 03F00203 		and	r3, r3, #2
 498 000c 002B     		cmp	r3, #0
 499 000e 01D0     		beq	.L35
 500              		.loc 1 453 0 is_stmt 0 discriminator 1
 501 0010 0123     		movs	r3, #1
 502 0012 00E0     		b	.L36
 503              	.L35:
 504              		.loc 1 453 0 discriminator 2
 505 0014 0023     		movs	r3, #0
 506              	.L36:
 454:.\Generated_Source\PSoC5/isr.c **** }
 507              		.loc 1 454 0 is_stmt 1 discriminator 3
 508 0016 1846     		mov	r0, r3
 509 0018 BD46     		mov	sp, r7
 510              		@ sp needed
 511 001a 5DF8047B 		ldr	r7, [sp], #4
 512 001e 7047     		bx	lr
 513              	.L39:
 514              		.align	2
 515              	.L38:
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 18


 516 0020 00E100E0 		.word	-536813312
 517              		.cfi_endproc
 518              	.LFE65:
 519              		.size	isr_GetState, .-isr_GetState
 520              		.section	.text.isr_Disable,"ax",%progbits
 521              		.align	2
 522              		.global	isr_Disable
 523              		.thumb
 524              		.thumb_func
 525              		.type	isr_Disable, %function
 526              	isr_Disable:
 527              	.LFB66:
 455:.\Generated_Source\PSoC5/isr.c **** 
 456:.\Generated_Source\PSoC5/isr.c **** 
 457:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Disable
 459:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 460:.\Generated_Source\PSoC5/isr.c **** *
 461:.\Generated_Source\PSoC5/isr.c **** * Summary:
 462:.\Generated_Source\PSoC5/isr.c **** *   Disables the Interrupt in the interrupt controller.
 463:.\Generated_Source\PSoC5/isr.c **** *
 464:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 465:.\Generated_Source\PSoC5/isr.c **** *   None
 466:.\Generated_Source\PSoC5/isr.c **** *
 467:.\Generated_Source\PSoC5/isr.c **** * Return:
 468:.\Generated_Source\PSoC5/isr.c **** *   None
 469:.\Generated_Source\PSoC5/isr.c **** *
 470:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 471:.\Generated_Source\PSoC5/isr.c **** void isr_Disable(void)
 472:.\Generated_Source\PSoC5/isr.c **** {
 528              		.loc 1 472 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              		.cfi_def_cfa_offset 4
 535              		.cfi_offset 7, -4
 536 0002 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 473:.\Generated_Source\PSoC5/isr.c ****     /* Disable the general interrupt. */
 474:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_CLR_EN = isr__INTC_MASK;
 538              		.loc 1 474 0
 539 0004 034B     		ldr	r3, .L41
 540 0006 0222     		movs	r2, #2
 541 0008 1A60     		str	r2, [r3]
 475:.\Generated_Source\PSoC5/isr.c **** }
 542              		.loc 1 475 0
 543 000a BD46     		mov	sp, r7
 544              		@ sp needed
 545 000c 5DF8047B 		ldr	r7, [sp], #4
 546 0010 7047     		bx	lr
 547              	.L42:
 548 0012 00BF     		.align	2
 549              	.L41:
 550 0014 80E100E0 		.word	-536813184
 551              		.cfi_endproc
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 19


 552              	.LFE66:
 553              		.size	isr_Disable, .-isr_Disable
 554              		.section	.text.isr_SetPending,"ax",%progbits
 555              		.align	2
 556              		.global	isr_SetPending
 557              		.thumb
 558              		.thumb_func
 559              		.type	isr_SetPending, %function
 560              	isr_SetPending:
 561              	.LFB67:
 476:.\Generated_Source\PSoC5/isr.c **** 
 477:.\Generated_Source\PSoC5/isr.c **** 
 478:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 479:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_SetPending
 480:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 481:.\Generated_Source\PSoC5/isr.c **** *
 482:.\Generated_Source\PSoC5/isr.c **** * Summary:
 483:.\Generated_Source\PSoC5/isr.c **** *   Causes the Interrupt to enter the pending state, a software method of
 484:.\Generated_Source\PSoC5/isr.c **** *   generating the interrupt.
 485:.\Generated_Source\PSoC5/isr.c **** *
 486:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 487:.\Generated_Source\PSoC5/isr.c **** *   None
 488:.\Generated_Source\PSoC5/isr.c **** *
 489:.\Generated_Source\PSoC5/isr.c **** * Return:
 490:.\Generated_Source\PSoC5/isr.c **** *   None
 491:.\Generated_Source\PSoC5/isr.c **** *
 492:.\Generated_Source\PSoC5/isr.c **** * Side Effects:
 493:.\Generated_Source\PSoC5/isr.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 494:.\Generated_Source\PSoC5/isr.c **** *   entered (depending on the priority of this interrupt and other pending 
 495:.\Generated_Source\PSoC5/isr.c **** *   interrupts).
 496:.\Generated_Source\PSoC5/isr.c **** *
 497:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 498:.\Generated_Source\PSoC5/isr.c **** void isr_SetPending(void)
 499:.\Generated_Source\PSoC5/isr.c **** {
 562              		.loc 1 499 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 500:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_SET_PD = isr__INTC_MASK;
 572              		.loc 1 500 0
 573 0004 034B     		ldr	r3, .L44
 574 0006 0222     		movs	r2, #2
 575 0008 1A60     		str	r2, [r3]
 501:.\Generated_Source\PSoC5/isr.c **** }
 576              		.loc 1 501 0
 577 000a BD46     		mov	sp, r7
 578              		@ sp needed
 579 000c 5DF8047B 		ldr	r7, [sp], #4
 580 0010 7047     		bx	lr
 581              	.L45:
 582 0012 00BF     		.align	2
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 20


 583              	.L44:
 584 0014 00E200E0 		.word	-536813056
 585              		.cfi_endproc
 586              	.LFE67:
 587              		.size	isr_SetPending, .-isr_SetPending
 588              		.section	.text.isr_ClearPending,"ax",%progbits
 589              		.align	2
 590              		.global	isr_ClearPending
 591              		.thumb
 592              		.thumb_func
 593              		.type	isr_ClearPending, %function
 594              	isr_ClearPending:
 595              	.LFB68:
 502:.\Generated_Source\PSoC5/isr.c **** 
 503:.\Generated_Source\PSoC5/isr.c **** 
 504:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 505:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_ClearPending
 506:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 507:.\Generated_Source\PSoC5/isr.c **** *
 508:.\Generated_Source\PSoC5/isr.c **** * Summary:
 509:.\Generated_Source\PSoC5/isr.c **** *   Clears a pending interrupt in the interrupt controller.
 510:.\Generated_Source\PSoC5/isr.c **** *
 511:.\Generated_Source\PSoC5/isr.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 512:.\Generated_Source\PSoC5/isr.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 513:.\Generated_Source\PSoC5/isr.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 514:.\Generated_Source\PSoC5/isr.c **** *   pending state even though the interrupt itself is cleared using this API.
 515:.\Generated_Source\PSoC5/isr.c **** *
 516:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 517:.\Generated_Source\PSoC5/isr.c **** *   None
 518:.\Generated_Source\PSoC5/isr.c **** *
 519:.\Generated_Source\PSoC5/isr.c **** * Return:
 520:.\Generated_Source\PSoC5/isr.c **** *   None
 521:.\Generated_Source\PSoC5/isr.c **** *
 522:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 523:.\Generated_Source\PSoC5/isr.c **** void isr_ClearPending(void)
 524:.\Generated_Source\PSoC5/isr.c **** {
 596              		.loc 1 524 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 0000 80B4     		push	{r7}
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 525:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_CLR_PD = isr__INTC_MASK;
 606              		.loc 1 525 0
 607 0004 034B     		ldr	r3, .L47
 608 0006 0222     		movs	r2, #2
 609 0008 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC5/isr.c **** }
 610              		.loc 1 526 0
 611 000a BD46     		mov	sp, r7
 612              		@ sp needed
 613 000c 5DF8047B 		ldr	r7, [sp], #4
 614 0010 7047     		bx	lr
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 21


 615              	.L48:
 616 0012 00BF     		.align	2
 617              	.L47:
 618 0014 80E200E0 		.word	-536812928
 619              		.cfi_endproc
 620              	.LFE68:
 621              		.size	isr_ClearPending, .-isr_ClearPending
 622              		.bss
 623              		.align	2
 624              	wave_idx.6744:
 625 0000 00000000 		.space	4
 626              		.align	2
 627              	dc_count.6742:
 628 0004 00000000 		.space	4
 629              		.align	2
 630              	dc_sum.6743:
 631 0008 00000000 		.space	4
 632              		.text
 633              	.Letext0:
 634              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 635              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 636              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 637              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 638              		.section	.debug_info,"",%progbits
 639              	.Ldebug_info0:
 640 0000 D6020000 		.4byte	0x2d6
 641 0004 0400     		.2byte	0x4
 642 0006 00000000 		.4byte	.Ldebug_abbrev0
 643 000a 04       		.byte	0x4
 644 000b 01       		.uleb128 0x1
 645 000c E8000000 		.4byte	.LASF40
 646 0010 01       		.byte	0x1
 647 0011 2B000000 		.4byte	.LASF41
 648 0015 77000000 		.4byte	.LASF42
 649 0019 00000000 		.4byte	.Ldebug_ranges0+0
 650 001d 00000000 		.4byte	0
 651 0021 00000000 		.4byte	.Ldebug_line0
 652 0025 02       		.uleb128 0x2
 653 0026 04       		.byte	0x4
 654 0027 05       		.byte	0x5
 655 0028 696E7400 		.ascii	"int\000"
 656 002c 03       		.uleb128 0x3
 657 002d 04       		.byte	0x4
 658 002e 07       		.byte	0x7
 659 002f F4010000 		.4byte	.LASF0
 660 0033 03       		.uleb128 0x3
 661 0034 01       		.byte	0x1
 662 0035 06       		.byte	0x6
 663 0036 A6020000 		.4byte	.LASF1
 664 003a 03       		.uleb128 0x3
 665 003b 01       		.byte	0x1
 666 003c 08       		.byte	0x8
 667 003d D5000000 		.4byte	.LASF2
 668 0041 03       		.uleb128 0x3
 669 0042 02       		.byte	0x2
 670 0043 05       		.byte	0x5
 671 0044 B8010000 		.4byte	.LASF3
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 22


 672 0048 03       		.uleb128 0x3
 673 0049 02       		.byte	0x2
 674 004a 07       		.byte	0x7
 675 004b 80010000 		.4byte	.LASF4
 676 004f 04       		.uleb128 0x4
 677 0050 06000000 		.4byte	.LASF11
 678 0054 02       		.byte	0x2
 679 0055 37       		.byte	0x37
 680 0056 5A000000 		.4byte	0x5a
 681 005a 03       		.uleb128 0x3
 682 005b 04       		.byte	0x4
 683 005c 05       		.byte	0x5
 684 005d 9D020000 		.4byte	.LASF5
 685 0061 03       		.uleb128 0x3
 686 0062 04       		.byte	0x4
 687 0063 07       		.byte	0x7
 688 0064 64010000 		.4byte	.LASF6
 689 0068 03       		.uleb128 0x3
 690 0069 08       		.byte	0x8
 691 006a 05       		.byte	0x5
 692 006b 55020000 		.4byte	.LASF7
 693 006f 03       		.uleb128 0x3
 694 0070 08       		.byte	0x8
 695 0071 07       		.byte	0x7
 696 0072 09020000 		.4byte	.LASF8
 697 0076 03       		.uleb128 0x3
 698 0077 04       		.byte	0x4
 699 0078 07       		.byte	0x7
 700 0079 4C020000 		.4byte	.LASF9
 701 007d 05       		.uleb128 0x5
 702 007e 04       		.byte	0x4
 703 007f 83000000 		.4byte	0x83
 704 0083 06       		.uleb128 0x6
 705 0084 03       		.uleb128 0x3
 706 0085 01       		.byte	0x1
 707 0086 08       		.byte	0x8
 708 0087 63020000 		.4byte	.LASF10
 709 008b 04       		.uleb128 0x4
 710 008c 44020000 		.4byte	.LASF12
 711 0090 03       		.byte	0x3
 712 0091 41       		.byte	0x41
 713 0092 4F000000 		.4byte	0x4f
 714 0096 04       		.uleb128 0x4
 715 0097 8C020000 		.4byte	.LASF13
 716 009b 04       		.byte	0x4
 717 009c 5B       		.byte	0x5b
 718 009d 3A000000 		.4byte	0x3a
 719 00a1 04       		.uleb128 0x4
 720 00a2 E6010000 		.4byte	.LASF14
 721 00a6 04       		.byte	0x4
 722 00a7 5D       		.byte	0x5d
 723 00a8 61000000 		.4byte	0x61
 724 00ac 03       		.uleb128 0x3
 725 00ad 04       		.byte	0x4
 726 00ae 04       		.byte	0x4
 727 00af 63000000 		.4byte	.LASF15
 728 00b3 03       		.uleb128 0x3
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 23


 729 00b4 08       		.byte	0x8
 730 00b5 04       		.byte	0x4
 731 00b6 B1010000 		.4byte	.LASF16
 732 00ba 04       		.uleb128 0x4
 733 00bb E3000000 		.4byte	.LASF17
 734 00bf 04       		.byte	0x4
 735 00c0 F0       		.byte	0xf0
 736 00c1 C5000000 		.4byte	0xc5
 737 00c5 07       		.uleb128 0x7
 738 00c6 96000000 		.4byte	0x96
 739 00ca 04       		.uleb128 0x4
 740 00cb 00000000 		.4byte	.LASF18
 741 00cf 04       		.byte	0x4
 742 00d0 F2       		.byte	0xf2
 743 00d1 D5000000 		.4byte	0xd5
 744 00d5 07       		.uleb128 0x7
 745 00d6 A1000000 		.4byte	0xa1
 746 00da 08       		.uleb128 0x8
 747 00db 20020000 		.4byte	.LASF19
 748 00df 04       		.byte	0x4
 749 00e0 0201     		.2byte	0x102
 750 00e2 7D000000 		.4byte	0x7d
 751 00e6 09       		.uleb128 0x9
 752 00e7 76010000 		.4byte	.LASF20
 753 00eb 01       		.byte	0x1
 754 00ec 56       		.byte	0x56
 755 00ed 00000000 		.4byte	.LFB56
 756 00f1 20000000 		.4byte	.LFE56-.LFB56
 757 00f5 01       		.uleb128 0x1
 758 00f6 9C       		.byte	0x9c
 759 00f7 0A       		.uleb128 0xa
 760 00f8 DA010000 		.4byte	.LASF22
 761 00fc 01       		.byte	0x1
 762 00fd 81       		.byte	0x81
 763 00fe 00000000 		.4byte	.LFB57
 764 0102 22000000 		.4byte	.LFE57-.LFB57
 765 0106 01       		.uleb128 0x1
 766 0107 9C       		.byte	0x9c
 767 0108 1B010000 		.4byte	0x11b
 768 010c 0B       		.uleb128 0xb
 769 010d 01020000 		.4byte	.LASF28
 770 0111 01       		.byte	0x1
 771 0112 81       		.byte	0x81
 772 0113 DA000000 		.4byte	0xda
 773 0117 02       		.uleb128 0x2
 774 0118 91       		.byte	0x91
 775 0119 74       		.sleb128 -12
 776 011a 00       		.byte	0
 777 011b 09       		.uleb128 0x9
 778 011c 5A000000 		.4byte	.LASF21
 779 0120 01       		.byte	0x1
 780 0121 9F       		.byte	0x9f
 781 0122 00000000 		.4byte	.LFB58
 782 0126 14000000 		.4byte	.LFE58-.LFB58
 783 012a 01       		.uleb128 0x1
 784 012b 9C       		.byte	0x9c
 785 012c 0A       		.uleb128 0xa
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 24


 786 012d 36020000 		.4byte	.LASF23
 787 0131 01       		.byte	0x1
 788 0132 B9       		.byte	0xb9
 789 0133 00000000 		.4byte	.LFB59
 790 0137 E4000000 		.4byte	.LFE59-.LFB59
 791 013b 01       		.uleb128 0x1
 792 013c 9C       		.byte	0x9c
 793 013d 9A010000 		.4byte	0x19a
 794 0141 0C       		.uleb128 0xc
 795 0142 7800     		.ascii	"x\000"
 796 0144 01       		.byte	0x1
 797 0145 C3       		.byte	0xc3
 798 0146 25000000 		.4byte	0x25
 799 014a 02       		.uleb128 0x2
 800 014b 91       		.byte	0x91
 801 014c 70       		.sleb128 -16
 802 014d 0D       		.uleb128 0xd
 803 014e 2D020000 		.4byte	.LASF24
 804 0152 01       		.byte	0x1
 805 0153 C4       		.byte	0xc4
 806 0154 25000000 		.4byte	0x25
 807 0158 05       		.uleb128 0x5
 808 0159 03       		.byte	0x3
 809 015a 04000000 		.4byte	dc_count.6742
 810 015e 0D       		.uleb128 0xd
 811 015f ED010000 		.4byte	.LASF25
 812 0163 01       		.byte	0x1
 813 0164 C5       		.byte	0xc5
 814 0165 25000000 		.4byte	0x25
 815 0169 05       		.uleb128 0x5
 816 016a 03       		.byte	0x3
 817 016b 08000000 		.4byte	dc_sum.6743
 818 016f 0D       		.uleb128 0xd
 819 0170 77020000 		.4byte	.LASF26
 820 0174 01       		.byte	0x1
 821 0175 C8       		.byte	0xc8
 822 0176 25000000 		.4byte	0x25
 823 017a 05       		.uleb128 0x5
 824 017b 03       		.byte	0x3
 825 017c 00000000 		.4byte	wave_idx.6744
 826 0180 0C       		.uleb128 0xc
 827 0181 655F00   		.ascii	"e_\000"
 828 0184 01       		.byte	0x1
 829 0185 CC       		.byte	0xcc
 830 0186 25000000 		.4byte	0x25
 831 018a 02       		.uleb128 0x2
 832 018b 91       		.byte	0x91
 833 018c 6C       		.sleb128 -20
 834 018d 0C       		.uleb128 0xc
 835 018e 7900     		.ascii	"y\000"
 836 0190 01       		.byte	0x1
 837 0191 CD       		.byte	0xcd
 838 0192 25000000 		.4byte	0x25
 839 0196 02       		.uleb128 0x2
 840 0197 91       		.byte	0x91
 841 0198 74       		.sleb128 -12
 842 0199 00       		.byte	0
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 25


 843 019a 0E       		.uleb128 0xe
 844 019b 69000000 		.4byte	.LASF27
 845 019f 01       		.byte	0x1
 846 01a0 4201     		.2byte	0x142
 847 01a2 00000000 		.4byte	.LFB60
 848 01a6 24000000 		.4byte	.LFE60-.LFB60
 849 01aa 01       		.uleb128 0x1
 850 01ab 9C       		.byte	0x9c
 851 01ac CF010000 		.4byte	0x1cf
 852 01b0 0F       		.uleb128 0xf
 853 01b1 01020000 		.4byte	.LASF28
 854 01b5 01       		.byte	0x1
 855 01b6 4201     		.2byte	0x142
 856 01b8 DA000000 		.4byte	0xda
 857 01bc 02       		.uleb128 0x2
 858 01bd 91       		.byte	0x91
 859 01be 6C       		.sleb128 -20
 860 01bf 10       		.uleb128 0x10
 861 01c0 68020000 		.4byte	.LASF29
 862 01c4 01       		.byte	0x1
 863 01c5 4401     		.2byte	0x144
 864 01c7 CF010000 		.4byte	0x1cf
 865 01cb 02       		.uleb128 0x2
 866 01cc 91       		.byte	0x91
 867 01cd 74       		.sleb128 -12
 868 01ce 00       		.byte	0
 869 01cf 05       		.uleb128 0x5
 870 01d0 04       		.byte	0x4
 871 01d1 DA000000 		.4byte	0xda
 872 01d5 11       		.uleb128 0x11
 873 01d6 10000000 		.4byte	.LASF32
 874 01da 01       		.byte	0x1
 875 01db 5A01     		.2byte	0x15a
 876 01dd DA000000 		.4byte	0xda
 877 01e1 00000000 		.4byte	.LFB61
 878 01e5 20000000 		.4byte	.LFE61-.LFB61
 879 01e9 01       		.uleb128 0x1
 880 01ea 9C       		.byte	0x9c
 881 01eb FF010000 		.4byte	0x1ff
 882 01ef 10       		.uleb128 0x10
 883 01f0 68020000 		.4byte	.LASF29
 884 01f4 01       		.byte	0x1
 885 01f5 5C01     		.2byte	0x15c
 886 01f7 CF010000 		.4byte	0x1cf
 887 01fb 02       		.uleb128 0x2
 888 01fc 91       		.byte	0x91
 889 01fd 74       		.sleb128 -12
 890 01fe 00       		.byte	0
 891 01ff 0E       		.uleb128 0xe
 892 0200 4A000000 		.4byte	.LASF30
 893 0204 01       		.byte	0x1
 894 0205 7C01     		.2byte	0x17c
 895 0207 00000000 		.4byte	.LFB62
 896 020b 24000000 		.4byte	.LFE62-.LFB62
 897 020f 01       		.uleb128 0x1
 898 0210 9C       		.byte	0x9c
 899 0211 25020000 		.4byte	0x225
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 26


 900 0215 0F       		.uleb128 0xf
 901 0216 C2010000 		.4byte	.LASF31
 902 021a 01       		.byte	0x1
 903 021b 7C01     		.2byte	0x17c
 904 021d 96000000 		.4byte	0x96
 905 0221 02       		.uleb128 0x2
 906 0222 91       		.byte	0x91
 907 0223 77       		.sleb128 -9
 908 0224 00       		.byte	0
 909 0225 11       		.uleb128 0x11
 910 0226 BD020000 		.4byte	.LASF33
 911 022a 01       		.byte	0x1
 912 022b 9201     		.2byte	0x192
 913 022d 96000000 		.4byte	0x96
 914 0231 00000000 		.4byte	.LFB63
 915 0235 24000000 		.4byte	.LFE63-.LFB63
 916 0239 01       		.uleb128 0x1
 917 023a 9C       		.byte	0x9c
 918 023b 4F020000 		.4byte	0x24f
 919 023f 10       		.uleb128 0x10
 920 0240 C2010000 		.4byte	.LASF31
 921 0244 01       		.byte	0x1
 922 0245 9401     		.2byte	0x194
 923 0247 96000000 		.4byte	0x96
 924 024b 02       		.uleb128 0x2
 925 024c 91       		.byte	0x91
 926 024d 77       		.sleb128 -9
 927 024e 00       		.byte	0
 928 024f 12       		.uleb128 0x12
 929 0250 B2020000 		.4byte	.LASF34
 930 0254 01       		.byte	0x1
 931 0255 AD01     		.2byte	0x1ad
 932 0257 00000000 		.4byte	.LFB64
 933 025b 18000000 		.4byte	.LFE64-.LFB64
 934 025f 01       		.uleb128 0x1
 935 0260 9C       		.byte	0x9c
 936 0261 13       		.uleb128 0x13
 937 0262 1E000000 		.4byte	.LASF43
 938 0266 01       		.byte	0x1
 939 0267 C201     		.2byte	0x1c2
 940 0269 96000000 		.4byte	0x96
 941 026d 00000000 		.4byte	.LFB65
 942 0271 24000000 		.4byte	.LFE65-.LFB65
 943 0275 01       		.uleb128 0x1
 944 0276 9C       		.byte	0x9c
 945 0277 12       		.uleb128 0x12
 946 0278 80020000 		.4byte	.LASF35
 947 027c 01       		.byte	0x1
 948 027d D701     		.2byte	0x1d7
 949 027f 00000000 		.4byte	.LFB66
 950 0283 18000000 		.4byte	.LFE66-.LFB66
 951 0287 01       		.uleb128 0x1
 952 0288 9C       		.byte	0x9c
 953 0289 12       		.uleb128 0x12
 954 028a CB010000 		.4byte	.LASF36
 955 028e 01       		.byte	0x1
 956 028f F201     		.2byte	0x1f2
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 27


 957 0291 00000000 		.4byte	.LFB67
 958 0295 18000000 		.4byte	.LFE67-.LFB67
 959 0299 01       		.uleb128 0x1
 960 029a 9C       		.byte	0x9c
 961 029b 12       		.uleb128 0x12
 962 029c A0010000 		.4byte	.LASF37
 963 02a0 01       		.byte	0x1
 964 02a1 0B02     		.2byte	0x20b
 965 02a3 00000000 		.4byte	.LFB68
 966 02a7 18000000 		.4byte	.LFE68-.LFB68
 967 02ab 01       		.uleb128 0x1
 968 02ac 9C       		.byte	0x9c
 969 02ad 14       		.uleb128 0x14
 970 02ae 93010000 		.4byte	.LASF38
 971 02b2 05       		.byte	0x5
 972 02b3 1606     		.2byte	0x616
 973 02b5 B9020000 		.4byte	0x2b9
 974 02b9 07       		.uleb128 0x7
 975 02ba 8B000000 		.4byte	0x8b
 976 02be 15       		.uleb128 0x15
 977 02bf 25000000 		.4byte	0x25
 978 02c3 CE020000 		.4byte	0x2ce
 979 02c7 16       		.uleb128 0x16
 980 02c8 76000000 		.4byte	0x76
 981 02cc 13       		.byte	0x13
 982 02cd 00       		.byte	0
 983 02ce 17       		.uleb128 0x17
 984 02cf 92020000 		.4byte	.LASF39
 985 02d3 01       		.byte	0x1
 986 02d4 35       		.byte	0x35
 987 02d5 BE020000 		.4byte	0x2be
 988 02d9 00       		.byte	0
 989              		.section	.debug_abbrev,"",%progbits
 990              	.Ldebug_abbrev0:
 991 0000 01       		.uleb128 0x1
 992 0001 11       		.uleb128 0x11
 993 0002 01       		.byte	0x1
 994 0003 25       		.uleb128 0x25
 995 0004 0E       		.uleb128 0xe
 996 0005 13       		.uleb128 0x13
 997 0006 0B       		.uleb128 0xb
 998 0007 03       		.uleb128 0x3
 999 0008 0E       		.uleb128 0xe
 1000 0009 1B       		.uleb128 0x1b
 1001 000a 0E       		.uleb128 0xe
 1002 000b 55       		.uleb128 0x55
 1003 000c 17       		.uleb128 0x17
 1004 000d 11       		.uleb128 0x11
 1005 000e 01       		.uleb128 0x1
 1006 000f 10       		.uleb128 0x10
 1007 0010 17       		.uleb128 0x17
 1008 0011 00       		.byte	0
 1009 0012 00       		.byte	0
 1010 0013 02       		.uleb128 0x2
 1011 0014 24       		.uleb128 0x24
 1012 0015 00       		.byte	0
 1013 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 28


 1014 0017 0B       		.uleb128 0xb
 1015 0018 3E       		.uleb128 0x3e
 1016 0019 0B       		.uleb128 0xb
 1017 001a 03       		.uleb128 0x3
 1018 001b 08       		.uleb128 0x8
 1019 001c 00       		.byte	0
 1020 001d 00       		.byte	0
 1021 001e 03       		.uleb128 0x3
 1022 001f 24       		.uleb128 0x24
 1023 0020 00       		.byte	0
 1024 0021 0B       		.uleb128 0xb
 1025 0022 0B       		.uleb128 0xb
 1026 0023 3E       		.uleb128 0x3e
 1027 0024 0B       		.uleb128 0xb
 1028 0025 03       		.uleb128 0x3
 1029 0026 0E       		.uleb128 0xe
 1030 0027 00       		.byte	0
 1031 0028 00       		.byte	0
 1032 0029 04       		.uleb128 0x4
 1033 002a 16       		.uleb128 0x16
 1034 002b 00       		.byte	0
 1035 002c 03       		.uleb128 0x3
 1036 002d 0E       		.uleb128 0xe
 1037 002e 3A       		.uleb128 0x3a
 1038 002f 0B       		.uleb128 0xb
 1039 0030 3B       		.uleb128 0x3b
 1040 0031 0B       		.uleb128 0xb
 1041 0032 49       		.uleb128 0x49
 1042 0033 13       		.uleb128 0x13
 1043 0034 00       		.byte	0
 1044 0035 00       		.byte	0
 1045 0036 05       		.uleb128 0x5
 1046 0037 0F       		.uleb128 0xf
 1047 0038 00       		.byte	0
 1048 0039 0B       		.uleb128 0xb
 1049 003a 0B       		.uleb128 0xb
 1050 003b 49       		.uleb128 0x49
 1051 003c 13       		.uleb128 0x13
 1052 003d 00       		.byte	0
 1053 003e 00       		.byte	0
 1054 003f 06       		.uleb128 0x6
 1055 0040 15       		.uleb128 0x15
 1056 0041 00       		.byte	0
 1057 0042 27       		.uleb128 0x27
 1058 0043 19       		.uleb128 0x19
 1059 0044 00       		.byte	0
 1060 0045 00       		.byte	0
 1061 0046 07       		.uleb128 0x7
 1062 0047 35       		.uleb128 0x35
 1063 0048 00       		.byte	0
 1064 0049 49       		.uleb128 0x49
 1065 004a 13       		.uleb128 0x13
 1066 004b 00       		.byte	0
 1067 004c 00       		.byte	0
 1068 004d 08       		.uleb128 0x8
 1069 004e 16       		.uleb128 0x16
 1070 004f 00       		.byte	0
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 29


 1071 0050 03       		.uleb128 0x3
 1072 0051 0E       		.uleb128 0xe
 1073 0052 3A       		.uleb128 0x3a
 1074 0053 0B       		.uleb128 0xb
 1075 0054 3B       		.uleb128 0x3b
 1076 0055 05       		.uleb128 0x5
 1077 0056 49       		.uleb128 0x49
 1078 0057 13       		.uleb128 0x13
 1079 0058 00       		.byte	0
 1080 0059 00       		.byte	0
 1081 005a 09       		.uleb128 0x9
 1082 005b 2E       		.uleb128 0x2e
 1083 005c 00       		.byte	0
 1084 005d 3F       		.uleb128 0x3f
 1085 005e 19       		.uleb128 0x19
 1086 005f 03       		.uleb128 0x3
 1087 0060 0E       		.uleb128 0xe
 1088 0061 3A       		.uleb128 0x3a
 1089 0062 0B       		.uleb128 0xb
 1090 0063 3B       		.uleb128 0x3b
 1091 0064 0B       		.uleb128 0xb
 1092 0065 27       		.uleb128 0x27
 1093 0066 19       		.uleb128 0x19
 1094 0067 11       		.uleb128 0x11
 1095 0068 01       		.uleb128 0x1
 1096 0069 12       		.uleb128 0x12
 1097 006a 06       		.uleb128 0x6
 1098 006b 40       		.uleb128 0x40
 1099 006c 18       		.uleb128 0x18
 1100 006d 9642     		.uleb128 0x2116
 1101 006f 19       		.uleb128 0x19
 1102 0070 00       		.byte	0
 1103 0071 00       		.byte	0
 1104 0072 0A       		.uleb128 0xa
 1105 0073 2E       		.uleb128 0x2e
 1106 0074 01       		.byte	0x1
 1107 0075 3F       		.uleb128 0x3f
 1108 0076 19       		.uleb128 0x19
 1109 0077 03       		.uleb128 0x3
 1110 0078 0E       		.uleb128 0xe
 1111 0079 3A       		.uleb128 0x3a
 1112 007a 0B       		.uleb128 0xb
 1113 007b 3B       		.uleb128 0x3b
 1114 007c 0B       		.uleb128 0xb
 1115 007d 27       		.uleb128 0x27
 1116 007e 19       		.uleb128 0x19
 1117 007f 11       		.uleb128 0x11
 1118 0080 01       		.uleb128 0x1
 1119 0081 12       		.uleb128 0x12
 1120 0082 06       		.uleb128 0x6
 1121 0083 40       		.uleb128 0x40
 1122 0084 18       		.uleb128 0x18
 1123 0085 9642     		.uleb128 0x2116
 1124 0087 19       		.uleb128 0x19
 1125 0088 01       		.uleb128 0x1
 1126 0089 13       		.uleb128 0x13
 1127 008a 00       		.byte	0
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 30


 1128 008b 00       		.byte	0
 1129 008c 0B       		.uleb128 0xb
 1130 008d 05       		.uleb128 0x5
 1131 008e 00       		.byte	0
 1132 008f 03       		.uleb128 0x3
 1133 0090 0E       		.uleb128 0xe
 1134 0091 3A       		.uleb128 0x3a
 1135 0092 0B       		.uleb128 0xb
 1136 0093 3B       		.uleb128 0x3b
 1137 0094 0B       		.uleb128 0xb
 1138 0095 49       		.uleb128 0x49
 1139 0096 13       		.uleb128 0x13
 1140 0097 02       		.uleb128 0x2
 1141 0098 18       		.uleb128 0x18
 1142 0099 00       		.byte	0
 1143 009a 00       		.byte	0
 1144 009b 0C       		.uleb128 0xc
 1145 009c 34       		.uleb128 0x34
 1146 009d 00       		.byte	0
 1147 009e 03       		.uleb128 0x3
 1148 009f 08       		.uleb128 0x8
 1149 00a0 3A       		.uleb128 0x3a
 1150 00a1 0B       		.uleb128 0xb
 1151 00a2 3B       		.uleb128 0x3b
 1152 00a3 0B       		.uleb128 0xb
 1153 00a4 49       		.uleb128 0x49
 1154 00a5 13       		.uleb128 0x13
 1155 00a6 02       		.uleb128 0x2
 1156 00a7 18       		.uleb128 0x18
 1157 00a8 00       		.byte	0
 1158 00a9 00       		.byte	0
 1159 00aa 0D       		.uleb128 0xd
 1160 00ab 34       		.uleb128 0x34
 1161 00ac 00       		.byte	0
 1162 00ad 03       		.uleb128 0x3
 1163 00ae 0E       		.uleb128 0xe
 1164 00af 3A       		.uleb128 0x3a
 1165 00b0 0B       		.uleb128 0xb
 1166 00b1 3B       		.uleb128 0x3b
 1167 00b2 0B       		.uleb128 0xb
 1168 00b3 49       		.uleb128 0x49
 1169 00b4 13       		.uleb128 0x13
 1170 00b5 02       		.uleb128 0x2
 1171 00b6 18       		.uleb128 0x18
 1172 00b7 00       		.byte	0
 1173 00b8 00       		.byte	0
 1174 00b9 0E       		.uleb128 0xe
 1175 00ba 2E       		.uleb128 0x2e
 1176 00bb 01       		.byte	0x1
 1177 00bc 3F       		.uleb128 0x3f
 1178 00bd 19       		.uleb128 0x19
 1179 00be 03       		.uleb128 0x3
 1180 00bf 0E       		.uleb128 0xe
 1181 00c0 3A       		.uleb128 0x3a
 1182 00c1 0B       		.uleb128 0xb
 1183 00c2 3B       		.uleb128 0x3b
 1184 00c3 05       		.uleb128 0x5
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 31


 1185 00c4 27       		.uleb128 0x27
 1186 00c5 19       		.uleb128 0x19
 1187 00c6 11       		.uleb128 0x11
 1188 00c7 01       		.uleb128 0x1
 1189 00c8 12       		.uleb128 0x12
 1190 00c9 06       		.uleb128 0x6
 1191 00ca 40       		.uleb128 0x40
 1192 00cb 18       		.uleb128 0x18
 1193 00cc 9742     		.uleb128 0x2117
 1194 00ce 19       		.uleb128 0x19
 1195 00cf 01       		.uleb128 0x1
 1196 00d0 13       		.uleb128 0x13
 1197 00d1 00       		.byte	0
 1198 00d2 00       		.byte	0
 1199 00d3 0F       		.uleb128 0xf
 1200 00d4 05       		.uleb128 0x5
 1201 00d5 00       		.byte	0
 1202 00d6 03       		.uleb128 0x3
 1203 00d7 0E       		.uleb128 0xe
 1204 00d8 3A       		.uleb128 0x3a
 1205 00d9 0B       		.uleb128 0xb
 1206 00da 3B       		.uleb128 0x3b
 1207 00db 05       		.uleb128 0x5
 1208 00dc 49       		.uleb128 0x49
 1209 00dd 13       		.uleb128 0x13
 1210 00de 02       		.uleb128 0x2
 1211 00df 18       		.uleb128 0x18
 1212 00e0 00       		.byte	0
 1213 00e1 00       		.byte	0
 1214 00e2 10       		.uleb128 0x10
 1215 00e3 34       		.uleb128 0x34
 1216 00e4 00       		.byte	0
 1217 00e5 03       		.uleb128 0x3
 1218 00e6 0E       		.uleb128 0xe
 1219 00e7 3A       		.uleb128 0x3a
 1220 00e8 0B       		.uleb128 0xb
 1221 00e9 3B       		.uleb128 0x3b
 1222 00ea 05       		.uleb128 0x5
 1223 00eb 49       		.uleb128 0x49
 1224 00ec 13       		.uleb128 0x13
 1225 00ed 02       		.uleb128 0x2
 1226 00ee 18       		.uleb128 0x18
 1227 00ef 00       		.byte	0
 1228 00f0 00       		.byte	0
 1229 00f1 11       		.uleb128 0x11
 1230 00f2 2E       		.uleb128 0x2e
 1231 00f3 01       		.byte	0x1
 1232 00f4 3F       		.uleb128 0x3f
 1233 00f5 19       		.uleb128 0x19
 1234 00f6 03       		.uleb128 0x3
 1235 00f7 0E       		.uleb128 0xe
 1236 00f8 3A       		.uleb128 0x3a
 1237 00f9 0B       		.uleb128 0xb
 1238 00fa 3B       		.uleb128 0x3b
 1239 00fb 05       		.uleb128 0x5
 1240 00fc 27       		.uleb128 0x27
 1241 00fd 19       		.uleb128 0x19
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 32


 1242 00fe 49       		.uleb128 0x49
 1243 00ff 13       		.uleb128 0x13
 1244 0100 11       		.uleb128 0x11
 1245 0101 01       		.uleb128 0x1
 1246 0102 12       		.uleb128 0x12
 1247 0103 06       		.uleb128 0x6
 1248 0104 40       		.uleb128 0x40
 1249 0105 18       		.uleb128 0x18
 1250 0106 9742     		.uleb128 0x2117
 1251 0108 19       		.uleb128 0x19
 1252 0109 01       		.uleb128 0x1
 1253 010a 13       		.uleb128 0x13
 1254 010b 00       		.byte	0
 1255 010c 00       		.byte	0
 1256 010d 12       		.uleb128 0x12
 1257 010e 2E       		.uleb128 0x2e
 1258 010f 00       		.byte	0
 1259 0110 3F       		.uleb128 0x3f
 1260 0111 19       		.uleb128 0x19
 1261 0112 03       		.uleb128 0x3
 1262 0113 0E       		.uleb128 0xe
 1263 0114 3A       		.uleb128 0x3a
 1264 0115 0B       		.uleb128 0xb
 1265 0116 3B       		.uleb128 0x3b
 1266 0117 05       		.uleb128 0x5
 1267 0118 27       		.uleb128 0x27
 1268 0119 19       		.uleb128 0x19
 1269 011a 11       		.uleb128 0x11
 1270 011b 01       		.uleb128 0x1
 1271 011c 12       		.uleb128 0x12
 1272 011d 06       		.uleb128 0x6
 1273 011e 40       		.uleb128 0x40
 1274 011f 18       		.uleb128 0x18
 1275 0120 9742     		.uleb128 0x2117
 1276 0122 19       		.uleb128 0x19
 1277 0123 00       		.byte	0
 1278 0124 00       		.byte	0
 1279 0125 13       		.uleb128 0x13
 1280 0126 2E       		.uleb128 0x2e
 1281 0127 00       		.byte	0
 1282 0128 3F       		.uleb128 0x3f
 1283 0129 19       		.uleb128 0x19
 1284 012a 03       		.uleb128 0x3
 1285 012b 0E       		.uleb128 0xe
 1286 012c 3A       		.uleb128 0x3a
 1287 012d 0B       		.uleb128 0xb
 1288 012e 3B       		.uleb128 0x3b
 1289 012f 05       		.uleb128 0x5
 1290 0130 27       		.uleb128 0x27
 1291 0131 19       		.uleb128 0x19
 1292 0132 49       		.uleb128 0x49
 1293 0133 13       		.uleb128 0x13
 1294 0134 11       		.uleb128 0x11
 1295 0135 01       		.uleb128 0x1
 1296 0136 12       		.uleb128 0x12
 1297 0137 06       		.uleb128 0x6
 1298 0138 40       		.uleb128 0x40
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 33


 1299 0139 18       		.uleb128 0x18
 1300 013a 9742     		.uleb128 0x2117
 1301 013c 19       		.uleb128 0x19
 1302 013d 00       		.byte	0
 1303 013e 00       		.byte	0
 1304 013f 14       		.uleb128 0x14
 1305 0140 34       		.uleb128 0x34
 1306 0141 00       		.byte	0
 1307 0142 03       		.uleb128 0x3
 1308 0143 0E       		.uleb128 0xe
 1309 0144 3A       		.uleb128 0x3a
 1310 0145 0B       		.uleb128 0xb
 1311 0146 3B       		.uleb128 0x3b
 1312 0147 05       		.uleb128 0x5
 1313 0148 49       		.uleb128 0x49
 1314 0149 13       		.uleb128 0x13
 1315 014a 3F       		.uleb128 0x3f
 1316 014b 19       		.uleb128 0x19
 1317 014c 3C       		.uleb128 0x3c
 1318 014d 19       		.uleb128 0x19
 1319 014e 00       		.byte	0
 1320 014f 00       		.byte	0
 1321 0150 15       		.uleb128 0x15
 1322 0151 01       		.uleb128 0x1
 1323 0152 01       		.byte	0x1
 1324 0153 49       		.uleb128 0x49
 1325 0154 13       		.uleb128 0x13
 1326 0155 01       		.uleb128 0x1
 1327 0156 13       		.uleb128 0x13
 1328 0157 00       		.byte	0
 1329 0158 00       		.byte	0
 1330 0159 16       		.uleb128 0x16
 1331 015a 21       		.uleb128 0x21
 1332 015b 00       		.byte	0
 1333 015c 49       		.uleb128 0x49
 1334 015d 13       		.uleb128 0x13
 1335 015e 2F       		.uleb128 0x2f
 1336 015f 0B       		.uleb128 0xb
 1337 0160 00       		.byte	0
 1338 0161 00       		.byte	0
 1339 0162 17       		.uleb128 0x17
 1340 0163 34       		.uleb128 0x34
 1341 0164 00       		.byte	0
 1342 0165 03       		.uleb128 0x3
 1343 0166 0E       		.uleb128 0xe
 1344 0167 3A       		.uleb128 0x3a
 1345 0168 0B       		.uleb128 0xb
 1346 0169 3B       		.uleb128 0x3b
 1347 016a 0B       		.uleb128 0xb
 1348 016b 49       		.uleb128 0x49
 1349 016c 13       		.uleb128 0x13
 1350 016d 3F       		.uleb128 0x3f
 1351 016e 19       		.uleb128 0x19
 1352 016f 3C       		.uleb128 0x3c
 1353 0170 19       		.uleb128 0x19
 1354 0171 00       		.byte	0
 1355 0172 00       		.byte	0
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 34


 1356 0173 00       		.byte	0
 1357              		.section	.debug_aranges,"",%progbits
 1358 0000 7C000000 		.4byte	0x7c
 1359 0004 0200     		.2byte	0x2
 1360 0006 00000000 		.4byte	.Ldebug_info0
 1361 000a 04       		.byte	0x4
 1362 000b 00       		.byte	0
 1363 000c 0000     		.2byte	0
 1364 000e 0000     		.2byte	0
 1365 0010 00000000 		.4byte	.LFB56
 1366 0014 20000000 		.4byte	.LFE56-.LFB56
 1367 0018 00000000 		.4byte	.LFB57
 1368 001c 22000000 		.4byte	.LFE57-.LFB57
 1369 0020 00000000 		.4byte	.LFB58
 1370 0024 14000000 		.4byte	.LFE58-.LFB58
 1371 0028 00000000 		.4byte	.LFB59
 1372 002c E4000000 		.4byte	.LFE59-.LFB59
 1373 0030 00000000 		.4byte	.LFB60
 1374 0034 24000000 		.4byte	.LFE60-.LFB60
 1375 0038 00000000 		.4byte	.LFB61
 1376 003c 20000000 		.4byte	.LFE61-.LFB61
 1377 0040 00000000 		.4byte	.LFB62
 1378 0044 24000000 		.4byte	.LFE62-.LFB62
 1379 0048 00000000 		.4byte	.LFB63
 1380 004c 24000000 		.4byte	.LFE63-.LFB63
 1381 0050 00000000 		.4byte	.LFB64
 1382 0054 18000000 		.4byte	.LFE64-.LFB64
 1383 0058 00000000 		.4byte	.LFB65
 1384 005c 24000000 		.4byte	.LFE65-.LFB65
 1385 0060 00000000 		.4byte	.LFB66
 1386 0064 18000000 		.4byte	.LFE66-.LFB66
 1387 0068 00000000 		.4byte	.LFB67
 1388 006c 18000000 		.4byte	.LFE67-.LFB67
 1389 0070 00000000 		.4byte	.LFB68
 1390 0074 18000000 		.4byte	.LFE68-.LFB68
 1391 0078 00000000 		.4byte	0
 1392 007c 00000000 		.4byte	0
 1393              		.section	.debug_ranges,"",%progbits
 1394              	.Ldebug_ranges0:
 1395 0000 00000000 		.4byte	.LFB56
 1396 0004 20000000 		.4byte	.LFE56
 1397 0008 00000000 		.4byte	.LFB57
 1398 000c 22000000 		.4byte	.LFE57
 1399 0010 00000000 		.4byte	.LFB58
 1400 0014 14000000 		.4byte	.LFE58
 1401 0018 00000000 		.4byte	.LFB59
 1402 001c E4000000 		.4byte	.LFE59
 1403 0020 00000000 		.4byte	.LFB60
 1404 0024 24000000 		.4byte	.LFE60
 1405 0028 00000000 		.4byte	.LFB61
 1406 002c 20000000 		.4byte	.LFE61
 1407 0030 00000000 		.4byte	.LFB62
 1408 0034 24000000 		.4byte	.LFE62
 1409 0038 00000000 		.4byte	.LFB63
 1410 003c 24000000 		.4byte	.LFE63
 1411 0040 00000000 		.4byte	.LFB64
 1412 0044 18000000 		.4byte	.LFE64
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 35


 1413 0048 00000000 		.4byte	.LFB65
 1414 004c 24000000 		.4byte	.LFE65
 1415 0050 00000000 		.4byte	.LFB66
 1416 0054 18000000 		.4byte	.LFE66
 1417 0058 00000000 		.4byte	.LFB67
 1418 005c 18000000 		.4byte	.LFE67
 1419 0060 00000000 		.4byte	.LFB68
 1420 0064 18000000 		.4byte	.LFE68
 1421 0068 00000000 		.4byte	0
 1422 006c 00000000 		.4byte	0
 1423              		.section	.debug_line,"",%progbits
 1424              	.Ldebug_line0:
 1425 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 1425      02005F01 
 1425      00000201 
 1425      FB0E0D00 
 1425      01010101 
 1426              	.LASF18:
 1427 0000 72656733 		.ascii	"reg32\000"
 1427      3200
 1428              	.LASF11:
 1429 0006 5F5F696E 		.ascii	"__int32_t\000"
 1429      7433325F 
 1429      7400
 1430              	.LASF32:
 1431 0010 6973725F 		.ascii	"isr_GetVector\000"
 1431      47657456 
 1431      6563746F 
 1431      7200
 1432              	.LASF43:
 1433 001e 6973725F 		.ascii	"isr_GetState\000"
 1433      47657453 
 1433      74617465 
 1433      00
 1434              	.LASF41:
 1435 002b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\isr.c\000"
 1435      6E657261 
 1435      7465645F 
 1435      536F7572 
 1435      63655C50 
 1436              	.LASF30:
 1437 004a 6973725F 		.ascii	"isr_SetPriority\000"
 1437      53657450 
 1437      72696F72 
 1437      69747900 
 1438              	.LASF21:
 1439 005a 6973725F 		.ascii	"isr_Stop\000"
 1439      53746F70 
 1439      00
 1440              	.LASF15:
 1441 0063 666C6F61 		.ascii	"float\000"
 1441      7400
 1442              	.LASF27:
 1443 0069 6973725F 		.ascii	"isr_SetVector\000"
 1443      53657456 
 1443      6563746F 
 1443      7200
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 36


 1444              	.LASF42:
 1445 0077 433A5C55 		.ascii	"C:\\Users\\pearlstl\\Documents\\MUSE-Research\\proj"
 1445      73657273 
 1445      5C706561 
 1445      726C7374 
 1445      6C5C446F 
 1446 00a5 5F616E63 		.ascii	"_anc\\system\\WaveGenerator1\\WaveGenerator1.cydsn\000"
 1446      5C737973 
 1446      74656D5C 
 1446      57617665 
 1446      47656E65 
 1447              	.LASF2:
 1448 00d5 756E7369 		.ascii	"unsigned char\000"
 1448      676E6564 
 1448      20636861 
 1448      7200
 1449              	.LASF17:
 1450 00e3 72656738 		.ascii	"reg8\000"
 1450      00
 1451              	.LASF40:
 1452 00e8 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1452      4320342E 
 1452      382E3420 
 1452      32303134 
 1452      30353236 
 1453 011b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1453      20726576 
 1453      6973696F 
 1453      6E203231 
 1453      31333538 
 1454 014e 30202D66 		.ascii	"0 -ffunction-sections\000"
 1454      66756E63 
 1454      74696F6E 
 1454      2D736563 
 1454      74696F6E 
 1455              	.LASF6:
 1456 0164 6C6F6E67 		.ascii	"long unsigned int\000"
 1456      20756E73 
 1456      69676E65 
 1456      6420696E 
 1456      7400
 1457              	.LASF20:
 1458 0176 6973725F 		.ascii	"isr_Start\000"
 1458      53746172 
 1458      7400
 1459              	.LASF4:
 1460 0180 73686F72 		.ascii	"short unsigned int\000"
 1460      7420756E 
 1460      7369676E 
 1460      65642069 
 1460      6E7400
 1461              	.LASF38:
 1462 0193 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1462      52784275 
 1462      66666572 
 1462      00
 1463              	.LASF37:
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 37


 1464 01a0 6973725F 		.ascii	"isr_ClearPending\000"
 1464      436C6561 
 1464      7250656E 
 1464      64696E67 
 1464      00
 1465              	.LASF16:
 1466 01b1 646F7562 		.ascii	"double\000"
 1466      6C6500
 1467              	.LASF3:
 1468 01b8 73686F72 		.ascii	"short int\000"
 1468      7420696E 
 1468      7400
 1469              	.LASF31:
 1470 01c2 7072696F 		.ascii	"priority\000"
 1470      72697479 
 1470      00
 1471              	.LASF36:
 1472 01cb 6973725F 		.ascii	"isr_SetPending\000"
 1472      53657450 
 1472      656E6469 
 1472      6E6700
 1473              	.LASF22:
 1474 01da 6973725F 		.ascii	"isr_StartEx\000"
 1474      53746172 
 1474      74457800 
 1475              	.LASF14:
 1476 01e6 75696E74 		.ascii	"uint32\000"
 1476      333200
 1477              	.LASF25:
 1478 01ed 64635F73 		.ascii	"dc_sum\000"
 1478      756D00
 1479              	.LASF0:
 1480 01f4 756E7369 		.ascii	"unsigned int\000"
 1480      676E6564 
 1480      20696E74 
 1480      00
 1481              	.LASF28:
 1482 0201 61646472 		.ascii	"address\000"
 1482      65737300 
 1483              	.LASF8:
 1484 0209 6C6F6E67 		.ascii	"long long unsigned int\000"
 1484      206C6F6E 
 1484      6720756E 
 1484      7369676E 
 1484      65642069 
 1485              	.LASF19:
 1486 0220 63796973 		.ascii	"cyisraddress\000"
 1486      72616464 
 1486      72657373 
 1486      00
 1487              	.LASF24:
 1488 022d 64635F63 		.ascii	"dc_count\000"
 1488      6F756E74 
 1488      00
 1489              	.LASF23:
 1490 0236 6973725F 		.ascii	"isr_Interrupt\000"
 1490      496E7465 
ARM GAS  C:\Users\pearlstl\AppData\Local\Temp\ccJhORue.s 			page 38


 1490      72727570 
 1490      7400
 1491              	.LASF12:
 1492 0244 696E7433 		.ascii	"int32_t\000"
 1492      325F7400 
 1493              	.LASF9:
 1494 024c 73697A65 		.ascii	"sizetype\000"
 1494      74797065 
 1494      00
 1495              	.LASF7:
 1496 0255 6C6F6E67 		.ascii	"long long int\000"
 1496      206C6F6E 
 1496      6720696E 
 1496      7400
 1497              	.LASF10:
 1498 0263 63686172 		.ascii	"char\000"
 1498      00
 1499              	.LASF29:
 1500 0268 72616D56 		.ascii	"ramVectorTable\000"
 1500      6563746F 
 1500      72546162 
 1500      6C6500
 1501              	.LASF26:
 1502 0277 77617665 		.ascii	"wave_idx\000"
 1502      5F696478 
 1502      00
 1503              	.LASF35:
 1504 0280 6973725F 		.ascii	"isr_Disable\000"
 1504      44697361 
 1504      626C6500 
 1505              	.LASF13:
 1506 028c 75696E74 		.ascii	"uint8\000"
 1506      3800
 1507              	.LASF39:
 1508 0292 77617665 		.ascii	"wave_table\000"
 1508      5F746162 
 1508      6C6500
 1509              	.LASF5:
 1510 029d 6C6F6E67 		.ascii	"long int\000"
 1510      20696E74 
 1510      00
 1511              	.LASF1:
 1512 02a6 7369676E 		.ascii	"signed char\000"
 1512      65642063 
 1512      68617200 
 1513              	.LASF34:
 1514 02b2 6973725F 		.ascii	"isr_Enable\000"
 1514      456E6162 
 1514      6C6500
 1515              	.LASF33:
 1516 02bd 6973725F 		.ascii	"isr_GetPriority\000"
 1516      47657450 
 1516      72696F72 
 1516      69747900 
 1517              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
