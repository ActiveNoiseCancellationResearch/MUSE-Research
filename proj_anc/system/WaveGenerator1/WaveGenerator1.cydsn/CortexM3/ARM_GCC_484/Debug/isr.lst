ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"isr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	cap_array,30000,4
  19              		.section	.text.isr_Start,"ax",%progbits
  20              		.align	2
  21              		.global	isr_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_Start, %function
  25              	isr_Start:
  26              	.LFB56:
  27              		.file 1 ".\\Generated_Source\\PSoC5\\isr.c"
   1:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/isr.c **** * File Name: isr.c  
   3:.\Generated_Source\PSoC5/isr.c **** * Version 1.70
   4:.\Generated_Source\PSoC5/isr.c **** *
   5:.\Generated_Source\PSoC5/isr.c **** *  Description:
   6:.\Generated_Source\PSoC5/isr.c **** *   API for controlling the state of an interrupt.
   7:.\Generated_Source\PSoC5/isr.c **** *
   8:.\Generated_Source\PSoC5/isr.c **** *
   9:.\Generated_Source\PSoC5/isr.c **** *  Note:
  10:.\Generated_Source\PSoC5/isr.c **** *
  11:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/isr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/isr.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:.\Generated_Source\PSoC5/isr.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:.\Generated_Source\PSoC5/isr.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/isr.c **** 
  18:.\Generated_Source\PSoC5/isr.c **** 
  19:.\Generated_Source\PSoC5/isr.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC5/isr.c **** #include <CyLib.h>
  21:.\Generated_Source\PSoC5/isr.c **** #include <isr.h>
  22:.\Generated_Source\PSoC5/isr.c **** 
  23:.\Generated_Source\PSoC5/isr.c **** #if !defined(isr__REMOVED) /* Check for removal by optimization */
  24:.\Generated_Source\PSoC5/isr.c **** 
  25:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC5/isr.c **** *  Place your includes, defines and code here 
  27:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************/
  28:.\Generated_Source\PSoC5/isr.c **** /* `#START isr_intc` */
  29:.\Generated_Source\PSoC5/isr.c **** #include <project.h>
  30:.\Generated_Source\PSoC5/isr.c **** #include "canceller.h"
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 2


  31:.\Generated_Source\PSoC5/isr.c **** #include "ANC.h"
  32:.\Generated_Source\PSoC5/isr.c **** #include <stdlib.h>
  33:.\Generated_Source\PSoC5/isr.c **** #include <stdio.h>
  34:.\Generated_Source\PSoC5/isr.c **** #include <string.h>
  35:.\Generated_Source\PSoC5/isr.c ****     
  36:.\Generated_Source\PSoC5/isr.c **** uint8 cap_array[NUM_SAMPS_TO_CAPTURE];
  37:.\Generated_Source\PSoC5/isr.c **** extern int n;
  38:.\Generated_Source\PSoC5/isr.c **** extern int wave_table[WAVESIZE];
  39:.\Generated_Source\PSoC5/isr.c **** /* `#END` */
  40:.\Generated_Source\PSoC5/isr.c **** 
  41:.\Generated_Source\PSoC5/isr.c **** #ifndef CYINT_IRQ_BASE
  42:.\Generated_Source\PSoC5/isr.c **** #define CYINT_IRQ_BASE      16
  43:.\Generated_Source\PSoC5/isr.c **** #endif /* CYINT_IRQ_BASE */
  44:.\Generated_Source\PSoC5/isr.c **** #ifndef CYINT_VECT_TABLE
  45:.\Generated_Source\PSoC5/isr.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  46:.\Generated_Source\PSoC5/isr.c **** #endif /* CYINT_VECT_TABLE */
  47:.\Generated_Source\PSoC5/isr.c **** 
  48:.\Generated_Source\PSoC5/isr.c **** /* Declared in startup, used to set unused interrupts to. */
  49:.\Generated_Source\PSoC5/isr.c **** CY_ISR_PROTO(IntDefaultHandler);
  50:.\Generated_Source\PSoC5/isr.c **** 
  51:.\Generated_Source\PSoC5/isr.c **** 
  52:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
  53:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Start
  54:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
  55:.\Generated_Source\PSoC5/isr.c **** *
  56:.\Generated_Source\PSoC5/isr.c **** * Summary:
  57:.\Generated_Source\PSoC5/isr.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  58:.\Generated_Source\PSoC5/isr.c **** *  sets the default interrupt vector, sets the priority from the value in the
  59:.\Generated_Source\PSoC5/isr.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  60:.\Generated_Source\PSoC5/isr.c **** *  interrupt controller.
  61:.\Generated_Source\PSoC5/isr.c **** *
  62:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
  63:.\Generated_Source\PSoC5/isr.c **** *   None
  64:.\Generated_Source\PSoC5/isr.c **** *
  65:.\Generated_Source\PSoC5/isr.c **** * Return:
  66:.\Generated_Source\PSoC5/isr.c **** *   None
  67:.\Generated_Source\PSoC5/isr.c **** *
  68:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC5/isr.c **** void isr_Start(void)
  70:.\Generated_Source\PSoC5/isr.c **** {
  28              		.loc 1 70 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  71:.\Generated_Source\PSoC5/isr.c ****     /* For all we know the interrupt is active. */
  72:.\Generated_Source\PSoC5/isr.c ****     isr_Disable();
  38              		.loc 1 72 0
  39 0004 FFF7FEFF 		bl	isr_Disable
  73:.\Generated_Source\PSoC5/isr.c **** 
  74:.\Generated_Source\PSoC5/isr.c ****     /* Set the ISR to point to the isr Interrupt. */
  75:.\Generated_Source\PSoC5/isr.c ****     isr_SetVector(&isr_Interrupt);
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 3


  40              		.loc 1 75 0
  41 0008 0448     		ldr	r0, .L2
  42 000a FFF7FEFF 		bl	isr_SetVector
  76:.\Generated_Source\PSoC5/isr.c **** 
  77:.\Generated_Source\PSoC5/isr.c ****     /* Set the priority. */
  78:.\Generated_Source\PSoC5/isr.c ****     isr_SetPriority((uint8)isr_INTC_PRIOR_NUMBER);
  43              		.loc 1 78 0
  44 000e 0720     		movs	r0, #7
  45 0010 FFF7FEFF 		bl	isr_SetPriority
  79:.\Generated_Source\PSoC5/isr.c **** 
  80:.\Generated_Source\PSoC5/isr.c ****     /* Enable it. */
  81:.\Generated_Source\PSoC5/isr.c ****     isr_Enable();
  46              		.loc 1 81 0
  47 0014 FFF7FEFF 		bl	isr_Enable
  82:.\Generated_Source\PSoC5/isr.c **** }
  48              		.loc 1 82 0
  49 0018 80BD     		pop	{r7, pc}
  50              	.L3:
  51 001a 00BF     		.align	2
  52              	.L2:
  53 001c 00000000 		.word	isr_Interrupt
  54              		.cfi_endproc
  55              	.LFE56:
  56              		.size	isr_Start, .-isr_Start
  57              		.section	.text.isr_StartEx,"ax",%progbits
  58              		.align	2
  59              		.global	isr_StartEx
  60              		.thumb
  61              		.thumb_func
  62              		.type	isr_StartEx, %function
  63              	isr_StartEx:
  64              	.LFB57:
  83:.\Generated_Source\PSoC5/isr.c **** 
  84:.\Generated_Source\PSoC5/isr.c **** 
  85:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_StartEx
  87:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
  88:.\Generated_Source\PSoC5/isr.c **** *
  89:.\Generated_Source\PSoC5/isr.c **** * Summary:
  90:.\Generated_Source\PSoC5/isr.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  91:.\Generated_Source\PSoC5/isr.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  92:.\Generated_Source\PSoC5/isr.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  93:.\Generated_Source\PSoC5/isr.c **** *  the interrupt to the interrupt controller.
  94:.\Generated_Source\PSoC5/isr.c **** *  
  95:.\Generated_Source\PSoC5/isr.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  96:.\Generated_Source\PSoC5/isr.c **** *  used to provide consistent definition across compilers:
  97:.\Generated_Source\PSoC5/isr.c **** *  
  98:.\Generated_Source\PSoC5/isr.c **** *  Function definition example:
  99:.\Generated_Source\PSoC5/isr.c **** *   CY_ISR(MyISR)
 100:.\Generated_Source\PSoC5/isr.c **** *   {
 101:.\Generated_Source\PSoC5/isr.c **** *   }
 102:.\Generated_Source\PSoC5/isr.c **** *   Function prototype example:
 103:.\Generated_Source\PSoC5/isr.c **** *   CY_ISR_PROTO(MyISR);
 104:.\Generated_Source\PSoC5/isr.c **** *
 105:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
 106:.\Generated_Source\PSoC5/isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
 107:.\Generated_Source\PSoC5/isr.c **** *
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 4


 108:.\Generated_Source\PSoC5/isr.c **** * Return:
 109:.\Generated_Source\PSoC5/isr.c **** *   None
 110:.\Generated_Source\PSoC5/isr.c **** *
 111:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 112:.\Generated_Source\PSoC5/isr.c **** void isr_StartEx(cyisraddress address)
 113:.\Generated_Source\PSoC5/isr.c **** {
  65              		.loc 1 113 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 8
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 80B5     		push	{r7, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 7, -8
  72              		.cfi_offset 14, -4
  73 0002 82B0     		sub	sp, sp, #8
  74              		.cfi_def_cfa_offset 16
  75 0004 00AF     		add	r7, sp, #0
  76              		.cfi_def_cfa_register 7
  77 0006 7860     		str	r0, [r7, #4]
 114:.\Generated_Source\PSoC5/isr.c ****     /* For all we know the interrupt is active. */
 115:.\Generated_Source\PSoC5/isr.c ****     isr_Disable();
  78              		.loc 1 115 0
  79 0008 FFF7FEFF 		bl	isr_Disable
 116:.\Generated_Source\PSoC5/isr.c **** 
 117:.\Generated_Source\PSoC5/isr.c ****     /* Set the ISR to point to the isr Interrupt. */
 118:.\Generated_Source\PSoC5/isr.c ****     isr_SetVector(address);
  80              		.loc 1 118 0
  81 000c 7868     		ldr	r0, [r7, #4]
  82 000e FFF7FEFF 		bl	isr_SetVector
 119:.\Generated_Source\PSoC5/isr.c **** 
 120:.\Generated_Source\PSoC5/isr.c ****     /* Set the priority. */
 121:.\Generated_Source\PSoC5/isr.c ****     isr_SetPriority((uint8)isr_INTC_PRIOR_NUMBER);
  83              		.loc 1 121 0
  84 0012 0720     		movs	r0, #7
  85 0014 FFF7FEFF 		bl	isr_SetPriority
 122:.\Generated_Source\PSoC5/isr.c **** 
 123:.\Generated_Source\PSoC5/isr.c ****     /* Enable it. */
 124:.\Generated_Source\PSoC5/isr.c ****     isr_Enable();
  86              		.loc 1 124 0
  87 0018 FFF7FEFF 		bl	isr_Enable
 125:.\Generated_Source\PSoC5/isr.c **** }
  88              		.loc 1 125 0
  89 001c 0837     		adds	r7, r7, #8
  90 001e BD46     		mov	sp, r7
  91              		@ sp needed
  92 0020 80BD     		pop	{r7, pc}
  93              		.cfi_endproc
  94              	.LFE57:
  95              		.size	isr_StartEx, .-isr_StartEx
  96 0022 00BF     		.section	.text.isr_Stop,"ax",%progbits
  97              		.align	2
  98              		.global	isr_Stop
  99              		.thumb
 100              		.thumb_func
 101              		.type	isr_Stop, %function
 102              	isr_Stop:
 103              	.LFB58:
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 5


 126:.\Generated_Source\PSoC5/isr.c **** 
 127:.\Generated_Source\PSoC5/isr.c **** 
 128:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 129:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Stop
 130:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 131:.\Generated_Source\PSoC5/isr.c **** *
 132:.\Generated_Source\PSoC5/isr.c **** * Summary:
 133:.\Generated_Source\PSoC5/isr.c **** *   Disables and removes the interrupt.
 134:.\Generated_Source\PSoC5/isr.c **** *
 135:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
 136:.\Generated_Source\PSoC5/isr.c **** *   None
 137:.\Generated_Source\PSoC5/isr.c **** *
 138:.\Generated_Source\PSoC5/isr.c **** * Return:
 139:.\Generated_Source\PSoC5/isr.c **** *   None
 140:.\Generated_Source\PSoC5/isr.c **** *
 141:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC5/isr.c **** void isr_Stop(void)
 143:.\Generated_Source\PSoC5/isr.c **** {
 104              		.loc 1 143 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 144:.\Generated_Source\PSoC5/isr.c ****     /* Disable this interrupt. */
 145:.\Generated_Source\PSoC5/isr.c ****     isr_Disable();
 114              		.loc 1 145 0
 115 0004 FFF7FEFF 		bl	isr_Disable
 146:.\Generated_Source\PSoC5/isr.c **** 
 147:.\Generated_Source\PSoC5/isr.c ****     /* Set the ISR to point to the passive one. */
 148:.\Generated_Source\PSoC5/isr.c ****     isr_SetVector(&IntDefaultHandler);
 116              		.loc 1 148 0
 117 0008 0148     		ldr	r0, .L6
 118 000a FFF7FEFF 		bl	isr_SetVector
 149:.\Generated_Source\PSoC5/isr.c **** }
 119              		.loc 1 149 0
 120 000e 80BD     		pop	{r7, pc}
 121              	.L7:
 122              		.align	2
 123              	.L6:
 124 0010 00000000 		.word	IntDefaultHandler
 125              		.cfi_endproc
 126              	.LFE58:
 127              		.size	isr_Stop, .-isr_Stop
 128              		.section	.rodata
 129              		.align	2
 130              	.LC0:
 131 0000 25640A00 		.ascii	"%d\012\000"
 132              		.section	.text.isr_Interrupt,"ax",%progbits
 133              		.align	2
 134              		.global	isr_Interrupt
 135              		.thumb
 136              		.thumb_func
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 6


 137              		.type	isr_Interrupt, %function
 138              	isr_Interrupt:
 139              	.LFB59:
 150:.\Generated_Source\PSoC5/isr.c **** 
 151:.\Generated_Source\PSoC5/isr.c **** 
 152:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 153:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Interrupt
 154:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 155:.\Generated_Source\PSoC5/isr.c **** *
 156:.\Generated_Source\PSoC5/isr.c **** * Summary:
 157:.\Generated_Source\PSoC5/isr.c **** *   The default Interrupt Service Routine for isr.
 158:.\Generated_Source\PSoC5/isr.c **** *
 159:.\Generated_Source\PSoC5/isr.c **** *   Add custom code between the coments to keep the next version of this file
 160:.\Generated_Source\PSoC5/isr.c **** *   from over writting your code.
 161:.\Generated_Source\PSoC5/isr.c **** *
 162:.\Generated_Source\PSoC5/isr.c **** * Parameters:  
 163:.\Generated_Source\PSoC5/isr.c **** *
 164:.\Generated_Source\PSoC5/isr.c **** * Return:
 165:.\Generated_Source\PSoC5/isr.c **** *   None
 166:.\Generated_Source\PSoC5/isr.c **** *
 167:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 168:.\Generated_Source\PSoC5/isr.c **** CY_ISR(isr_Interrupt)
 169:.\Generated_Source\PSoC5/isr.c **** {
 140              		.loc 1 169 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 56
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 0000 80B5     		push	{r7, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 8EB0     		sub	sp, sp, #56
 149              		.cfi_def_cfa_offset 64
 150 0004 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 170:.\Generated_Source\PSoC5/isr.c ****     /*  Place your Interrupt code here. */
 171:.\Generated_Source\PSoC5/isr.c ****     /* `#START isr_Interrupt` */
 172:.\Generated_Source\PSoC5/isr.c ****     
 173:.\Generated_Source\PSoC5/isr.c ****     #define NUM_TONES (1)                 // number of tones to be generated
 174:.\Generated_Source\PSoC5/isr.c ****                            // Discrete time index
 175:.\Generated_Source\PSoC5/isr.c ****     static int wave_idx=0;
 176:.\Generated_Source\PSoC5/isr.c **** //    int freqs[] = { 256 };                // Array of tone frequencies, in Hz
 177:.\Generated_Source\PSoC5/isr.c **** //    int ampls[] = { 16000 };              // Array of tone amplitudes, C1.0.15, roughly 0.5 for n
 178:.\Generated_Source\PSoC5/isr.c **** //    int T       = (1<<20)/20000;          // Samping period, in 1/2^20) seconds //16*1024 (would 
 179:.\Generated_Source\PSoC5/isr.c **** //    int k;
 180:.\Generated_Source\PSoC5/isr.c **** //    int value;
 181:.\Generated_Source\PSoC5/isr.c ****     int x=0;
 152              		.loc 1 181 0
 153 0006 0023     		movs	r3, #0
 154 0008 3B63     		str	r3, [r7, #48]
 182:.\Generated_Source\PSoC5/isr.c ****     int e_;
 183:.\Generated_Source\PSoC5/isr.c ****     int i;
 184:.\Generated_Source\PSoC5/isr.c ****    
 185:.\Generated_Source\PSoC5/isr.c ****  
 186:.\Generated_Source\PSoC5/isr.c **** //  for (k = 0 ; k<NUM_TONES ; ++k)
 187:.\Generated_Source\PSoC5/isr.c **** //  {
 188:.\Generated_Source\PSoC5/isr.c **** //      value = n*T*freqs[k]/(1<<5);
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 7


 189:.\Generated_Source\PSoC5/isr.c **** //      value=value&0x7fff;
 190:.\Generated_Source\PSoC5/isr.c **** //      value=(value*ampls[k])>>15;
 191:.\Generated_Source\PSoC5/isr.c **** //      x+=value;                         //15 bit unsigned number
 192:.\Generated_Source\PSoC5/isr.c **** //  }
 193:.\Generated_Source\PSoC5/isr.c **** //            
 194:.\Generated_Source\PSoC5/isr.c **** //              
 195:.\Generated_Source\PSoC5/isr.c **** //    x = (x>>4);                           //now a 8bit 2's comp value
 196:.\Generated_Source\PSoC5/isr.c **** //    x+=128;                               //Offset binary. VDAC wants this
 197:.\Generated_Source\PSoC5/isr.c ****      
 198:.\Generated_Source\PSoC5/isr.c ****     x = wave_table[wave_idx];
 155              		.loc 1 198 0
 156 000a 394B     		ldr	r3, .L14
 157 000c 1A68     		ldr	r2, [r3]
 158 000e 394B     		ldr	r3, .L14+4
 159 0010 53F82230 		ldr	r3, [r3, r2, lsl #2]
 160 0014 3B63     		str	r3, [r7, #48]
 199:.\Generated_Source\PSoC5/isr.c ****     x=(x)>>5;                             // rounds to an 8 bit number
 161              		.loc 1 199 0
 162 0016 3B6B     		ldr	r3, [r7, #48]
 163 0018 5B11     		asrs	r3, r3, #5
 164 001a 3B63     		str	r3, [r7, #48]
 200:.\Generated_Source\PSoC5/isr.c ****     x=x+128;                              // converts from 2's comp to offset binary
 165              		.loc 1 200 0
 166 001c 3B6B     		ldr	r3, [r7, #48]
 167 001e 8033     		adds	r3, r3, #128
 168 0020 3B63     		str	r3, [r7, #48]
 201:.\Generated_Source\PSoC5/isr.c **** //      
 202:.\Generated_Source\PSoC5/isr.c **** //    x = rand();   
 203:.\Generated_Source\PSoC5/isr.c ****     //fixed point -1 to 1                   double(x)/2^31(2 billion)
 204:.\Generated_Source\PSoC5/isr.c ****     VDAC8_2_ls_SetValue(x);
 169              		.loc 1 204 0
 170 0022 3B6B     		ldr	r3, [r7, #48]
 171 0024 DBB2     		uxtb	r3, r3
 172 0026 1846     		mov	r0, r3
 173 0028 FFF7FEFF 		bl	VDAC8_2_ls_SetValue
 205:.\Generated_Source\PSoC5/isr.c ****     
 206:.\Generated_Source\PSoC5/isr.c ****     e_ =  ADC_SAR_GetResult16();          //Set's value to the ADC output (16bit 2's comp value)
 174              		.loc 1 206 0
 175 002c FFF7FEFF 		bl	ADC_SAR_GetResult16
 176 0030 0346     		mov	r3, r0
 177 0032 FB62     		str	r3, [r7, #44]
 207:.\Generated_Source\PSoC5/isr.c ****         
 208:.\Generated_Source\PSoC5/isr.c ****        
 209:.\Generated_Source\PSoC5/isr.c ****     //canceller code goes here
 210:.\Generated_Source\PSoC5/isr.c ****     canceller_new_sample (x);
 178              		.loc 1 210 0
 179 0034 386B     		ldr	r0, [r7, #48]
 180 0036 FFF7FEFF 		bl	canceller_new_sample
 211:.\Generated_Source\PSoC5/isr.c ****     canceller_coeff_update (e_);
 181              		.loc 1 211 0
 182 003a F86A     		ldr	r0, [r7, #44]
 183 003c FFF7FEFF 		bl	canceller_coeff_update
 212:.\Generated_Source\PSoC5/isr.c ****     //end canceller code  
 213:.\Generated_Source\PSoC5/isr.c ****         
 214:.\Generated_Source\PSoC5/isr.c ****     VDAC8_1_hs_SetValue(x);              
 184              		.loc 1 214 0
 185 0040 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 8


 186 0042 DBB2     		uxtb	r3, r3
 187 0044 1846     		mov	r0, r3
 188 0046 FFF7FEFF 		bl	VDAC8_1_hs_SetValue
 215:.\Generated_Source\PSoC5/isr.c ****        
 216:.\Generated_Source\PSoC5/isr.c ****     ++wave_idx;
 189              		.loc 1 216 0
 190 004a 294B     		ldr	r3, .L14
 191 004c 1B68     		ldr	r3, [r3]
 192 004e 5A1C     		adds	r2, r3, #1
 193 0050 274B     		ldr	r3, .L14
 194 0052 1A60     		str	r2, [r3]
 217:.\Generated_Source\PSoC5/isr.c ****         
 218:.\Generated_Source\PSoC5/isr.c ****     if (wave_idx == WAVESIZE)
 195              		.loc 1 218 0
 196 0054 264B     		ldr	r3, .L14
 197 0056 1B68     		ldr	r3, [r3]
 198 0058 142B     		cmp	r3, #20
 199 005a 02D1     		bne	.L9
 219:.\Generated_Source\PSoC5/isr.c ****     {
 220:.\Generated_Source\PSoC5/isr.c ****         wave_idx=0;
 200              		.loc 1 220 0
 201 005c 244B     		ldr	r3, .L14
 202 005e 0022     		movs	r2, #0
 203 0060 1A60     		str	r2, [r3]
 204              	.L9:
 221:.\Generated_Source\PSoC5/isr.c ****     }
 222:.\Generated_Source\PSoC5/isr.c ****         
 223:.\Generated_Source\PSoC5/isr.c ****     if (n < NUM_SAMPS_TO_CAPTURE)
 205              		.loc 1 223 0
 206 0062 254B     		ldr	r3, .L14+8
 207 0064 1A68     		ldr	r2, [r3]
 208 0066 47F22F53 		movw	r3, #29999
 209 006a 9A42     		cmp	r2, r3
 210 006c 0CDC     		bgt	.L10
 224:.\Generated_Source\PSoC5/isr.c ****     {
 225:.\Generated_Source\PSoC5/isr.c ****         cap_array[n] = e_>>4;
 211              		.loc 1 225 0
 212 006e 224B     		ldr	r3, .L14+8
 213 0070 1B68     		ldr	r3, [r3]
 214 0072 FA6A     		ldr	r2, [r7, #44]
 215 0074 1211     		asrs	r2, r2, #4
 216 0076 D1B2     		uxtb	r1, r2
 217 0078 204A     		ldr	r2, .L14+12
 218 007a D154     		strb	r1, [r2, r3]
 226:.\Generated_Source\PSoC5/isr.c ****         ++n;
 219              		.loc 1 226 0
 220 007c 1E4B     		ldr	r3, .L14+8
 221 007e 1B68     		ldr	r3, [r3]
 222 0080 5A1C     		adds	r2, r3, #1
 223 0082 1D4B     		ldr	r3, .L14+8
 224 0084 1A60     		str	r2, [r3]
 225 0086 2FE0     		b	.L8
 226              	.L10:
 227:.\Generated_Source\PSoC5/isr.c ****     }
 228:.\Generated_Source\PSoC5/isr.c ****     else if (n == NUM_SAMPS_TO_CAPTURE)
 227              		.loc 1 228 0
 228 0088 1B4B     		ldr	r3, .L14+8
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 9


 229 008a 1A68     		ldr	r2, [r3]
 230 008c 47F23053 		movw	r3, #30000
 231 0090 9A42     		cmp	r2, r3
 232 0092 29D1     		bne	.L8
 233              	.LBB2:
 229:.\Generated_Source\PSoC5/isr.c ****     {
 230:.\Generated_Source\PSoC5/isr.c ****         int the_val;
 231:.\Generated_Source\PSoC5/isr.c ****         char my_string[32];
 232:.\Generated_Source\PSoC5/isr.c ****         int length;
 233:.\Generated_Source\PSoC5/isr.c ****         
 234:.\Generated_Source\PSoC5/isr.c ****         for(i=0;i<NUM_SAMPS_TO_CAPTURE;++i)
 234              		.loc 1 234 0
 235 0094 0023     		movs	r3, #0
 236 0096 7B63     		str	r3, [r7, #52]
 237 0098 1CE0     		b	.L12
 238              	.L13:
 235:.\Generated_Source\PSoC5/isr.c ****             {
 236:.\Generated_Source\PSoC5/isr.c ****                 the_val = cap_array[i];
 239              		.loc 1 236 0 discriminator 2
 240 009a 184A     		ldr	r2, .L14+12
 241 009c 7B6B     		ldr	r3, [r7, #52]
 242 009e 1344     		add	r3, r3, r2
 243 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 00a2 BB62     		str	r3, [r7, #40]
 237:.\Generated_Source\PSoC5/isr.c ****                 sprintf(my_string ,"%d\n", the_val & 0xFFFF);
 245              		.loc 1 237 0 discriminator 2
 246 00a4 BB6A     		ldr	r3, [r7, #40]
 247 00a6 9BB2     		uxth	r3, r3
 248 00a8 3A1D     		adds	r2, r7, #4
 249 00aa 1046     		mov	r0, r2
 250 00ac 1449     		ldr	r1, .L14+16
 251 00ae 1A46     		mov	r2, r3
 252 00b0 FFF7FEFF 		bl	sprintf
 238:.\Generated_Source\PSoC5/isr.c ****                 length = strlen(my_string);
 253              		.loc 1 238 0 discriminator 2
 254 00b4 3B1D     		adds	r3, r7, #4
 255 00b6 1846     		mov	r0, r3
 256 00b8 FFF7FEFF 		bl	strlen
 257 00bc 0346     		mov	r3, r0
 258 00be 7B62     		str	r3, [r7, #36]
 239:.\Generated_Source\PSoC5/isr.c ****                 UART_1_PutArray( (uint8 *) my_string, length); 
 259              		.loc 1 239 0 discriminator 2
 260 00c0 7B6A     		ldr	r3, [r7, #36]
 261 00c2 DBB2     		uxtb	r3, r3
 262 00c4 3A1D     		adds	r2, r7, #4
 263 00c6 1046     		mov	r0, r2
 264 00c8 1946     		mov	r1, r3
 265 00ca FFF7FEFF 		bl	UART_1_PutArray
 234:.\Generated_Source\PSoC5/isr.c ****         for(i=0;i<NUM_SAMPS_TO_CAPTURE;++i)
 266              		.loc 1 234 0 discriminator 2
 267 00ce 7B6B     		ldr	r3, [r7, #52]
 268 00d0 0133     		adds	r3, r3, #1
 269 00d2 7B63     		str	r3, [r7, #52]
 270              	.L12:
 234:.\Generated_Source\PSoC5/isr.c ****         for(i=0;i<NUM_SAMPS_TO_CAPTURE;++i)
 271              		.loc 1 234 0 is_stmt 0 discriminator 1
 272 00d4 7A6B     		ldr	r2, [r7, #52]
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 10


 273 00d6 47F22F53 		movw	r3, #29999
 274 00da 9A42     		cmp	r2, r3
 275 00dc DDDD     		ble	.L13
 240:.\Generated_Source\PSoC5/isr.c ****             }
 241:.\Generated_Source\PSoC5/isr.c ****         
 242:.\Generated_Source\PSoC5/isr.c ****         ++n;
 276              		.loc 1 242 0 is_stmt 1
 277 00de 064B     		ldr	r3, .L14+8
 278 00e0 1B68     		ldr	r3, [r3]
 279 00e2 5A1C     		adds	r2, r3, #1
 280 00e4 044B     		ldr	r3, .L14+8
 281 00e6 1A60     		str	r2, [r3]
 282              	.L8:
 283              	.LBE2:
 243:.\Generated_Source\PSoC5/isr.c ****     }
 244:.\Generated_Source\PSoC5/isr.c **** }        
 284              		.loc 1 244 0
 285 00e8 3837     		adds	r7, r7, #56
 286 00ea BD46     		mov	sp, r7
 287              		@ sp needed
 288 00ec 80BD     		pop	{r7, pc}
 289              	.L15:
 290 00ee 00BF     		.align	2
 291              	.L14:
 292 00f0 00000000 		.word	wave_idx.6713
 293 00f4 00000000 		.word	wave_table
 294 00f8 00000000 		.word	n
 295 00fc 00000000 		.word	cap_array
 296 0100 00000000 		.word	.LC0
 297              		.cfi_endproc
 298              	.LFE59:
 299              		.size	isr_Interrupt, .-isr_Interrupt
 300              		.section	.text.isr_SetVector,"ax",%progbits
 301              		.align	2
 302              		.global	isr_SetVector
 303              		.thumb
 304              		.thumb_func
 305              		.type	isr_SetVector, %function
 306              	isr_SetVector:
 307              	.LFB60:
 245:.\Generated_Source\PSoC5/isr.c **** 
 246:.\Generated_Source\PSoC5/isr.c ****     /* `#END` */
 247:.\Generated_Source\PSoC5/isr.c **** 
 248:.\Generated_Source\PSoC5/isr.c **** 
 249:.\Generated_Source\PSoC5/isr.c **** 
 250:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 251:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_SetVector
 252:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 253:.\Generated_Source\PSoC5/isr.c **** *
 254:.\Generated_Source\PSoC5/isr.c **** * Summary:
 255:.\Generated_Source\PSoC5/isr.c **** *   Change the ISR vector for the Interrupt. Note calling isr_Start
 256:.\Generated_Source\PSoC5/isr.c **** *   will override any effect this method would have had. To set the vector 
 257:.\Generated_Source\PSoC5/isr.c **** *   before the component has been started use isr_StartEx instead.
 258:.\Generated_Source\PSoC5/isr.c **** * 
 259:.\Generated_Source\PSoC5/isr.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 260:.\Generated_Source\PSoC5/isr.c **** *   used to provide consistent definition across compilers:
 261:.\Generated_Source\PSoC5/isr.c **** *
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 11


 262:.\Generated_Source\PSoC5/isr.c **** *   Function definition example:
 263:.\Generated_Source\PSoC5/isr.c **** *   CY_ISR(MyISR)
 264:.\Generated_Source\PSoC5/isr.c **** *   {
 265:.\Generated_Source\PSoC5/isr.c **** *   }
 266:.\Generated_Source\PSoC5/isr.c **** *
 267:.\Generated_Source\PSoC5/isr.c **** *   Function prototype example:
 268:.\Generated_Source\PSoC5/isr.c **** *     CY_ISR_PROTO(MyISR);
 269:.\Generated_Source\PSoC5/isr.c **** *
 270:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 271:.\Generated_Source\PSoC5/isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
 272:.\Generated_Source\PSoC5/isr.c **** *
 273:.\Generated_Source\PSoC5/isr.c **** * Return:
 274:.\Generated_Source\PSoC5/isr.c **** *   None
 275:.\Generated_Source\PSoC5/isr.c **** *
 276:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC5/isr.c **** void isr_SetVector(cyisraddress address)
 278:.\Generated_Source\PSoC5/isr.c **** {
 308              		.loc 1 278 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 16
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              		.cfi_def_cfa_offset 4
 315              		.cfi_offset 7, -4
 316 0002 85B0     		sub	sp, sp, #20
 317              		.cfi_def_cfa_offset 24
 318 0004 00AF     		add	r7, sp, #0
 319              		.cfi_def_cfa_register 7
 320 0006 7860     		str	r0, [r7, #4]
 279:.\Generated_Source\PSoC5/isr.c ****     cyisraddress * ramVectorTable;
 280:.\Generated_Source\PSoC5/isr.c **** 
 281:.\Generated_Source\PSoC5/isr.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 321              		.loc 1 281 0
 322 0008 054B     		ldr	r3, .L17
 323 000a 1B68     		ldr	r3, [r3]
 324 000c FB60     		str	r3, [r7, #12]
 282:.\Generated_Source\PSoC5/isr.c **** 
 283:.\Generated_Source\PSoC5/isr.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)isr__INTC_NUMBER] = address;
 325              		.loc 1 283 0
 326 000e FB68     		ldr	r3, [r7, #12]
 327 0010 4433     		adds	r3, r3, #68
 328 0012 7A68     		ldr	r2, [r7, #4]
 329 0014 1A60     		str	r2, [r3]
 284:.\Generated_Source\PSoC5/isr.c **** }
 330              		.loc 1 284 0
 331 0016 1437     		adds	r7, r7, #20
 332 0018 BD46     		mov	sp, r7
 333              		@ sp needed
 334 001a 5DF8047B 		ldr	r7, [sp], #4
 335 001e 7047     		bx	lr
 336              	.L18:
 337              		.align	2
 338              	.L17:
 339 0020 08ED00E0 		.word	-536810232
 340              		.cfi_endproc
 341              	.LFE60:
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 12


 342              		.size	isr_SetVector, .-isr_SetVector
 343              		.section	.text.isr_GetVector,"ax",%progbits
 344              		.align	2
 345              		.global	isr_GetVector
 346              		.thumb
 347              		.thumb_func
 348              		.type	isr_GetVector, %function
 349              	isr_GetVector:
 350              	.LFB61:
 285:.\Generated_Source\PSoC5/isr.c **** 
 286:.\Generated_Source\PSoC5/isr.c **** 
 287:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 288:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_GetVector
 289:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 290:.\Generated_Source\PSoC5/isr.c **** *
 291:.\Generated_Source\PSoC5/isr.c **** * Summary:
 292:.\Generated_Source\PSoC5/isr.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 293:.\Generated_Source\PSoC5/isr.c **** *
 294:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 295:.\Generated_Source\PSoC5/isr.c **** *   None
 296:.\Generated_Source\PSoC5/isr.c **** *
 297:.\Generated_Source\PSoC5/isr.c **** * Return:
 298:.\Generated_Source\PSoC5/isr.c **** *   Address of the ISR in the interrupt vector table.
 299:.\Generated_Source\PSoC5/isr.c **** *
 300:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 301:.\Generated_Source\PSoC5/isr.c **** cyisraddress isr_GetVector(void)
 302:.\Generated_Source\PSoC5/isr.c **** {
 351              		.loc 1 302 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 7, -4
 359 0002 83B0     		sub	sp, sp, #12
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 303:.\Generated_Source\PSoC5/isr.c ****     cyisraddress * ramVectorTable;
 304:.\Generated_Source\PSoC5/isr.c **** 
 305:.\Generated_Source\PSoC5/isr.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 363              		.loc 1 305 0
 364 0006 054B     		ldr	r3, .L21
 365 0008 1B68     		ldr	r3, [r3]
 366 000a 7B60     		str	r3, [r7, #4]
 306:.\Generated_Source\PSoC5/isr.c **** 
 307:.\Generated_Source\PSoC5/isr.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)isr__INTC_NUMBER];
 367              		.loc 1 307 0
 368 000c 7B68     		ldr	r3, [r7, #4]
 369 000e 5B6C     		ldr	r3, [r3, #68]
 308:.\Generated_Source\PSoC5/isr.c **** }
 370              		.loc 1 308 0
 371 0010 1846     		mov	r0, r3
 372 0012 0C37     		adds	r7, r7, #12
 373 0014 BD46     		mov	sp, r7
 374              		@ sp needed
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 13


 375 0016 5DF8047B 		ldr	r7, [sp], #4
 376 001a 7047     		bx	lr
 377              	.L22:
 378              		.align	2
 379              	.L21:
 380 001c 08ED00E0 		.word	-536810232
 381              		.cfi_endproc
 382              	.LFE61:
 383              		.size	isr_GetVector, .-isr_GetVector
 384              		.section	.text.isr_SetPriority,"ax",%progbits
 385              		.align	2
 386              		.global	isr_SetPriority
 387              		.thumb
 388              		.thumb_func
 389              		.type	isr_SetPriority, %function
 390              	isr_SetPriority:
 391              	.LFB62:
 309:.\Generated_Source\PSoC5/isr.c **** 
 310:.\Generated_Source\PSoC5/isr.c **** 
 311:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_SetPriority
 313:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 314:.\Generated_Source\PSoC5/isr.c **** *
 315:.\Generated_Source\PSoC5/isr.c **** * Summary:
 316:.\Generated_Source\PSoC5/isr.c **** *   Sets the Priority of the Interrupt. 
 317:.\Generated_Source\PSoC5/isr.c **** *
 318:.\Generated_Source\PSoC5/isr.c **** *   Note calling isr_Start or isr_StartEx will 
 319:.\Generated_Source\PSoC5/isr.c **** *   override any effect this API would have had. This API should only be called
 320:.\Generated_Source\PSoC5/isr.c **** *   after isr_Start or isr_StartEx has been called. 
 321:.\Generated_Source\PSoC5/isr.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 322:.\Generated_Source\PSoC5/isr.c **** *   Interrupt Editor.
 323:.\Generated_Source\PSoC5/isr.c **** *
 324:.\Generated_Source\PSoC5/isr.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 325:.\Generated_Source\PSoC5/isr.c **** *
 326:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 327:.\Generated_Source\PSoC5/isr.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 328:.\Generated_Source\PSoC5/isr.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 329:.\Generated_Source\PSoC5/isr.c **** *             PSoC 4: Priority is from 0 to 3.
 330:.\Generated_Source\PSoC5/isr.c **** *
 331:.\Generated_Source\PSoC5/isr.c **** * Return:
 332:.\Generated_Source\PSoC5/isr.c **** *   None
 333:.\Generated_Source\PSoC5/isr.c **** *
 334:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 335:.\Generated_Source\PSoC5/isr.c **** void isr_SetPriority(uint8 priority)
 336:.\Generated_Source\PSoC5/isr.c **** {
 392              		.loc 1 336 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 8
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 83B0     		sub	sp, sp, #12
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 14


 404 0006 0346     		mov	r3, r0
 405 0008 FB71     		strb	r3, [r7, #7]
 337:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_PRIOR = priority << 5;
 406              		.loc 1 337 0
 407 000a 054B     		ldr	r3, .L24
 408 000c FA79     		ldrb	r2, [r7, #7]
 409 000e 5201     		lsls	r2, r2, #5
 410 0010 D2B2     		uxtb	r2, r2
 411 0012 1A70     		strb	r2, [r3]
 338:.\Generated_Source\PSoC5/isr.c **** }
 412              		.loc 1 338 0
 413 0014 0C37     		adds	r7, r7, #12
 414 0016 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0018 5DF8047B 		ldr	r7, [sp], #4
 417 001c 7047     		bx	lr
 418              	.L25:
 419 001e 00BF     		.align	2
 420              	.L24:
 421 0020 01E400E0 		.word	-536812543
 422              		.cfi_endproc
 423              	.LFE62:
 424              		.size	isr_SetPriority, .-isr_SetPriority
 425              		.section	.text.isr_GetPriority,"ax",%progbits
 426              		.align	2
 427              		.global	isr_GetPriority
 428              		.thumb
 429              		.thumb_func
 430              		.type	isr_GetPriority, %function
 431              	isr_GetPriority:
 432              	.LFB63:
 339:.\Generated_Source\PSoC5/isr.c **** 
 340:.\Generated_Source\PSoC5/isr.c **** 
 341:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 342:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_GetPriority
 343:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 344:.\Generated_Source\PSoC5/isr.c **** *
 345:.\Generated_Source\PSoC5/isr.c **** * Summary:
 346:.\Generated_Source\PSoC5/isr.c **** *   Gets the Priority of the Interrupt.
 347:.\Generated_Source\PSoC5/isr.c **** *
 348:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 349:.\Generated_Source\PSoC5/isr.c **** *   None
 350:.\Generated_Source\PSoC5/isr.c **** *
 351:.\Generated_Source\PSoC5/isr.c **** * Return:
 352:.\Generated_Source\PSoC5/isr.c **** *   Priority of the interrupt, 0 being the highest priority
 353:.\Generated_Source\PSoC5/isr.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 354:.\Generated_Source\PSoC5/isr.c **** *    PSoC 4: Priority is from 0 to 3.
 355:.\Generated_Source\PSoC5/isr.c **** *
 356:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/isr.c **** uint8 isr_GetPriority(void)
 358:.\Generated_Source\PSoC5/isr.c **** {
 433              		.loc 1 358 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 8
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 15


 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 0002 83B0     		sub	sp, sp, #12
 442              		.cfi_def_cfa_offset 16
 443 0004 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 359:.\Generated_Source\PSoC5/isr.c ****     uint8 priority;
 360:.\Generated_Source\PSoC5/isr.c **** 
 361:.\Generated_Source\PSoC5/isr.c **** 
 362:.\Generated_Source\PSoC5/isr.c ****     priority = *isr_INTC_PRIOR >> 5;
 445              		.loc 1 362 0
 446 0006 064B     		ldr	r3, .L28
 447 0008 1B78     		ldrb	r3, [r3]
 448 000a DBB2     		uxtb	r3, r3
 449 000c 5B09     		lsrs	r3, r3, #5
 450 000e FB71     		strb	r3, [r7, #7]
 363:.\Generated_Source\PSoC5/isr.c **** 
 364:.\Generated_Source\PSoC5/isr.c ****     return priority;
 451              		.loc 1 364 0
 452 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 365:.\Generated_Source\PSoC5/isr.c **** }
 453              		.loc 1 365 0
 454 0012 1846     		mov	r0, r3
 455 0014 0C37     		adds	r7, r7, #12
 456 0016 BD46     		mov	sp, r7
 457              		@ sp needed
 458 0018 5DF8047B 		ldr	r7, [sp], #4
 459 001c 7047     		bx	lr
 460              	.L29:
 461 001e 00BF     		.align	2
 462              	.L28:
 463 0020 01E400E0 		.word	-536812543
 464              		.cfi_endproc
 465              	.LFE63:
 466              		.size	isr_GetPriority, .-isr_GetPriority
 467              		.section	.text.isr_Enable,"ax",%progbits
 468              		.align	2
 469              		.global	isr_Enable
 470              		.thumb
 471              		.thumb_func
 472              		.type	isr_Enable, %function
 473              	isr_Enable:
 474              	.LFB64:
 366:.\Generated_Source\PSoC5/isr.c **** 
 367:.\Generated_Source\PSoC5/isr.c **** 
 368:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 369:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Enable
 370:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 371:.\Generated_Source\PSoC5/isr.c **** *
 372:.\Generated_Source\PSoC5/isr.c **** * Summary:
 373:.\Generated_Source\PSoC5/isr.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 374:.\Generated_Source\PSoC5/isr.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 375:.\Generated_Source\PSoC5/isr.c **** *   function, which sets the vector and the priority, has been called.
 376:.\Generated_Source\PSoC5/isr.c **** *
 377:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 378:.\Generated_Source\PSoC5/isr.c **** *   None
 379:.\Generated_Source\PSoC5/isr.c **** *
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 16


 380:.\Generated_Source\PSoC5/isr.c **** * Return:
 381:.\Generated_Source\PSoC5/isr.c **** *   None
 382:.\Generated_Source\PSoC5/isr.c **** *
 383:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC5/isr.c **** void isr_Enable(void)
 385:.\Generated_Source\PSoC5/isr.c **** {
 475              		.loc 1 385 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              		.cfi_def_cfa_offset 4
 482              		.cfi_offset 7, -4
 483 0002 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 386:.\Generated_Source\PSoC5/isr.c ****     /* Enable the general interrupt. */
 387:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_SET_EN = isr__INTC_MASK;
 485              		.loc 1 387 0
 486 0004 034B     		ldr	r3, .L31
 487 0006 0222     		movs	r2, #2
 488 0008 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC5/isr.c **** }
 489              		.loc 1 388 0
 490 000a BD46     		mov	sp, r7
 491              		@ sp needed
 492 000c 5DF8047B 		ldr	r7, [sp], #4
 493 0010 7047     		bx	lr
 494              	.L32:
 495 0012 00BF     		.align	2
 496              	.L31:
 497 0014 00E100E0 		.word	-536813312
 498              		.cfi_endproc
 499              	.LFE64:
 500              		.size	isr_Enable, .-isr_Enable
 501              		.section	.text.isr_GetState,"ax",%progbits
 502              		.align	2
 503              		.global	isr_GetState
 504              		.thumb
 505              		.thumb_func
 506              		.type	isr_GetState, %function
 507              	isr_GetState:
 508              	.LFB65:
 389:.\Generated_Source\PSoC5/isr.c **** 
 390:.\Generated_Source\PSoC5/isr.c **** 
 391:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_GetState
 393:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/isr.c **** *
 395:.\Generated_Source\PSoC5/isr.c **** * Summary:
 396:.\Generated_Source\PSoC5/isr.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 397:.\Generated_Source\PSoC5/isr.c **** *
 398:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 399:.\Generated_Source\PSoC5/isr.c **** *   None
 400:.\Generated_Source\PSoC5/isr.c **** *
 401:.\Generated_Source\PSoC5/isr.c **** * Return:
 402:.\Generated_Source\PSoC5/isr.c **** *   1 if enabled, 0 if disabled.
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 17


 403:.\Generated_Source\PSoC5/isr.c **** *
 404:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/isr.c **** uint8 isr_GetState(void)
 406:.\Generated_Source\PSoC5/isr.c **** {
 509              		.loc 1 406 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514 0000 80B4     		push	{r7}
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 7, -4
 517 0002 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 407:.\Generated_Source\PSoC5/isr.c ****     /* Get the state of the general interrupt. */
 408:.\Generated_Source\PSoC5/isr.c ****     return ((*isr_INTC_SET_EN & (uint32)isr__INTC_MASK) != 0u) ? 1u:0u;
 519              		.loc 1 408 0
 520 0004 064B     		ldr	r3, .L37
 521 0006 1B68     		ldr	r3, [r3]
 522 0008 03F00203 		and	r3, r3, #2
 523 000c 002B     		cmp	r3, #0
 524 000e 01D0     		beq	.L34
 525              		.loc 1 408 0 is_stmt 0 discriminator 1
 526 0010 0123     		movs	r3, #1
 527 0012 00E0     		b	.L35
 528              	.L34:
 529              		.loc 1 408 0 discriminator 2
 530 0014 0023     		movs	r3, #0
 531              	.L35:
 409:.\Generated_Source\PSoC5/isr.c **** }
 532              		.loc 1 409 0 is_stmt 1 discriminator 3
 533 0016 1846     		mov	r0, r3
 534 0018 BD46     		mov	sp, r7
 535              		@ sp needed
 536 001a 5DF8047B 		ldr	r7, [sp], #4
 537 001e 7047     		bx	lr
 538              	.L38:
 539              		.align	2
 540              	.L37:
 541 0020 00E100E0 		.word	-536813312
 542              		.cfi_endproc
 543              	.LFE65:
 544              		.size	isr_GetState, .-isr_GetState
 545              		.section	.text.isr_Disable,"ax",%progbits
 546              		.align	2
 547              		.global	isr_Disable
 548              		.thumb
 549              		.thumb_func
 550              		.type	isr_Disable, %function
 551              	isr_Disable:
 552              	.LFB66:
 410:.\Generated_Source\PSoC5/isr.c **** 
 411:.\Generated_Source\PSoC5/isr.c **** 
 412:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_Disable
 414:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 415:.\Generated_Source\PSoC5/isr.c **** *
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 18


 416:.\Generated_Source\PSoC5/isr.c **** * Summary:
 417:.\Generated_Source\PSoC5/isr.c **** *   Disables the Interrupt in the interrupt controller.
 418:.\Generated_Source\PSoC5/isr.c **** *
 419:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 420:.\Generated_Source\PSoC5/isr.c **** *   None
 421:.\Generated_Source\PSoC5/isr.c **** *
 422:.\Generated_Source\PSoC5/isr.c **** * Return:
 423:.\Generated_Source\PSoC5/isr.c **** *   None
 424:.\Generated_Source\PSoC5/isr.c **** *
 425:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 426:.\Generated_Source\PSoC5/isr.c **** void isr_Disable(void)
 427:.\Generated_Source\PSoC5/isr.c **** {
 553              		.loc 1 427 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 558 0000 80B4     		push	{r7}
 559              		.cfi_def_cfa_offset 4
 560              		.cfi_offset 7, -4
 561 0002 00AF     		add	r7, sp, #0
 562              		.cfi_def_cfa_register 7
 428:.\Generated_Source\PSoC5/isr.c ****     /* Disable the general interrupt. */
 429:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_CLR_EN = isr__INTC_MASK;
 563              		.loc 1 429 0
 564 0004 034B     		ldr	r3, .L40
 565 0006 0222     		movs	r2, #2
 566 0008 1A60     		str	r2, [r3]
 430:.\Generated_Source\PSoC5/isr.c **** }
 567              		.loc 1 430 0
 568 000a BD46     		mov	sp, r7
 569              		@ sp needed
 570 000c 5DF8047B 		ldr	r7, [sp], #4
 571 0010 7047     		bx	lr
 572              	.L41:
 573 0012 00BF     		.align	2
 574              	.L40:
 575 0014 80E100E0 		.word	-536813184
 576              		.cfi_endproc
 577              	.LFE66:
 578              		.size	isr_Disable, .-isr_Disable
 579              		.section	.text.isr_SetPending,"ax",%progbits
 580              		.align	2
 581              		.global	isr_SetPending
 582              		.thumb
 583              		.thumb_func
 584              		.type	isr_SetPending, %function
 585              	isr_SetPending:
 586              	.LFB67:
 431:.\Generated_Source\PSoC5/isr.c **** 
 432:.\Generated_Source\PSoC5/isr.c **** 
 433:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 434:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_SetPending
 435:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
 436:.\Generated_Source\PSoC5/isr.c **** *
 437:.\Generated_Source\PSoC5/isr.c **** * Summary:
 438:.\Generated_Source\PSoC5/isr.c **** *   Causes the Interrupt to enter the pending state, a software method of
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 19


 439:.\Generated_Source\PSoC5/isr.c **** *   generating the interrupt.
 440:.\Generated_Source\PSoC5/isr.c **** *
 441:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 442:.\Generated_Source\PSoC5/isr.c **** *   None
 443:.\Generated_Source\PSoC5/isr.c **** *
 444:.\Generated_Source\PSoC5/isr.c **** * Return:
 445:.\Generated_Source\PSoC5/isr.c **** *   None
 446:.\Generated_Source\PSoC5/isr.c **** *
 447:.\Generated_Source\PSoC5/isr.c **** * Side Effects:
 448:.\Generated_Source\PSoC5/isr.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 449:.\Generated_Source\PSoC5/isr.c **** *   entered (depending on the priority of this interrupt and other pending 
 450:.\Generated_Source\PSoC5/isr.c **** *   interrupts).
 451:.\Generated_Source\PSoC5/isr.c **** *
 452:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 453:.\Generated_Source\PSoC5/isr.c **** void isr_SetPending(void)
 454:.\Generated_Source\PSoC5/isr.c **** {
 587              		.loc 1 454 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_SET_PD = isr__INTC_MASK;
 597              		.loc 1 455 0
 598 0004 034B     		ldr	r3, .L43
 599 0006 0222     		movs	r2, #2
 600 0008 1A60     		str	r2, [r3]
 456:.\Generated_Source\PSoC5/isr.c **** }
 601              		.loc 1 456 0
 602 000a BD46     		mov	sp, r7
 603              		@ sp needed
 604 000c 5DF8047B 		ldr	r7, [sp], #4
 605 0010 7047     		bx	lr
 606              	.L44:
 607 0012 00BF     		.align	2
 608              	.L43:
 609 0014 00E200E0 		.word	-536813056
 610              		.cfi_endproc
 611              	.LFE67:
 612              		.size	isr_SetPending, .-isr_SetPending
 613              		.section	.text.isr_ClearPending,"ax",%progbits
 614              		.align	2
 615              		.global	isr_ClearPending
 616              		.thumb
 617              		.thumb_func
 618              		.type	isr_ClearPending, %function
 619              	isr_ClearPending:
 620              	.LFB68:
 457:.\Generated_Source\PSoC5/isr.c **** 
 458:.\Generated_Source\PSoC5/isr.c **** 
 459:.\Generated_Source\PSoC5/isr.c **** /*******************************************************************************
 460:.\Generated_Source\PSoC5/isr.c **** * Function Name: isr_ClearPending
 461:.\Generated_Source\PSoC5/isr.c **** ********************************************************************************
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 20


 462:.\Generated_Source\PSoC5/isr.c **** *
 463:.\Generated_Source\PSoC5/isr.c **** * Summary:
 464:.\Generated_Source\PSoC5/isr.c **** *   Clears a pending interrupt in the interrupt controller.
 465:.\Generated_Source\PSoC5/isr.c **** *
 466:.\Generated_Source\PSoC5/isr.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 467:.\Generated_Source\PSoC5/isr.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 468:.\Generated_Source\PSoC5/isr.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 469:.\Generated_Source\PSoC5/isr.c **** *   pending state even though the interrupt itself is cleared using this API.
 470:.\Generated_Source\PSoC5/isr.c **** *
 471:.\Generated_Source\PSoC5/isr.c **** * Parameters:
 472:.\Generated_Source\PSoC5/isr.c **** *   None
 473:.\Generated_Source\PSoC5/isr.c **** *
 474:.\Generated_Source\PSoC5/isr.c **** * Return:
 475:.\Generated_Source\PSoC5/isr.c **** *   None
 476:.\Generated_Source\PSoC5/isr.c **** *
 477:.\Generated_Source\PSoC5/isr.c **** *******************************************************************************/
 478:.\Generated_Source\PSoC5/isr.c **** void isr_ClearPending(void)
 479:.\Generated_Source\PSoC5/isr.c **** {
 621              		.loc 1 479 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 7, -4
 629 0002 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 480:.\Generated_Source\PSoC5/isr.c ****     *isr_INTC_CLR_PD = isr__INTC_MASK;
 631              		.loc 1 480 0
 632 0004 034B     		ldr	r3, .L46
 633 0006 0222     		movs	r2, #2
 634 0008 1A60     		str	r2, [r3]
 481:.\Generated_Source\PSoC5/isr.c **** }
 635              		.loc 1 481 0
 636 000a BD46     		mov	sp, r7
 637              		@ sp needed
 638 000c 5DF8047B 		ldr	r7, [sp], #4
 639 0010 7047     		bx	lr
 640              	.L47:
 641 0012 00BF     		.align	2
 642              	.L46:
 643 0014 80E200E0 		.word	-536812928
 644              		.cfi_endproc
 645              	.LFE68:
 646              		.size	isr_ClearPending, .-isr_ClearPending
 647              		.bss
 648              		.align	2
 649              	wave_idx.6713:
 650 0000 00000000 		.space	4
 651              		.text
 652              	.Letext0:
 653              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 654              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 655              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 656              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 657              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 21


 658              	.Ldebug_info0:
 659 0000 23030000 		.4byte	0x323
 660 0004 0400     		.2byte	0x4
 661 0006 00000000 		.4byte	.Ldebug_abbrev0
 662 000a 04       		.byte	0x4
 663 000b 01       		.uleb128 0x1
 664 000c 05000000 		.4byte	.LASF42
 665 0010 01       		.byte	0x1
 666 0011 B0000000 		.4byte	.LASF43
 667 0015 37020000 		.4byte	.LASF44
 668 0019 00000000 		.4byte	.Ldebug_ranges0+0
 669 001d 00000000 		.4byte	0
 670 0021 00000000 		.4byte	.Ldebug_line0
 671 0025 02       		.uleb128 0x2
 672 0026 04       		.byte	0x4
 673 0027 05       		.byte	0x5
 674 0028 696E7400 		.ascii	"int\000"
 675 002c 03       		.uleb128 0x3
 676 002d 04       		.byte	0x4
 677 002e 07       		.byte	0x7
 678 002f A6010000 		.4byte	.LASF0
 679 0033 03       		.uleb128 0x3
 680 0034 01       		.byte	0x1
 681 0035 06       		.byte	0x6
 682 0036 AB020000 		.4byte	.LASF1
 683 003a 03       		.uleb128 0x3
 684 003b 01       		.byte	0x1
 685 003c 08       		.byte	0x8
 686 003d FC000000 		.4byte	.LASF2
 687 0041 03       		.uleb128 0x3
 688 0042 02       		.byte	0x2
 689 0043 05       		.byte	0x5
 690 0044 71010000 		.4byte	.LASF3
 691 0048 03       		.uleb128 0x3
 692 0049 02       		.byte	0x2
 693 004a 07       		.byte	0x7
 694 004b 39010000 		.4byte	.LASF4
 695 004f 04       		.uleb128 0x4
 696 0050 81000000 		.4byte	.LASF11
 697 0054 02       		.byte	0x2
 698 0055 37       		.byte	0x37
 699 0056 5A000000 		.4byte	0x5a
 700 005a 03       		.uleb128 0x3
 701 005b 04       		.byte	0x4
 702 005c 05       		.byte	0x5
 703 005d 95020000 		.4byte	.LASF5
 704 0061 03       		.uleb128 0x3
 705 0062 04       		.byte	0x4
 706 0063 07       		.byte	0x7
 707 0064 1D010000 		.4byte	.LASF6
 708 0068 03       		.uleb128 0x3
 709 0069 08       		.byte	0x8
 710 006a 05       		.byte	0x5
 711 006b 00020000 		.4byte	.LASF7
 712 006f 03       		.uleb128 0x3
 713 0070 08       		.byte	0x8
 714 0071 07       		.byte	0x7
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 22


 715 0072 BD010000 		.4byte	.LASF8
 716 0076 03       		.uleb128 0x3
 717 0077 04       		.byte	0x4
 718 0078 07       		.byte	0x7
 719 0079 F7010000 		.4byte	.LASF9
 720 007d 05       		.uleb128 0x5
 721 007e 04       		.byte	0x4
 722 007f 83000000 		.4byte	0x83
 723 0083 06       		.uleb128 0x6
 724 0084 03       		.uleb128 0x3
 725 0085 01       		.byte	0x1
 726 0086 08       		.byte	0x8
 727 0087 0E020000 		.4byte	.LASF10
 728 008b 04       		.uleb128 0x4
 729 008c EF010000 		.4byte	.LASF12
 730 0090 03       		.byte	0x3
 731 0091 41       		.byte	0x41
 732 0092 4F000000 		.4byte	0x4f
 733 0096 04       		.uleb128 0x4
 734 0097 84020000 		.4byte	.LASF13
 735 009b 04       		.byte	0x4
 736 009c 5B       		.byte	0x5b
 737 009d 3A000000 		.4byte	0x3a
 738 00a1 04       		.uleb128 0x4
 739 00a2 9F010000 		.4byte	.LASF14
 740 00a6 04       		.byte	0x4
 741 00a7 5D       		.byte	0x5d
 742 00a8 61000000 		.4byte	0x61
 743 00ac 03       		.uleb128 0x3
 744 00ad 04       		.byte	0x4
 745 00ae 04       		.byte	0x4
 746 00af E8000000 		.4byte	.LASF15
 747 00b3 03       		.uleb128 0x3
 748 00b4 08       		.byte	0x8
 749 00b5 04       		.byte	0x4
 750 00b6 6A010000 		.4byte	.LASF16
 751 00ba 04       		.uleb128 0x4
 752 00bb 00000000 		.4byte	.LASF17
 753 00bf 04       		.byte	0x4
 754 00c0 F0       		.byte	0xf0
 755 00c1 C5000000 		.4byte	0xc5
 756 00c5 07       		.uleb128 0x7
 757 00c6 96000000 		.4byte	0x96
 758 00ca 04       		.uleb128 0x4
 759 00cb 9E020000 		.4byte	.LASF18
 760 00cf 04       		.byte	0x4
 761 00d0 F2       		.byte	0xf2
 762 00d1 D5000000 		.4byte	0xd5
 763 00d5 07       		.uleb128 0x7
 764 00d6 A1000000 		.4byte	0xa1
 765 00da 08       		.uleb128 0x8
 766 00db D4010000 		.4byte	.LASF19
 767 00df 04       		.byte	0x4
 768 00e0 0201     		.2byte	0x102
 769 00e2 7D000000 		.4byte	0x7d
 770 00e6 09       		.uleb128 0x9
 771 00e7 2F010000 		.4byte	.LASF20
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 23


 772 00eb 01       		.byte	0x1
 773 00ec 45       		.byte	0x45
 774 00ed 00000000 		.4byte	.LFB56
 775 00f1 20000000 		.4byte	.LFE56-.LFB56
 776 00f5 01       		.uleb128 0x1
 777 00f6 9C       		.byte	0x9c
 778 00f7 0A       		.uleb128 0xa
 779 00f8 93010000 		.4byte	.LASF22
 780 00fc 01       		.byte	0x1
 781 00fd 70       		.byte	0x70
 782 00fe 00000000 		.4byte	.LFB57
 783 0102 22000000 		.4byte	.LFE57-.LFB57
 784 0106 01       		.uleb128 0x1
 785 0107 9C       		.byte	0x9c
 786 0108 1B010000 		.4byte	0x11b
 787 010c 0B       		.uleb128 0xb
 788 010d 15010000 		.4byte	.LASF29
 789 0111 01       		.byte	0x1
 790 0112 70       		.byte	0x70
 791 0113 DA000000 		.4byte	0xda
 792 0117 02       		.uleb128 0x2
 793 0118 91       		.byte	0x91
 794 0119 74       		.sleb128 -12
 795 011a 00       		.byte	0
 796 011b 09       		.uleb128 0x9
 797 011c DF000000 		.4byte	.LASF21
 798 0120 01       		.byte	0x1
 799 0121 8E       		.byte	0x8e
 800 0122 00000000 		.4byte	.LFB58
 801 0126 14000000 		.4byte	.LFE58-.LFB58
 802 012a 01       		.uleb128 0x1
 803 012b 9C       		.byte	0x9c
 804 012c 0A       		.uleb128 0xa
 805 012d E1010000 		.4byte	.LASF23
 806 0131 01       		.byte	0x1
 807 0132 A8       		.byte	0xa8
 808 0133 00000000 		.4byte	.LFB59
 809 0137 04010000 		.4byte	.LFE59-.LFB59
 810 013b 01       		.uleb128 0x1
 811 013c 9C       		.byte	0x9c
 812 013d AC010000 		.4byte	0x1ac
 813 0141 0C       		.uleb128 0xc
 814 0142 22020000 		.4byte	.LASF24
 815 0146 01       		.byte	0x1
 816 0147 AF       		.byte	0xaf
 817 0148 25000000 		.4byte	0x25
 818 014c 05       		.uleb128 0x5
 819 014d 03       		.byte	0x3
 820 014e 00000000 		.4byte	wave_idx.6713
 821 0152 0D       		.uleb128 0xd
 822 0153 7800     		.ascii	"x\000"
 823 0155 01       		.byte	0x1
 824 0156 B5       		.byte	0xb5
 825 0157 25000000 		.4byte	0x25
 826 015b 02       		.uleb128 0x2
 827 015c 91       		.byte	0x91
 828 015d 70       		.sleb128 -16
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 24


 829 015e 0D       		.uleb128 0xd
 830 015f 655F00   		.ascii	"e_\000"
 831 0162 01       		.byte	0x1
 832 0163 B6       		.byte	0xb6
 833 0164 25000000 		.4byte	0x25
 834 0168 02       		.uleb128 0x2
 835 0169 91       		.byte	0x91
 836 016a 6C       		.sleb128 -20
 837 016b 0D       		.uleb128 0xd
 838 016c 6900     		.ascii	"i\000"
 839 016e 01       		.byte	0x1
 840 016f B7       		.byte	0xb7
 841 0170 25000000 		.4byte	0x25
 842 0174 02       		.uleb128 0x2
 843 0175 91       		.byte	0x91
 844 0176 74       		.sleb128 -12
 845 0177 0E       		.uleb128 0xe
 846 0178 94000000 		.4byte	.LBB2
 847 017c 54000000 		.4byte	.LBE2-.LBB2
 848 0180 0C       		.uleb128 0xc
 849 0181 C7020000 		.4byte	.LASF25
 850 0185 01       		.byte	0x1
 851 0186 E6       		.byte	0xe6
 852 0187 25000000 		.4byte	0x25
 853 018b 02       		.uleb128 0x2
 854 018c 91       		.byte	0x91
 855 018d 68       		.sleb128 -24
 856 018e 0C       		.uleb128 0xc
 857 018f B3010000 		.4byte	.LASF26
 858 0193 01       		.byte	0x1
 859 0194 E7       		.byte	0xe7
 860 0195 AC010000 		.4byte	0x1ac
 861 0199 02       		.uleb128 0x2
 862 019a 91       		.byte	0x91
 863 019b 44       		.sleb128 -60
 864 019c 0C       		.uleb128 0xc
 865 019d A4020000 		.4byte	.LASF27
 866 01a1 01       		.byte	0x1
 867 01a2 E8       		.byte	0xe8
 868 01a3 25000000 		.4byte	0x25
 869 01a7 02       		.uleb128 0x2
 870 01a8 91       		.byte	0x91
 871 01a9 64       		.sleb128 -28
 872 01aa 00       		.byte	0
 873 01ab 00       		.byte	0
 874 01ac 0F       		.uleb128 0xf
 875 01ad 84000000 		.4byte	0x84
 876 01b1 BC010000 		.4byte	0x1bc
 877 01b5 10       		.uleb128 0x10
 878 01b6 76000000 		.4byte	0x76
 879 01ba 1F       		.byte	0x1f
 880 01bb 00       		.byte	0
 881 01bc 11       		.uleb128 0x11
 882 01bd EE000000 		.4byte	.LASF28
 883 01c1 01       		.byte	0x1
 884 01c2 1501     		.2byte	0x115
 885 01c4 00000000 		.4byte	.LFB60
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 25


 886 01c8 24000000 		.4byte	.LFE60-.LFB60
 887 01cc 01       		.uleb128 0x1
 888 01cd 9C       		.byte	0x9c
 889 01ce F1010000 		.4byte	0x1f1
 890 01d2 12       		.uleb128 0x12
 891 01d3 15010000 		.4byte	.LASF29
 892 01d7 01       		.byte	0x1
 893 01d8 1501     		.2byte	0x115
 894 01da DA000000 		.4byte	0xda
 895 01de 02       		.uleb128 0x2
 896 01df 91       		.byte	0x91
 897 01e0 6C       		.sleb128 -20
 898 01e1 13       		.uleb128 0x13
 899 01e2 13020000 		.4byte	.LASF30
 900 01e6 01       		.byte	0x1
 901 01e7 1701     		.2byte	0x117
 902 01e9 F1010000 		.4byte	0x1f1
 903 01ed 02       		.uleb128 0x2
 904 01ee 91       		.byte	0x91
 905 01ef 74       		.sleb128 -12
 906 01f0 00       		.byte	0
 907 01f1 05       		.uleb128 0x5
 908 01f2 04       		.byte	0x4
 909 01f3 DA000000 		.4byte	0xda
 910 01f7 14       		.uleb128 0x14
 911 01f8 8B000000 		.4byte	.LASF33
 912 01fc 01       		.byte	0x1
 913 01fd 2D01     		.2byte	0x12d
 914 01ff DA000000 		.4byte	0xda
 915 0203 00000000 		.4byte	.LFB61
 916 0207 20000000 		.4byte	.LFE61-.LFB61
 917 020b 01       		.uleb128 0x1
 918 020c 9C       		.byte	0x9c
 919 020d 21020000 		.4byte	0x221
 920 0211 13       		.uleb128 0x13
 921 0212 13020000 		.4byte	.LASF30
 922 0216 01       		.byte	0x1
 923 0217 2F01     		.2byte	0x12f
 924 0219 F1010000 		.4byte	0x1f1
 925 021d 02       		.uleb128 0x2
 926 021e 91       		.byte	0x91
 927 021f 74       		.sleb128 -12
 928 0220 00       		.byte	0
 929 0221 11       		.uleb128 0x11
 930 0222 CF000000 		.4byte	.LASF31
 931 0226 01       		.byte	0x1
 932 0227 4F01     		.2byte	0x14f
 933 0229 00000000 		.4byte	.LFB62
 934 022d 24000000 		.4byte	.LFE62-.LFB62
 935 0231 01       		.uleb128 0x1
 936 0232 9C       		.byte	0x9c
 937 0233 47020000 		.4byte	0x247
 938 0237 12       		.uleb128 0x12
 939 0238 7B010000 		.4byte	.LASF32
 940 023c 01       		.byte	0x1
 941 023d 4F01     		.2byte	0x14f
 942 023f 96000000 		.4byte	0x96
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 26


 943 0243 02       		.uleb128 0x2
 944 0244 91       		.byte	0x91
 945 0245 77       		.sleb128 -9
 946 0246 00       		.byte	0
 947 0247 14       		.uleb128 0x14
 948 0248 B7020000 		.4byte	.LASF34
 949 024c 01       		.byte	0x1
 950 024d 6501     		.2byte	0x165
 951 024f 96000000 		.4byte	0x96
 952 0253 00000000 		.4byte	.LFB63
 953 0257 24000000 		.4byte	.LFE63-.LFB63
 954 025b 01       		.uleb128 0x1
 955 025c 9C       		.byte	0x9c
 956 025d 71020000 		.4byte	0x271
 957 0261 13       		.uleb128 0x13
 958 0262 7B010000 		.4byte	.LASF32
 959 0266 01       		.byte	0x1
 960 0267 6701     		.2byte	0x167
 961 0269 96000000 		.4byte	0x96
 962 026d 02       		.uleb128 0x2
 963 026e 91       		.byte	0x91
 964 026f 77       		.sleb128 -9
 965 0270 00       		.byte	0
 966 0271 15       		.uleb128 0x15
 967 0272 0A010000 		.4byte	.LASF35
 968 0276 01       		.byte	0x1
 969 0277 8001     		.2byte	0x180
 970 0279 00000000 		.4byte	.LFB64
 971 027d 18000000 		.4byte	.LFE64-.LFB64
 972 0281 01       		.uleb128 0x1
 973 0282 9C       		.byte	0x9c
 974 0283 16       		.uleb128 0x16
 975 0284 99000000 		.4byte	.LASF45
 976 0288 01       		.byte	0x1
 977 0289 9501     		.2byte	0x195
 978 028b 96000000 		.4byte	0x96
 979 028f 00000000 		.4byte	.LFB65
 980 0293 24000000 		.4byte	.LFE65-.LFB65
 981 0297 01       		.uleb128 0x1
 982 0298 9C       		.byte	0x9c
 983 0299 15       		.uleb128 0x15
 984 029a 2B020000 		.4byte	.LASF36
 985 029e 01       		.byte	0x1
 986 029f AA01     		.2byte	0x1aa
 987 02a1 00000000 		.4byte	.LFB66
 988 02a5 18000000 		.4byte	.LFE66-.LFB66
 989 02a9 01       		.uleb128 0x1
 990 02aa 9C       		.byte	0x9c
 991 02ab 15       		.uleb128 0x15
 992 02ac 84010000 		.4byte	.LASF37
 993 02b0 01       		.byte	0x1
 994 02b1 C501     		.2byte	0x1c5
 995 02b3 00000000 		.4byte	.LFB67
 996 02b7 18000000 		.4byte	.LFE67-.LFB67
 997 02bb 01       		.uleb128 0x1
 998 02bc 9C       		.byte	0x9c
 999 02bd 15       		.uleb128 0x15
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 27


 1000 02be 59010000 		.4byte	.LASF38
 1001 02c2 01       		.byte	0x1
 1002 02c3 DE01     		.2byte	0x1de
 1003 02c5 00000000 		.4byte	.LFB68
 1004 02c9 18000000 		.4byte	.LFE68-.LFB68
 1005 02cd 01       		.uleb128 0x1
 1006 02ce 9C       		.byte	0x9c
 1007 02cf 17       		.uleb128 0x17
 1008 02d0 4C010000 		.4byte	.LASF39
 1009 02d4 05       		.byte	0x5
 1010 02d5 1606     		.2byte	0x616
 1011 02d7 DB020000 		.4byte	0x2db
 1012 02db 07       		.uleb128 0x7
 1013 02dc 8B000000 		.4byte	0x8b
 1014 02e0 0F       		.uleb128 0xf
 1015 02e1 96000000 		.4byte	0x96
 1016 02e5 F1020000 		.4byte	0x2f1
 1017 02e9 18       		.uleb128 0x18
 1018 02ea 76000000 		.4byte	0x76
 1019 02ee 2F75     		.2byte	0x752f
 1020 02f0 00       		.byte	0
 1021 02f1 19       		.uleb128 0x19
 1022 02f2 A6000000 		.4byte	.LASF40
 1023 02f6 01       		.byte	0x1
 1024 02f7 24       		.byte	0x24
 1025 02f8 E0020000 		.4byte	0x2e0
 1026 02fc 05       		.uleb128 0x5
 1027 02fd 03       		.byte	0x3
 1028 02fe 00000000 		.4byte	cap_array
 1029 0302 1A       		.uleb128 0x1a
 1030 0303 6E00     		.ascii	"n\000"
 1031 0305 01       		.byte	0x1
 1032 0306 25       		.byte	0x25
 1033 0307 25000000 		.4byte	0x25
 1034 030b 0F       		.uleb128 0xf
 1035 030c 25000000 		.4byte	0x25
 1036 0310 1B030000 		.4byte	0x31b
 1037 0314 10       		.uleb128 0x10
 1038 0315 76000000 		.4byte	0x76
 1039 0319 13       		.byte	0x13
 1040 031a 00       		.byte	0
 1041 031b 1B       		.uleb128 0x1b
 1042 031c 8A020000 		.4byte	.LASF41
 1043 0320 01       		.byte	0x1
 1044 0321 26       		.byte	0x26
 1045 0322 0B030000 		.4byte	0x30b
 1046 0326 00       		.byte	0
 1047              		.section	.debug_abbrev,"",%progbits
 1048              	.Ldebug_abbrev0:
 1049 0000 01       		.uleb128 0x1
 1050 0001 11       		.uleb128 0x11
 1051 0002 01       		.byte	0x1
 1052 0003 25       		.uleb128 0x25
 1053 0004 0E       		.uleb128 0xe
 1054 0005 13       		.uleb128 0x13
 1055 0006 0B       		.uleb128 0xb
 1056 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 28


 1057 0008 0E       		.uleb128 0xe
 1058 0009 1B       		.uleb128 0x1b
 1059 000a 0E       		.uleb128 0xe
 1060 000b 55       		.uleb128 0x55
 1061 000c 17       		.uleb128 0x17
 1062 000d 11       		.uleb128 0x11
 1063 000e 01       		.uleb128 0x1
 1064 000f 10       		.uleb128 0x10
 1065 0010 17       		.uleb128 0x17
 1066 0011 00       		.byte	0
 1067 0012 00       		.byte	0
 1068 0013 02       		.uleb128 0x2
 1069 0014 24       		.uleb128 0x24
 1070 0015 00       		.byte	0
 1071 0016 0B       		.uleb128 0xb
 1072 0017 0B       		.uleb128 0xb
 1073 0018 3E       		.uleb128 0x3e
 1074 0019 0B       		.uleb128 0xb
 1075 001a 03       		.uleb128 0x3
 1076 001b 08       		.uleb128 0x8
 1077 001c 00       		.byte	0
 1078 001d 00       		.byte	0
 1079 001e 03       		.uleb128 0x3
 1080 001f 24       		.uleb128 0x24
 1081 0020 00       		.byte	0
 1082 0021 0B       		.uleb128 0xb
 1083 0022 0B       		.uleb128 0xb
 1084 0023 3E       		.uleb128 0x3e
 1085 0024 0B       		.uleb128 0xb
 1086 0025 03       		.uleb128 0x3
 1087 0026 0E       		.uleb128 0xe
 1088 0027 00       		.byte	0
 1089 0028 00       		.byte	0
 1090 0029 04       		.uleb128 0x4
 1091 002a 16       		.uleb128 0x16
 1092 002b 00       		.byte	0
 1093 002c 03       		.uleb128 0x3
 1094 002d 0E       		.uleb128 0xe
 1095 002e 3A       		.uleb128 0x3a
 1096 002f 0B       		.uleb128 0xb
 1097 0030 3B       		.uleb128 0x3b
 1098 0031 0B       		.uleb128 0xb
 1099 0032 49       		.uleb128 0x49
 1100 0033 13       		.uleb128 0x13
 1101 0034 00       		.byte	0
 1102 0035 00       		.byte	0
 1103 0036 05       		.uleb128 0x5
 1104 0037 0F       		.uleb128 0xf
 1105 0038 00       		.byte	0
 1106 0039 0B       		.uleb128 0xb
 1107 003a 0B       		.uleb128 0xb
 1108 003b 49       		.uleb128 0x49
 1109 003c 13       		.uleb128 0x13
 1110 003d 00       		.byte	0
 1111 003e 00       		.byte	0
 1112 003f 06       		.uleb128 0x6
 1113 0040 15       		.uleb128 0x15
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 29


 1114 0041 00       		.byte	0
 1115 0042 27       		.uleb128 0x27
 1116 0043 19       		.uleb128 0x19
 1117 0044 00       		.byte	0
 1118 0045 00       		.byte	0
 1119 0046 07       		.uleb128 0x7
 1120 0047 35       		.uleb128 0x35
 1121 0048 00       		.byte	0
 1122 0049 49       		.uleb128 0x49
 1123 004a 13       		.uleb128 0x13
 1124 004b 00       		.byte	0
 1125 004c 00       		.byte	0
 1126 004d 08       		.uleb128 0x8
 1127 004e 16       		.uleb128 0x16
 1128 004f 00       		.byte	0
 1129 0050 03       		.uleb128 0x3
 1130 0051 0E       		.uleb128 0xe
 1131 0052 3A       		.uleb128 0x3a
 1132 0053 0B       		.uleb128 0xb
 1133 0054 3B       		.uleb128 0x3b
 1134 0055 05       		.uleb128 0x5
 1135 0056 49       		.uleb128 0x49
 1136 0057 13       		.uleb128 0x13
 1137 0058 00       		.byte	0
 1138 0059 00       		.byte	0
 1139 005a 09       		.uleb128 0x9
 1140 005b 2E       		.uleb128 0x2e
 1141 005c 00       		.byte	0
 1142 005d 3F       		.uleb128 0x3f
 1143 005e 19       		.uleb128 0x19
 1144 005f 03       		.uleb128 0x3
 1145 0060 0E       		.uleb128 0xe
 1146 0061 3A       		.uleb128 0x3a
 1147 0062 0B       		.uleb128 0xb
 1148 0063 3B       		.uleb128 0x3b
 1149 0064 0B       		.uleb128 0xb
 1150 0065 27       		.uleb128 0x27
 1151 0066 19       		.uleb128 0x19
 1152 0067 11       		.uleb128 0x11
 1153 0068 01       		.uleb128 0x1
 1154 0069 12       		.uleb128 0x12
 1155 006a 06       		.uleb128 0x6
 1156 006b 40       		.uleb128 0x40
 1157 006c 18       		.uleb128 0x18
 1158 006d 9642     		.uleb128 0x2116
 1159 006f 19       		.uleb128 0x19
 1160 0070 00       		.byte	0
 1161 0071 00       		.byte	0
 1162 0072 0A       		.uleb128 0xa
 1163 0073 2E       		.uleb128 0x2e
 1164 0074 01       		.byte	0x1
 1165 0075 3F       		.uleb128 0x3f
 1166 0076 19       		.uleb128 0x19
 1167 0077 03       		.uleb128 0x3
 1168 0078 0E       		.uleb128 0xe
 1169 0079 3A       		.uleb128 0x3a
 1170 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 30


 1171 007b 3B       		.uleb128 0x3b
 1172 007c 0B       		.uleb128 0xb
 1173 007d 27       		.uleb128 0x27
 1174 007e 19       		.uleb128 0x19
 1175 007f 11       		.uleb128 0x11
 1176 0080 01       		.uleb128 0x1
 1177 0081 12       		.uleb128 0x12
 1178 0082 06       		.uleb128 0x6
 1179 0083 40       		.uleb128 0x40
 1180 0084 18       		.uleb128 0x18
 1181 0085 9642     		.uleb128 0x2116
 1182 0087 19       		.uleb128 0x19
 1183 0088 01       		.uleb128 0x1
 1184 0089 13       		.uleb128 0x13
 1185 008a 00       		.byte	0
 1186 008b 00       		.byte	0
 1187 008c 0B       		.uleb128 0xb
 1188 008d 05       		.uleb128 0x5
 1189 008e 00       		.byte	0
 1190 008f 03       		.uleb128 0x3
 1191 0090 0E       		.uleb128 0xe
 1192 0091 3A       		.uleb128 0x3a
 1193 0092 0B       		.uleb128 0xb
 1194 0093 3B       		.uleb128 0x3b
 1195 0094 0B       		.uleb128 0xb
 1196 0095 49       		.uleb128 0x49
 1197 0096 13       		.uleb128 0x13
 1198 0097 02       		.uleb128 0x2
 1199 0098 18       		.uleb128 0x18
 1200 0099 00       		.byte	0
 1201 009a 00       		.byte	0
 1202 009b 0C       		.uleb128 0xc
 1203 009c 34       		.uleb128 0x34
 1204 009d 00       		.byte	0
 1205 009e 03       		.uleb128 0x3
 1206 009f 0E       		.uleb128 0xe
 1207 00a0 3A       		.uleb128 0x3a
 1208 00a1 0B       		.uleb128 0xb
 1209 00a2 3B       		.uleb128 0x3b
 1210 00a3 0B       		.uleb128 0xb
 1211 00a4 49       		.uleb128 0x49
 1212 00a5 13       		.uleb128 0x13
 1213 00a6 02       		.uleb128 0x2
 1214 00a7 18       		.uleb128 0x18
 1215 00a8 00       		.byte	0
 1216 00a9 00       		.byte	0
 1217 00aa 0D       		.uleb128 0xd
 1218 00ab 34       		.uleb128 0x34
 1219 00ac 00       		.byte	0
 1220 00ad 03       		.uleb128 0x3
 1221 00ae 08       		.uleb128 0x8
 1222 00af 3A       		.uleb128 0x3a
 1223 00b0 0B       		.uleb128 0xb
 1224 00b1 3B       		.uleb128 0x3b
 1225 00b2 0B       		.uleb128 0xb
 1226 00b3 49       		.uleb128 0x49
 1227 00b4 13       		.uleb128 0x13
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 31


 1228 00b5 02       		.uleb128 0x2
 1229 00b6 18       		.uleb128 0x18
 1230 00b7 00       		.byte	0
 1231 00b8 00       		.byte	0
 1232 00b9 0E       		.uleb128 0xe
 1233 00ba 0B       		.uleb128 0xb
 1234 00bb 01       		.byte	0x1
 1235 00bc 11       		.uleb128 0x11
 1236 00bd 01       		.uleb128 0x1
 1237 00be 12       		.uleb128 0x12
 1238 00bf 06       		.uleb128 0x6
 1239 00c0 00       		.byte	0
 1240 00c1 00       		.byte	0
 1241 00c2 0F       		.uleb128 0xf
 1242 00c3 01       		.uleb128 0x1
 1243 00c4 01       		.byte	0x1
 1244 00c5 49       		.uleb128 0x49
 1245 00c6 13       		.uleb128 0x13
 1246 00c7 01       		.uleb128 0x1
 1247 00c8 13       		.uleb128 0x13
 1248 00c9 00       		.byte	0
 1249 00ca 00       		.byte	0
 1250 00cb 10       		.uleb128 0x10
 1251 00cc 21       		.uleb128 0x21
 1252 00cd 00       		.byte	0
 1253 00ce 49       		.uleb128 0x49
 1254 00cf 13       		.uleb128 0x13
 1255 00d0 2F       		.uleb128 0x2f
 1256 00d1 0B       		.uleb128 0xb
 1257 00d2 00       		.byte	0
 1258 00d3 00       		.byte	0
 1259 00d4 11       		.uleb128 0x11
 1260 00d5 2E       		.uleb128 0x2e
 1261 00d6 01       		.byte	0x1
 1262 00d7 3F       		.uleb128 0x3f
 1263 00d8 19       		.uleb128 0x19
 1264 00d9 03       		.uleb128 0x3
 1265 00da 0E       		.uleb128 0xe
 1266 00db 3A       		.uleb128 0x3a
 1267 00dc 0B       		.uleb128 0xb
 1268 00dd 3B       		.uleb128 0x3b
 1269 00de 05       		.uleb128 0x5
 1270 00df 27       		.uleb128 0x27
 1271 00e0 19       		.uleb128 0x19
 1272 00e1 11       		.uleb128 0x11
 1273 00e2 01       		.uleb128 0x1
 1274 00e3 12       		.uleb128 0x12
 1275 00e4 06       		.uleb128 0x6
 1276 00e5 40       		.uleb128 0x40
 1277 00e6 18       		.uleb128 0x18
 1278 00e7 9742     		.uleb128 0x2117
 1279 00e9 19       		.uleb128 0x19
 1280 00ea 01       		.uleb128 0x1
 1281 00eb 13       		.uleb128 0x13
 1282 00ec 00       		.byte	0
 1283 00ed 00       		.byte	0
 1284 00ee 12       		.uleb128 0x12
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 32


 1285 00ef 05       		.uleb128 0x5
 1286 00f0 00       		.byte	0
 1287 00f1 03       		.uleb128 0x3
 1288 00f2 0E       		.uleb128 0xe
 1289 00f3 3A       		.uleb128 0x3a
 1290 00f4 0B       		.uleb128 0xb
 1291 00f5 3B       		.uleb128 0x3b
 1292 00f6 05       		.uleb128 0x5
 1293 00f7 49       		.uleb128 0x49
 1294 00f8 13       		.uleb128 0x13
 1295 00f9 02       		.uleb128 0x2
 1296 00fa 18       		.uleb128 0x18
 1297 00fb 00       		.byte	0
 1298 00fc 00       		.byte	0
 1299 00fd 13       		.uleb128 0x13
 1300 00fe 34       		.uleb128 0x34
 1301 00ff 00       		.byte	0
 1302 0100 03       		.uleb128 0x3
 1303 0101 0E       		.uleb128 0xe
 1304 0102 3A       		.uleb128 0x3a
 1305 0103 0B       		.uleb128 0xb
 1306 0104 3B       		.uleb128 0x3b
 1307 0105 05       		.uleb128 0x5
 1308 0106 49       		.uleb128 0x49
 1309 0107 13       		.uleb128 0x13
 1310 0108 02       		.uleb128 0x2
 1311 0109 18       		.uleb128 0x18
 1312 010a 00       		.byte	0
 1313 010b 00       		.byte	0
 1314 010c 14       		.uleb128 0x14
 1315 010d 2E       		.uleb128 0x2e
 1316 010e 01       		.byte	0x1
 1317 010f 3F       		.uleb128 0x3f
 1318 0110 19       		.uleb128 0x19
 1319 0111 03       		.uleb128 0x3
 1320 0112 0E       		.uleb128 0xe
 1321 0113 3A       		.uleb128 0x3a
 1322 0114 0B       		.uleb128 0xb
 1323 0115 3B       		.uleb128 0x3b
 1324 0116 05       		.uleb128 0x5
 1325 0117 27       		.uleb128 0x27
 1326 0118 19       		.uleb128 0x19
 1327 0119 49       		.uleb128 0x49
 1328 011a 13       		.uleb128 0x13
 1329 011b 11       		.uleb128 0x11
 1330 011c 01       		.uleb128 0x1
 1331 011d 12       		.uleb128 0x12
 1332 011e 06       		.uleb128 0x6
 1333 011f 40       		.uleb128 0x40
 1334 0120 18       		.uleb128 0x18
 1335 0121 9742     		.uleb128 0x2117
 1336 0123 19       		.uleb128 0x19
 1337 0124 01       		.uleb128 0x1
 1338 0125 13       		.uleb128 0x13
 1339 0126 00       		.byte	0
 1340 0127 00       		.byte	0
 1341 0128 15       		.uleb128 0x15
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 33


 1342 0129 2E       		.uleb128 0x2e
 1343 012a 00       		.byte	0
 1344 012b 3F       		.uleb128 0x3f
 1345 012c 19       		.uleb128 0x19
 1346 012d 03       		.uleb128 0x3
 1347 012e 0E       		.uleb128 0xe
 1348 012f 3A       		.uleb128 0x3a
 1349 0130 0B       		.uleb128 0xb
 1350 0131 3B       		.uleb128 0x3b
 1351 0132 05       		.uleb128 0x5
 1352 0133 27       		.uleb128 0x27
 1353 0134 19       		.uleb128 0x19
 1354 0135 11       		.uleb128 0x11
 1355 0136 01       		.uleb128 0x1
 1356 0137 12       		.uleb128 0x12
 1357 0138 06       		.uleb128 0x6
 1358 0139 40       		.uleb128 0x40
 1359 013a 18       		.uleb128 0x18
 1360 013b 9742     		.uleb128 0x2117
 1361 013d 19       		.uleb128 0x19
 1362 013e 00       		.byte	0
 1363 013f 00       		.byte	0
 1364 0140 16       		.uleb128 0x16
 1365 0141 2E       		.uleb128 0x2e
 1366 0142 00       		.byte	0
 1367 0143 3F       		.uleb128 0x3f
 1368 0144 19       		.uleb128 0x19
 1369 0145 03       		.uleb128 0x3
 1370 0146 0E       		.uleb128 0xe
 1371 0147 3A       		.uleb128 0x3a
 1372 0148 0B       		.uleb128 0xb
 1373 0149 3B       		.uleb128 0x3b
 1374 014a 05       		.uleb128 0x5
 1375 014b 27       		.uleb128 0x27
 1376 014c 19       		.uleb128 0x19
 1377 014d 49       		.uleb128 0x49
 1378 014e 13       		.uleb128 0x13
 1379 014f 11       		.uleb128 0x11
 1380 0150 01       		.uleb128 0x1
 1381 0151 12       		.uleb128 0x12
 1382 0152 06       		.uleb128 0x6
 1383 0153 40       		.uleb128 0x40
 1384 0154 18       		.uleb128 0x18
 1385 0155 9742     		.uleb128 0x2117
 1386 0157 19       		.uleb128 0x19
 1387 0158 00       		.byte	0
 1388 0159 00       		.byte	0
 1389 015a 17       		.uleb128 0x17
 1390 015b 34       		.uleb128 0x34
 1391 015c 00       		.byte	0
 1392 015d 03       		.uleb128 0x3
 1393 015e 0E       		.uleb128 0xe
 1394 015f 3A       		.uleb128 0x3a
 1395 0160 0B       		.uleb128 0xb
 1396 0161 3B       		.uleb128 0x3b
 1397 0162 05       		.uleb128 0x5
 1398 0163 49       		.uleb128 0x49
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 34


 1399 0164 13       		.uleb128 0x13
 1400 0165 3F       		.uleb128 0x3f
 1401 0166 19       		.uleb128 0x19
 1402 0167 3C       		.uleb128 0x3c
 1403 0168 19       		.uleb128 0x19
 1404 0169 00       		.byte	0
 1405 016a 00       		.byte	0
 1406 016b 18       		.uleb128 0x18
 1407 016c 21       		.uleb128 0x21
 1408 016d 00       		.byte	0
 1409 016e 49       		.uleb128 0x49
 1410 016f 13       		.uleb128 0x13
 1411 0170 2F       		.uleb128 0x2f
 1412 0171 05       		.uleb128 0x5
 1413 0172 00       		.byte	0
 1414 0173 00       		.byte	0
 1415 0174 19       		.uleb128 0x19
 1416 0175 34       		.uleb128 0x34
 1417 0176 00       		.byte	0
 1418 0177 03       		.uleb128 0x3
 1419 0178 0E       		.uleb128 0xe
 1420 0179 3A       		.uleb128 0x3a
 1421 017a 0B       		.uleb128 0xb
 1422 017b 3B       		.uleb128 0x3b
 1423 017c 0B       		.uleb128 0xb
 1424 017d 49       		.uleb128 0x49
 1425 017e 13       		.uleb128 0x13
 1426 017f 3F       		.uleb128 0x3f
 1427 0180 19       		.uleb128 0x19
 1428 0181 02       		.uleb128 0x2
 1429 0182 18       		.uleb128 0x18
 1430 0183 00       		.byte	0
 1431 0184 00       		.byte	0
 1432 0185 1A       		.uleb128 0x1a
 1433 0186 34       		.uleb128 0x34
 1434 0187 00       		.byte	0
 1435 0188 03       		.uleb128 0x3
 1436 0189 08       		.uleb128 0x8
 1437 018a 3A       		.uleb128 0x3a
 1438 018b 0B       		.uleb128 0xb
 1439 018c 3B       		.uleb128 0x3b
 1440 018d 0B       		.uleb128 0xb
 1441 018e 49       		.uleb128 0x49
 1442 018f 13       		.uleb128 0x13
 1443 0190 3F       		.uleb128 0x3f
 1444 0191 19       		.uleb128 0x19
 1445 0192 3C       		.uleb128 0x3c
 1446 0193 19       		.uleb128 0x19
 1447 0194 00       		.byte	0
 1448 0195 00       		.byte	0
 1449 0196 1B       		.uleb128 0x1b
 1450 0197 34       		.uleb128 0x34
 1451 0198 00       		.byte	0
 1452 0199 03       		.uleb128 0x3
 1453 019a 0E       		.uleb128 0xe
 1454 019b 3A       		.uleb128 0x3a
 1455 019c 0B       		.uleb128 0xb
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 35


 1456 019d 3B       		.uleb128 0x3b
 1457 019e 0B       		.uleb128 0xb
 1458 019f 49       		.uleb128 0x49
 1459 01a0 13       		.uleb128 0x13
 1460 01a1 3F       		.uleb128 0x3f
 1461 01a2 19       		.uleb128 0x19
 1462 01a3 3C       		.uleb128 0x3c
 1463 01a4 19       		.uleb128 0x19
 1464 01a5 00       		.byte	0
 1465 01a6 00       		.byte	0
 1466 01a7 00       		.byte	0
 1467              		.section	.debug_aranges,"",%progbits
 1468 0000 7C000000 		.4byte	0x7c
 1469 0004 0200     		.2byte	0x2
 1470 0006 00000000 		.4byte	.Ldebug_info0
 1471 000a 04       		.byte	0x4
 1472 000b 00       		.byte	0
 1473 000c 0000     		.2byte	0
 1474 000e 0000     		.2byte	0
 1475 0010 00000000 		.4byte	.LFB56
 1476 0014 20000000 		.4byte	.LFE56-.LFB56
 1477 0018 00000000 		.4byte	.LFB57
 1478 001c 22000000 		.4byte	.LFE57-.LFB57
 1479 0020 00000000 		.4byte	.LFB58
 1480 0024 14000000 		.4byte	.LFE58-.LFB58
 1481 0028 00000000 		.4byte	.LFB59
 1482 002c 04010000 		.4byte	.LFE59-.LFB59
 1483 0030 00000000 		.4byte	.LFB60
 1484 0034 24000000 		.4byte	.LFE60-.LFB60
 1485 0038 00000000 		.4byte	.LFB61
 1486 003c 20000000 		.4byte	.LFE61-.LFB61
 1487 0040 00000000 		.4byte	.LFB62
 1488 0044 24000000 		.4byte	.LFE62-.LFB62
 1489 0048 00000000 		.4byte	.LFB63
 1490 004c 24000000 		.4byte	.LFE63-.LFB63
 1491 0050 00000000 		.4byte	.LFB64
 1492 0054 18000000 		.4byte	.LFE64-.LFB64
 1493 0058 00000000 		.4byte	.LFB65
 1494 005c 24000000 		.4byte	.LFE65-.LFB65
 1495 0060 00000000 		.4byte	.LFB66
 1496 0064 18000000 		.4byte	.LFE66-.LFB66
 1497 0068 00000000 		.4byte	.LFB67
 1498 006c 18000000 		.4byte	.LFE67-.LFB67
 1499 0070 00000000 		.4byte	.LFB68
 1500 0074 18000000 		.4byte	.LFE68-.LFB68
 1501 0078 00000000 		.4byte	0
 1502 007c 00000000 		.4byte	0
 1503              		.section	.debug_ranges,"",%progbits
 1504              	.Ldebug_ranges0:
 1505 0000 00000000 		.4byte	.LFB56
 1506 0004 20000000 		.4byte	.LFE56
 1507 0008 00000000 		.4byte	.LFB57
 1508 000c 22000000 		.4byte	.LFE57
 1509 0010 00000000 		.4byte	.LFB58
 1510 0014 14000000 		.4byte	.LFE58
 1511 0018 00000000 		.4byte	.LFB59
 1512 001c 04010000 		.4byte	.LFE59
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 36


 1513 0020 00000000 		.4byte	.LFB60
 1514 0024 24000000 		.4byte	.LFE60
 1515 0028 00000000 		.4byte	.LFB61
 1516 002c 20000000 		.4byte	.LFE61
 1517 0030 00000000 		.4byte	.LFB62
 1518 0034 24000000 		.4byte	.LFE62
 1519 0038 00000000 		.4byte	.LFB63
 1520 003c 24000000 		.4byte	.LFE63
 1521 0040 00000000 		.4byte	.LFB64
 1522 0044 18000000 		.4byte	.LFE64
 1523 0048 00000000 		.4byte	.LFB65
 1524 004c 24000000 		.4byte	.LFE65
 1525 0050 00000000 		.4byte	.LFB66
 1526 0054 18000000 		.4byte	.LFE66
 1527 0058 00000000 		.4byte	.LFB67
 1528 005c 18000000 		.4byte	.LFE67
 1529 0060 00000000 		.4byte	.LFB68
 1530 0064 18000000 		.4byte	.LFE68
 1531 0068 00000000 		.4byte	0
 1532 006c 00000000 		.4byte	0
 1533              		.section	.debug_line,"",%progbits
 1534              	.Ldebug_line0:
 1535 0000 9E020000 		.section	.debug_str,"MS",%progbits,1
 1535      02005F01 
 1535      00000201 
 1535      FB0E0D00 
 1535      01010101 
 1536              	.LASF17:
 1537 0000 72656738 		.ascii	"reg8\000"
 1537      00
 1538              	.LASF42:
 1539 0005 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1539      4320342E 
 1539      382E3420 
 1539      32303134 
 1539      30353236 
 1540 0038 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1540      20726576 
 1540      6973696F 
 1540      6E203231 
 1540      31333538 
 1541 006b 30202D66 		.ascii	"0 -ffunction-sections\000"
 1541      66756E63 
 1541      74696F6E 
 1541      2D736563 
 1541      74696F6E 
 1542              	.LASF11:
 1543 0081 5F5F696E 		.ascii	"__int32_t\000"
 1543      7433325F 
 1543      7400
 1544              	.LASF33:
 1545 008b 6973725F 		.ascii	"isr_GetVector\000"
 1545      47657456 
 1545      6563746F 
 1545      7200
 1546              	.LASF45:
 1547 0099 6973725F 		.ascii	"isr_GetState\000"
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 37


 1547      47657453 
 1547      74617465 
 1547      00
 1548              	.LASF40:
 1549 00a6 6361705F 		.ascii	"cap_array\000"
 1549      61727261 
 1549      7900
 1550              	.LASF43:
 1551 00b0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\isr.c\000"
 1551      6E657261 
 1551      7465645F 
 1551      536F7572 
 1551      63655C50 
 1552              	.LASF31:
 1553 00cf 6973725F 		.ascii	"isr_SetPriority\000"
 1553      53657450 
 1553      72696F72 
 1553      69747900 
 1554              	.LASF21:
 1555 00df 6973725F 		.ascii	"isr_Stop\000"
 1555      53746F70 
 1555      00
 1556              	.LASF15:
 1557 00e8 666C6F61 		.ascii	"float\000"
 1557      7400
 1558              	.LASF28:
 1559 00ee 6973725F 		.ascii	"isr_SetVector\000"
 1559      53657456 
 1559      6563746F 
 1559      7200
 1560              	.LASF2:
 1561 00fc 756E7369 		.ascii	"unsigned char\000"
 1561      676E6564 
 1561      20636861 
 1561      7200
 1562              	.LASF35:
 1563 010a 6973725F 		.ascii	"isr_Enable\000"
 1563      456E6162 
 1563      6C6500
 1564              	.LASF29:
 1565 0115 61646472 		.ascii	"address\000"
 1565      65737300 
 1566              	.LASF6:
 1567 011d 6C6F6E67 		.ascii	"long unsigned int\000"
 1567      20756E73 
 1567      69676E65 
 1567      6420696E 
 1567      7400
 1568              	.LASF20:
 1569 012f 6973725F 		.ascii	"isr_Start\000"
 1569      53746172 
 1569      7400
 1570              	.LASF4:
 1571 0139 73686F72 		.ascii	"short unsigned int\000"
 1571      7420756E 
 1571      7369676E 
 1571      65642069 
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 38


 1571      6E7400
 1572              	.LASF39:
 1573 014c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1573      52784275 
 1573      66666572 
 1573      00
 1574              	.LASF38:
 1575 0159 6973725F 		.ascii	"isr_ClearPending\000"
 1575      436C6561 
 1575      7250656E 
 1575      64696E67 
 1575      00
 1576              	.LASF16:
 1577 016a 646F7562 		.ascii	"double\000"
 1577      6C6500
 1578              	.LASF3:
 1579 0171 73686F72 		.ascii	"short int\000"
 1579      7420696E 
 1579      7400
 1580              	.LASF32:
 1581 017b 7072696F 		.ascii	"priority\000"
 1581      72697479 
 1581      00
 1582              	.LASF37:
 1583 0184 6973725F 		.ascii	"isr_SetPending\000"
 1583      53657450 
 1583      656E6469 
 1583      6E6700
 1584              	.LASF22:
 1585 0193 6973725F 		.ascii	"isr_StartEx\000"
 1585      53746172 
 1585      74457800 
 1586              	.LASF14:
 1587 019f 75696E74 		.ascii	"uint32\000"
 1587      333200
 1588              	.LASF0:
 1589 01a6 756E7369 		.ascii	"unsigned int\000"
 1589      676E6564 
 1589      20696E74 
 1589      00
 1590              	.LASF26:
 1591 01b3 6D795F73 		.ascii	"my_string\000"
 1591      7472696E 
 1591      6700
 1592              	.LASF8:
 1593 01bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1593      206C6F6E 
 1593      6720756E 
 1593      7369676E 
 1593      65642069 
 1594              	.LASF19:
 1595 01d4 63796973 		.ascii	"cyisraddress\000"
 1595      72616464 
 1595      72657373 
 1595      00
 1596              	.LASF23:
 1597 01e1 6973725F 		.ascii	"isr_Interrupt\000"
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 39


 1597      496E7465 
 1597      72727570 
 1597      7400
 1598              	.LASF12:
 1599 01ef 696E7433 		.ascii	"int32_t\000"
 1599      325F7400 
 1600              	.LASF9:
 1601 01f7 73697A65 		.ascii	"sizetype\000"
 1601      74797065 
 1601      00
 1602              	.LASF7:
 1603 0200 6C6F6E67 		.ascii	"long long int\000"
 1603      206C6F6E 
 1603      6720696E 
 1603      7400
 1604              	.LASF10:
 1605 020e 63686172 		.ascii	"char\000"
 1605      00
 1606              	.LASF30:
 1607 0213 72616D56 		.ascii	"ramVectorTable\000"
 1607      6563746F 
 1607      72546162 
 1607      6C6500
 1608              	.LASF24:
 1609 0222 77617665 		.ascii	"wave_idx\000"
 1609      5F696478 
 1609      00
 1610              	.LASF36:
 1611 022b 6973725F 		.ascii	"isr_Disable\000"
 1611      44697361 
 1611      626C6500 
 1612              	.LASF44:
 1613 0237 433A5C55 		.ascii	"C:\\Users\\shubhamt\\Documents\\PSoC Creator\\WaveG"
 1613      73657273 
 1613      5C736875 
 1613      6268616D 
 1613      745C446F 
 1614 0265 656E6572 		.ascii	"enerator1\\WaveGenerator1.cydsn\000"
 1614      61746F72 
 1614      315C5761 
 1614      76654765 
 1614      6E657261 
 1615              	.LASF13:
 1616 0284 75696E74 		.ascii	"uint8\000"
 1616      3800
 1617              	.LASF41:
 1618 028a 77617665 		.ascii	"wave_table\000"
 1618      5F746162 
 1618      6C6500
 1619              	.LASF5:
 1620 0295 6C6F6E67 		.ascii	"long int\000"
 1620      20696E74 
 1620      00
 1621              	.LASF18:
 1622 029e 72656733 		.ascii	"reg32\000"
 1622      3200
 1623              	.LASF27:
ARM GAS  C:\Users\shubhamt\AppData\Local\Temp\ccrM77Qe.s 			page 40


 1624 02a4 6C656E67 		.ascii	"length\000"
 1624      746800
 1625              	.LASF1:
 1626 02ab 7369676E 		.ascii	"signed char\000"
 1626      65642063 
 1626      68617200 
 1627              	.LASF34:
 1628 02b7 6973725F 		.ascii	"isr_GetPriority\000"
 1628      47657450 
 1628      72696F72 
 1628      69747900 
 1629              	.LASF25:
 1630 02c7 7468655F 		.ascii	"the_val\000"
 1630      76616C00 
 1631              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
